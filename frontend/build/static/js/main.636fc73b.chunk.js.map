{"version":3,"sources":["actions/types.js","actions/loading.js","actions/alert.js","utils/setAuthToken.js","actions/auth.js","pages/components/Alerts.jsx","assets/logo.png","pages/Login.jsx","pages/elements/CustomRadioButton.jsx","pages/elements/LoadingScreen.jsx","pages/Register.jsx","actions/menu.js","actions/tables.js","actions/subscribe.js","pages/components/Navbar.jsx","pages/components/Dishes.jsx","actions/dish.js","pages/components/DishComponent.jsx","pages/components/PlaceOrder.jsx","actions/history.js","actions/accounts.js","pages/components/Analytics.jsx","pages/components/Help.jsx","pages/components/TableManagement.jsx","pages/components/MyAccount.jsx","pages/components/DataTable/Pagination/index.js","pages/components/DataTable/Search/index.js","pages/components/OrderHistory.jsx","pages/components/Accounts.jsx","actions/employees.js","pages/components/Loading.jsx","pages/components/Employees.jsx","actions/attendance.js","pages/components/Feedback.jsx","pages/components/Tokens.jsx","actions/token.js","assets/subscribe.svg","pages/Subscription.jsx","pages/Dashboard.jsx","pages/Forgot.jsx","pages/routing/PrivateRoute.jsx","reducers/alert.js","reducers/auth.js","reducers/menu.js","reducers/dish.js","reducers/history.js","reducers/tables.js","reducers/accounts.js","reducers/employees.js","reducers/subscribe.js","reducers/token.js","reducers/attendance.js","reducers/index.js","reducers/loading.js","store.js","App.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MENUTYPE","DISH_SUCCESS","DISH_FAIL","REMOVE_DISH","UPDATE_DISH","HISTORY_SUCCESS","HISTORY_FAIL","UPDATE_SUCCESS","UPDATE_FAIL","TABLE_SUCCESS","TABLE_FAIL","ORDER_SUCCESS","ORDER_FAIL","CANCEL_SUCCESS","CANCEL_FAIL","SET_ACCOUNT","FAILED_ACCOUNT","ADD_EMPLOYEE_SUCCESS","ADD_EMPLOYEE_FAIL","DELETE_EMPLOYEE_SUCCESS","DELETE_EMPLOYEE_FAIL","UPDATE_EMPLOYEE_SUCCESS","UPDATE_EMPLOYEE_FAIL","SET_EMPLOYEE_SUCCESS","SET_EMPLOYEE_FAIL","SET_LOADING_TRUE","SET_LOADING_FALSE","SUBSCRIBE_DATA_PASS","SUBSCRIBE_DATA_FAIL","ADD_TOKEN","REMOVE_TOKEN","SET_TOKEN","EMPTY_SUBSCRIPTION","SET_ATTENDANCE","setLoading","dispatch","type","payload","removeLoading","setAlert","msg","alertType","id","uuid","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","res","get","data","login","email","password","config","body","JSON","stringify","post","response","errors","forEach","error","Alerts","alerts","length","map","alert","Alert","severity","prototype","PropTypes","array","isRequired","connect","state","CustomTextField","withStyles","root","color","borderBottomColor","borderColor","TextField","useStyles","makeStyles","theme","LoginInput","width","marginTop","padding","fontSize","mobileLoginInput","propTypes","func","isAuthenticated","bool","loading","auth","classes","React","useState","setMail","setPassword","visible","setVisible","isMobile","useMediaQuery","query","isMobileDevice","handleVisibility","handleEmail","event","target","value","handlePassword","onSubmit","e","preventDefault","to","className","AppBar","position","style","backgroundColor","Toolbar","IconButton","edge","src","Logo","alt","Typography","variant","Box","marginLeft","Divider","name","onChange","InputProps","startAdornment","InputAdornment","placeholder","required","endAdornment","onClick","href","textAlign","marginRight","bottom","CircularProgress","styles","display","flexDirection","border","borderRadius","selectedBox","CustomRadioButton","PlanName","PlanPrice","selected","Radio","checked","LoadingScreen","props","justifyContent","alignContent","height","LinearProgress","Register","register","username","confirmPassword","Phone","Plan","formData","setFormData","Monthly","Quaterly","PlanSelected","setSelected","setMenu","text","getOrders","Tables","getSubscriptionDetails","console","log","flexGrow","menuButton","spacing","mr_20","colorBlack","appBar","background","zIndex","drawer","navBtn","textTransform","themeColor","palette","getContrastText","navHeaderTxt","letterSpacing","paddingLeft","paddingTop","paddingBottom","DividerNav","marginBottom","user","tables","subscribe","menu","logout","anchorEl","setAnchorEl","newanchorEl","setNewAnchorEl","open","Boolean","Nopen","left","setState","isTabletOrMobile","isTabletOrMobileDevice","icons","texts","handleClick","textContent","toggleDrawer","anchor","key","mobileListItems","lst","push","ListItem","i","Button","size","disableRipple","ListItemIcon","ListItemText","List","listItems","j","DateDiff","Math","ceil","abs","SubscriptionEndDate","Date","getTime","Fragment","aria-label","SwipeableDrawer","onClose","onOpen","aria-haspopup","currentTarget","aria-controls","Badge","badgeContent","ImageUrl","Avatar","Menu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","component","SubscriptionStatus","Chip","label","fontFamily","table","Paper","elevation","Grid","container","item","sm","xs","tableNo","Drawer","customInput","customFileInput","customMobileFileInput","customText","Dishes","Categories","addDish","DishName","Description","Category","Price","tags","myFile","FormData","append","deleteDish","DeleteCategory","DishID","DishImageName","updateDish","OldFileName","availableDish","Status","mtags","setTags","utags","setUpdateTags","openAddDialog","setOpen","openUpdateDialog","setUpdateOpen","searchDish","setSearch","DishPic","setDishPic","DishImage","setDishImage","updateDishPic","setUpdateDishPic","updateDishImage","setUpdateDishImage","setData","editFormData","setEditData","Tags","dishID","setDishID","onUpdateChange","optionsCategory","setOptionCategories","handleClose","handleUpdateClose","onSubmitDelete","onEditClick","onSubmitStatus","handleSearch","getUniqueCategories","filter","pos","indexOf","allDishes","toUpperCase","Card","CardContent","join","CardActions","FileName","startIcon","Available","disableElevation","fullWidth","Dialog","DialogTitle","nTag","Object","keys","onSubmitForm","DialogContent","files","URL","createObjectURL","accept","Autocomplete","freeSolo","options","onInputChange","newInputValue","renderInput","params","tag","FormControlLabel","control","Checkbox","DialogActions","onSubmitUpdateForm","DishComponent","counter","setCounter","useEffect","cart","element","units","price","handleAddFunc","details","placeOrder","Dish","TableNo","TotalBill","SubTotal","CustomerName","useTheme","setValue","orderCart","setCart","handleChange","newValue","handleChangeIndex","index","TabPanel","children","other","role","hidden","aria-labelledby","p","newCategories","undefined","allTabs","UniqueCategories","Tab","order","temp","support","category","allPanels","dir","direction","getSubtotal","getTotalCharges","Charges","Taxes","totalCharges","TaxType","Number","parseFloat","Amount","handleSubmit","Tabs","scrollButtons","axis","onChangeIndex","borderTopLeftRadius","borderTopRightRadius","borderRight","getAccounts","shadowBox","boxShadow","customCard","cardRed","cardBlue","cardYellow","cardGreen","Ratings","RatingsMob","history","accounts","allDates","finalData","finalLabels","feedbacks","setFeedbacks","getCount","date","cnt","getEarnings","CompletedDateOrder","k","AmountType","Credit","getDebits","totalDebits","Debit","getAvgStars","num","parseInt","stars","toFixed","Axios","then","catch","err","m","uniqueDates","ar","Today","now","toLocaleString","split","toString","LineOptions","responsive","scales","xAxes","stacked","yAxes","legend","animation","duration","easing","LineData","labels","datasets","borderWidth","verticalAlign","overflow","margin","Rating","precision","readOnly","ColorButton","lightGreen","sendMessage","message","subject","Subject","setSubject","Message","setMessage","rows","Accordion","AccordionSummary","expandIcon","AccordionDetails","OrderCancel","RestaurantId","OrderId","OrderComplete","searchTable","handleCancel","RestaurantID","handleComplete","OrderType","notes","Orders","Quantity","CustomerAddress","mobileAllTables","allTables","pink","green","orange","deepOrange","mBox","basicUpdate","RestaurantName","Location","nTables","updateName","updateLocation","updateTable","addTax","Name","Type","removeTax","updateUPI","upiID","taxData","setTaxData","fileDialogOpen","setDialogOpen","editName","setName","editLocation","setLocation","editTables","setTables","UPI","setUPI","openName","setNameClose","openLocation","setLocationClose","openUPI","setUPIDialogClose","openTable","setTableClose","srcImg","setImg","setFile","handleChangeName","handleCloseName","handleChangeLocation","handleCloseLocation","handleChangeTable","handleChangeUPI","handleCloseTable","openNameDialog","openLocationDialog","openTableDialog","handleCloseUPIDialog","handleFileDialogClose","handleUPISubmit","handleNameSubmit","handleLocationSubmit","handleTableSubmit","handleImageSubmit","handleAddTax","handleChangeImage","Header","tax","TaxName","select","encType","UPIID","alignSelf","paddingRight","PaginationComponent","total","itemsPerPage","currentPage","onPageChange","totalPages","setTotalPages","paginationItems","useMemo","pages","Pagination","Item","active","Prev","disabled","Next","Search","onSearch","search","useRowStyles","borderBottom","searchOrder","totalItems","setTotalItems","setCurrentPage","historyData","computedOrders","slice","Row","row","TableRow","TableCell","scope","CompletedTimeOrder","colSpan","Collapse","in","timeout","unmountOnExit","gutterBottom","Table","TableHead","TableBody","historyRow","Rate","TableContainer","fontWeight","_id","page","setAccount","amountType","particulars","debit","credit","Particulars","setParticulars","setAmount","handleOpen","getTotalCredit","getTotalDebit","TotalDebit","accountsData","computedAccounts","RadioGroup","reverse","getEmployees","Loading","alignCenter","mtb10","present","absent","Box1","Box2","Box3","employees","attendance","saveEmployee","EmployeeName","EmployeeAddress","EmployeePost","EmployeeSalary","EmployeePhone","EmployeeDOB","EmployeeAadhar","EmployeePan","EmployeeProfilePic","EmployeeAadharPic","EmployeePanPic","resp","deleteEmployee","EmpID","ImageFileName","AadharFileName","PanFileName","EmpId","saveAttendance","getAttendance","StartDate","EndDate","openAddEmployee","setOpenEmployee","openAttendance","setOpenAttendance","openEmployeeDetails","setOpenDetails","singleEmpData","setEmpData","showTable","setShowTable","setDates","EmpDetails","setDetails","EmpDocuments","setEmpDocuments","ProfilePic","setProfilePic","handleOpenAttendanceDialog","handleCloseAttendanceDialog","handleCloseDialog","handleOpenDialog","handleChangeDocuments","handleFormSubmit","EmployeeView","employee","downloadFile","fileUrl","newWindow","window","document","write","location","DeleteEmployee","handleCloseView","AttendanceTable","attendanceData","computedAttendance","paging","nAttendance","getTotalPresent","getTotalAbsent","sDay","eDay","diffDay","getTotalDays","inTime","outTime","EmployeeDetails","setStartDate","setEndDate","EmpPost","Salary","DOB","AadharFileUrl","cursor","textDecoration","AadharNo","PanFileUrl","PanNo","handleGetAttendance","InputLabelProps","shrink","inputProps","ImageFileUrl","Address","EmployeeTable","employeeData","computedEmployees","emp","toLowerCase","includes","AttendanceDialog","setInTime","setOutTime","setResp","checkAttendance","maxWidth","empID","mdata","today","toISOString","singleEmployeeID","mt10","FeedbacksListGrid","RatingHeading","customPaper","Feedback","feedback","mlr10","tokens","getTokens","Tokens","addToken","NoOfPersons","removeToken","CName","NOP","tokenNo","changeStatus","NumberOfPeople","setPeople","handleChangeStatus","allTokens","addDialog","Parent","borderLeft","Brand","BrandLogo","BrandName","Information","mobParent","loadScript","Promise","resolve","script","createElement","onload","onerror","appendChild","updateSubscription","payment_id","order_id","PlanType","RAZORPAYKEY","currency","amount","image","handler","razorpay_payment_id","razorpay_order_id","prefill","contact","Razorpay","SubscriptionPlan","SubscribeImage","content","contentMobile","chooserMenu","setDate","getDate","Forgot","setEmail","otp","setOtp","setConfirmPassword","visibility","showAlert","setType","handleOTP","handleConfirmPassword","onSubmitChange","Component","rest","render","initialState","action","getItem","setItem","removeItem","dish","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","customTheme","createMuiTheme","typography","App","ThemeProvider","exact","path","Login","Dashboard","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.636fc73b.chunk.js","sourcesContent":["export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const SET_MENUTYPE = 'SET_MENUTYPE';\nexport const DISH_SUCCESS = 'DISH_SUCCESS';\nexport const DISH_FAIL = 'DISH_FAIL';\nexport const REMOVE_DISH = 'REMOVE_DISH';\nexport const UPDATE_DISH = 'UPDATE_DISH';\nexport const HISTORY_SUCCESS = 'HISTORY_SUCCESS';\nexport const HISTORY_FAIL = 'HISTORY_FAIL';\nexport const UPDATE_SUCCESS = 'UPDATE_SUCCESS';\nexport const UPDATE_FAIL = 'UPDATE_FAIL';\nexport const QRCODES_SUCCESS = 'QRCODES_SUCCESS';\nexport const QRCODES_FAIL = 'QRCODES_FAIL';\nexport const TABLE_SUCCESS = 'TABLE_SUCCESS';\nexport const TABLE_FAIL = 'TABLE_FAIL';\nexport const ORDER_SUCCESS = 'ORDER_SUCCESS';\nexport const ORDER_FAIL = 'ORDER_FAIL';\nexport const CANCEL_SUCCESS = 'CANCEL_SUCCESS';\nexport const CANCEL_FAIL = 'CANCEL_FAIL';\nexport const UPLOAD_SUCCESS = 'UPLOAD_SUCCESS';\nexport const UPLOAD_FAIL = 'UPLOAD_FAIL';\nexport const REMOVE_CART = 'REMOVE_CART';\nexport const ADD_CART = 'ADD_CART';\nexport const SET_ACCOUNT = 'SET_ACCOUNT';\nexport const FAILED_ACCOUNT = 'FAILED_ACCOUNT';\nexport const ADD_EMPLOYEE_SUCCESS = 'ADD_EMPLOYEE_SUCCESS';\nexport const ADD_EMPLOYEE_FAIL = 'ADD_EMPLOYEE_FAIL';\nexport const DELETE_EMPLOYEE_SUCCESS = 'DELETE_EMPLOYEE_SUCCESS';\nexport const DELETE_EMPLOYEE_FAIL = 'DELETE_EMPLOYEE_FAIL';\nexport const UPDATE_EMPLOYEE_SUCCESS = 'UPDATE_EMPLOYEE_SUCCESS';\nexport const UPDATE_EMPLOYEE_FAIL = 'UPDATE_EMPLOYEE_FAIL';\nexport const SET_EMPLOYEE_SUCCESS = 'SET_EMPLOYEE_SUCCESS';\nexport const SET_EMPLOYEE_FAIL = 'SET_EMPLOYEE_FAIL';\nexport const SET_LOADING_TRUE = 'SET_LOADING_TRUE';\nexport const SET_LOADING_FALSE = 'SET_LOADING_FALSE';\nexport const SUBSCRIBE_DATA_PASS = 'SUBSCRIBE_DATA_PASS';\nexport const SUBSCRIBE_DATA_FAIL = 'SUBSCRIBE_DATA_FAIL';\nexport const ADD_TOKEN = 'ADD_TOKEN';\nexport const REMOVE_TOKEN = 'REMOVE_TOKEN';\nexport const SET_TOKEN = 'SET_TOKEN';\nexport const EMPTY_SUBSCRIPTION = 'EMPTY_SUBSCRIPTION';\nexport const SET_ATTENDANCE = 'SET_ATTENDANCE';","import {SET_LOADING_TRUE,SET_LOADING_FALSE} from './types';\r\n\r\nexport const setLoading = () => dispatch =>{\r\n    dispatch({\r\n        type:SET_LOADING_TRUE,\r\n        payload:true\r\n    });\r\n};\r\n\r\nexport const removeLoading = () => dispatch =>{\r\n    dispatch({\r\n        type:SET_LOADING_FALSE,\r\n        payload:false\r\n    });\r\n};","import {v4 as uuid} from 'uuid';\nimport { SET_ALERT , REMOVE_ALERT } from './types';\n\nimport axios from 'axios';\nimport { removeLoading } from \"./loading\";\n\nexport const setAlert = (msg, alertType) => dispatch => {\n    \n    const id = uuid();\n    dispatch({\n        type : SET_ALERT,\n        payload : { msg, alertType, id }\n    });\n\n    setTimeout(()=>\n        dispatch({\n            type : REMOVE_ALERT,\n            payload : id\n        })\n    ,5000);\n}\n\nexport const sendMessage = ({message,subject}) => async dispatch =>{\n    try{\n        const config = {\n            headers : {\n                'Content-Type':'application/json'\n            }\n        }\n        const body = JSON.stringify({\n            message : message,\n            subject : subject\n        });\n        await axios.post(\"/api/help/send\",body,config);\n        dispatch(setAlert(\"Thanks for contacting us.\",\"success\"));\n        dispatch(removeLoading());\n\n    }catch(err){\n        console.error(err);\n        dispatch(setAlert(\"Some error occurred.\",\"error\"));\n        dispatch(removeLoading());\n    }\n};","import axios from 'axios';\n\nconst setAuthToken = token => {\n\n    if(token){\n        axios.defaults.headers.common['x-auth-token'] = token;\n    }else{\n        delete axios.defaults.headers.common['x-auth-token'];\n    }\n};\n\nexport default setAuthToken;","import { \n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT, \n    UPDATE_FAIL,\n    UPDATE_SUCCESS,\n    EMPTY_SUBSCRIPTION\n} from './types';\n\nimport { setAlert } from './alert';\nimport setAuthToken from '../utils/setAuthToken';\nimport axios from 'axios';\nimport { removeLoading } from './loading';\n\n//Load User\nexport const loadUser = () => async dispatch => {\n    if(localStorage.token){\n        setAuthToken(localStorage.token);\n    }\n    try {\n        const res = axios.get('/api/auth');\n        const data = (await res).data;\n        dispatch({\n            type : USER_LOADED,\n            payload : data\n        });\n\n    } catch (err) {\n        dispatch({\n            type : AUTH_ERROR\n        });\n    }\n}\n\n//Register User\nexport const register = ({ username, email, password, Phone, Plan}) => async dispatch => {\n\n    const config = {\n        headers : {\n            'Content-Type':'application/json'\n        }\n    }\n    const body = JSON.stringify({username,email,password,Phone,Plan});\n    try {\n        \n        const res = await axios.post('/api/users',body,config);\n        \n        dispatch({\n            type : REGISTER_SUCCESS,\n            payload : res.data\n        });\n        dispatch(removeLoading());\n\n        dispatch(loadUser());\n\n    } catch (err) {\n\n        dispatch(removeLoading());\n        if(err.response){\n            const errors = err.response.data.errors;\n            if(errors){\n                errors.forEach(error=> dispatch(setAlert(error.msg,'error')));\n            }\n        }else{\n            dispatch(setAlert(\"Server Error\",\"error\"));\n        }\n        dispatch({\n            type : REGISTER_FAIL,\n        });\n        \n    }\n\n}\n\n//Login User\nexport const login = (email , password) => async dispatch => {\n\n    const config = {\n        headers : {\n            'Content-Type':'application/json'\n        }\n    }\n    const body = JSON.stringify({email,password});\n\n    try {\n        \n        const res = await axios.post('/api/auth',body,config);\n\n        dispatch({\n            type : LOGIN_SUCCESS,\n            payload : res.data\n        });\n\n        dispatch(loadUser());\n        dispatch(removeLoading());\n\n    } catch (err) {\n        if(err.response){\n            const errors = err.response.data.errors;\n            if(errors){\n                errors.forEach(error=> dispatch(setAlert(error.msg,'error')));\n            }\n        }\n        dispatch({\n            type : LOGIN_FAIL,\n        });\n        dispatch(removeLoading());\n    }\n\n}\n\n//Logout User\nexport const logout = () => dispatch => {\n    dispatch({ type: EMPTY_SUBSCRIPTION });\n    dispatch({ type : LOGOUT });\n};\n\n//Update User\nexport const basicUpdate = ({RestaurantName,Location,nTables,Phone}) => async dispatch => {\n    try {\n        const config = {\n            headers : {\n                'Content-Type':'application/json'\n            }\n        }\n        const body = JSON.stringify({RestaurantName,Location,nTables,Phone});\n        const res = await axios.post('/api/profile',body,config);\n        dispatch({\n            type : UPDATE_SUCCESS,\n            payload : res.data\n        });\n        dispatch(loadUser());\n\n    } catch (err) {\n        if(err.response){\n            const errors = err.response.data.errors;\n            if(errors){\n                errors.forEach(error=> dispatch(setAlert(error.msg,'error')));\n            }\n        }\n        dispatch({\n            type : UPDATE_FAIL,\n        });\n    }\n};\n\nexport const updateName = ({RestaurantName})=>async dispatch=>{\n    try {\n        const config = {\n            headers : {\n                'Content-Type':'application/json'\n            }\n        }\n        const body = JSON.stringify({RestaurantName});\n        const res = await axios.post('/api/profile/name',body,config);\n        dispatch({\n            type : UPDATE_SUCCESS,\n            payload : res.data\n        });\n        dispatch(loadUser());\n    } catch (err) {\n        if(err.response){\n            const errors = err.response.data.errors;\n            if(errors){\n                errors.forEach(error=> dispatch(setAlert(error.msg,'error')));\n            }\n        }\n        dispatch({\n            type : UPDATE_FAIL,\n        });\n    }\n};\n\nexport const updateLocation = ({Location})=>async dispatch=>{\n    try {\n\n        const config = {\n            headers : {\n                'Content-Type':'application/json'\n            }\n        }\n        const body = JSON.stringify({Location});\n        const res = await axios.post('/api/profile/location',body,config);\n        dispatch({\n            type : UPDATE_SUCCESS,\n            payload : res.data\n        });\n        dispatch(loadUser());\n        \n    } catch (err) {\n\n        dispatch({\n            type : UPDATE_FAIL,\n        });\n    }\n};\n\nexport const updateTable = ({nTables})=>async dispatch=>{\n    try {\n        const config = {\n            headers : {\n                'Content-Type':'application/json'\n            }\n        }\n        const body = JSON.stringify({nTables});\n        const res = await axios.post('/api/profile/table',body,config);\n        dispatch({\n            type : UPDATE_SUCCESS,\n            payload : res.data\n        });\n        dispatch(loadUser());\n    } catch (err) {\n\n        if(err.response){\n            const errors = err.response.data.errors;\n            if(errors){\n                errors.forEach(error=> dispatch(setAlert(error.msg,'error')));\n            }\n        }\n        dispatch({\n            type : UPDATE_FAIL,\n        });\n    }\n};\n\nexport const updateUPI = ({upiID})=>async dispatch=>{\n\n    try {\n        const config = {\n            headers : {\n                'Content-Type':'application/json'\n            }\n        };\n        const body = JSON.stringify({upiID});\n        const res = await axios.post('/api/profile/upi',body,config);\n        dispatch({\n            type : UPDATE_SUCCESS,\n            payload : res.data\n        });\n        dispatch(loadUser());\n\n    } catch (err) {\n        dispatch({\n            type : UPDATE_FAIL,\n        });\n        dispatch(setAlert(\"Unable to add upi id\",\"error\"));\n    }\n};\n\nexport const addTax = ({Name, Type, Amount})=>async dispatch=>{\n\n    try {\n        const config = {\n            headers : {\n                'Content-Type':'application/json'\n            }\n        }\n        const body = JSON.stringify({Name, Type, Amount});\n        const res = await axios.post('/api/users/addTax',body,config);\n        if(res.data === \"ok\"){\n            dispatch(setAlert(\"Tax added succesfully\",\"success\"));\n            dispatch(loadUser());\n        }else{\n            dispatch(setAlert(\"Unable to add tax\",\"error\"));\n        }\n\n    } catch (err) {\n\n        dispatch(setAlert(\"Unable to add tax\",\"error\"));\n    }\n};\n\nexport const removeTax = ({Name, Type, Amount})=>async dispatch=>{\n\n    try {\n        const config = {\n            headers : {\n                'Content-Type':'application/json'\n            }\n        }\n        const body = JSON.stringify({Name, Type, Amount});\n        const res = await axios.post('/api/users/removeTax',body,config);\n        if(res.data === \"ok\"){\n            dispatch(setAlert(\"Tax removed succesfully\",\"success\"));\n            dispatch(loadUser());\n        }else{\n            dispatch(setAlert(\"Unable to delete tax\",\"error\"));\n        }\n\n    } catch (err) {\n\n        dispatch(setAlert(\"Unable to delete tax\",\"error\"));\n    }\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Alert from '@material-ui/lab/Alert';\n\nconst Alerts = ( {alerts} ) =>\n    alerts !== null && alerts.length > 0 && alerts.map(alert=>(\n        <Alert key={alert.id} severity={alert.alertType}>{ alert.msg }</Alert>\n));\n\nAlerts.prototype = {\n    alerts : PropTypes.array.isRequired\n}\n\nconst mapStateToProps = state =>({\n    alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alerts);","export default __webpack_public_path__ + \"static/media/logo.51baaaaa.png\";","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../actions/auth';\nimport { setLoading } from '../actions/loading';\nimport Alerts from './components/Alerts';\nimport { useMediaQuery } from 'react-responsive';\nimport { \n    TextField, InputAdornment, IconButton, \n    AppBar, Toolbar, Typography, Divider, Box, CircularProgress  \n} from '@material-ui/core';\nimport { withStyles,makeStyles} from '@material-ui/core/styles';\nimport MailOutlineRoundedIcon from '@material-ui/icons/MailOutlineRounded';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\nimport Logo from '../assets/logo.png';\n\nconst CustomTextField = withStyles({\n    root : {\n        '& label.Mui-focused': {\n            color: '#FFD31D',\n        },\n        '& .MuiInput-underline:after': {\n            borderBottomColor: '#FFD31D',\n        },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n        },\n        '&:hover fieldset': {\n          borderColor: '#FFD31D',\n        },\n        '&.Mui-focused fieldset': {\n          borderColor: '#FFD31D',\n          \n        },\n        }\n    }\n})(TextField);\n\nconst useStyles = makeStyles((theme)=>({\n\n    LoginInput : {\n        width:'30%',\n        marginTop:'20px',\n        padding:'10px',\n        fontSize:'larger'\n    },\n    mobileLoginInput : {\n        width : '100%',\n        marginTop:'20px',\n        padding:'10px',\n        fontSize:'larger'\n    }\n\n}));\n\nfunction Login({login, isAuthenticated, loading, setLoading}){\n    \n    const classes = useStyles();\n    \n    const [email,setMail] = React.useState(\"\");\n    const [password,setPassword] = React.useState(\"\");\n    const [visible,setVisible] = React.useState(false);\n\n    const isMobile = useMediaQuery({ query: '(max-width: 768px)' });\n    const isMobileDevice = useMediaQuery({query: '(max-device-width: 768px)'});\n\n    function handleVisibility(){ if(visible){setVisible(false);}else{setVisible(true)} }\n\n    function handleEmail(event){\n        setMail(event.target.value);\n    }\n    function handlePassword(event){\n        setPassword(event.target.value);\n    }\n\n    const onSubmit = e =>{\n        e.preventDefault();\n        setLoading();\n        login(email,password);\n    }\n\n\n    if(isAuthenticated){\n        return <Redirect to=\"/dashboard\"/>\n    }\n\n    return(\n    <div className=\"LoginParent\">\n        <AppBar position=\"static\" style={{backgroundColor:\"#FFF\"}}>\n            <Toolbar>\n                <IconButton edge=\"start\">\n                    <img src={Logo} width=\"40\" alt=\"Logo\"/>\n                </IconButton>\n                <Typography className=\"logoFont navbar-brand\" variant=\"h6\">\n                    Serve My Table\n                </Typography>\n            </Toolbar>\n        </AppBar>\n        <div className=\"LoginChild\">\n            \n            {\n                isMobile || isMobileDevice ? \n                <form onSubmit={e=>onSubmit(e)}>\n                <Box style={{marginLeft:\"5px\"}}>\n                    <p className=\"mFont\">Login to Serve My Table Account</p>\n                    <Divider/>\n                    <Alerts/>\n                </Box>\n                <div>\n                \n                <CustomTextField \n                    name=\"email\"\n                    onChange={handleEmail} \n                    value={email} \n                    variant=\"outlined\"\n                    className={classes.mobileLoginInput}\n                    InputProps={{\n                        startAdornment:(\n                            <InputAdornment position=\"start\">\n                                <MailOutlineRoundedIcon/>\n                            </InputAdornment>\n                        ),\n                    }}\n                    type=\"email\"\n                    placeholder=\"Email Address *\"\n                    required\n                    />\n            </div>\n            <div>\n                <CustomTextField \n                    name=\"password\" \n                    onChange={handlePassword} \n                    value={password} \n                    variant=\"outlined\"\n                    className={classes.mobileLoginInput}\n                    style={{marginTop:\"5px\"}}\n                    InputProps={{\n                        startAdornment:(\n                            <InputAdornment position=\"start\">\n                                <LockOutlinedIcon/>\n                            </InputAdornment>\n                        ),\n                        endAdornment:(\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                onClick={handleVisibility}\n                                >\n                                {visible ? <VisibilityOffOutlinedIcon/> : <VisibilityOutlinedIcon/>}\n                                </IconButton>\n                            </InputAdornment>\n                        ),\n                    }}\n                    type={visible ? \"text\" : \"password\"}\n                    placeholder=\"Password *\" \n                    required/>\n            </div>\n            <div>\n                <button type=\"submit\" className=\"LoginBtn\">Login</button>\n            </div>\n            <div>\n                <a type=\"button\" href=\"/forgot\" className=\"forgotPassword mFont\">Forgot Password ?</a>\n            </div>\n            <div>\n                <a type=\"button\" className=\"forgotPassword mFont\" href=\"/register\">Don't have account?<strong> Register</strong></a>\n            </div>\n            </form>\n                \n                :\n            \n                <form onSubmit={e=>onSubmit(e)}>\n                    <Box style={{marginLeft:\"5px\"}}>\n                        <p className=\"mFont\" style={{textAlign:\"center\"}}>Login to Serve My Table Account</p>\n                        <Box style={{marginLeft:\"35%\",marginRight:\"35%\"}}>\n                            <Alerts/>\n                        </Box>\n                    </Box>\n                    \n                    <div>\n                        \n                        <CustomTextField \n                            name=\"email\"\n                            onChange={handleEmail} \n                            value={email}\n                            variant=\"outlined\" \n                            className={classes.LoginInput}\n                            InputProps={{\n                                startAdornment:(\n                                    <InputAdornment position=\"start\">\n                                        <MailOutlineRoundedIcon/>\n                                    </InputAdornment>\n                                ),\n                            }}\n                            type=\"email\"\n                            placeholder=\"Email Address *\"\n                            required\n                            />\n                    </div>\n                    <div>\n                        <CustomTextField \n                            name=\"password\" \n                            onChange={handlePassword} \n                            value={password} \n                            className={classes.LoginInput}\n                            variant=\"outlined\" \n                            InputProps={{\n                                startAdornment:(\n                                    <InputAdornment position=\"start\">\n                                        <LockOutlinedIcon/>\n                                    </InputAdornment>\n                                ),\n                                endAdornment:(\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                        onClick={handleVisibility}\n                                        >\n                                        {visible ? <VisibilityOffOutlinedIcon/> : <VisibilityOutlinedIcon/>}\n                                        </IconButton>\n                                    </InputAdornment>\n                                ),\n                            }}\n                            type={visible ? \"text\" : \"password\"}\n                            placeholder=\"Password *\" \n                            required/>\n                    </div>\n                    <div>\n                        <button type=\"submit\" className=\"LoginBtn\">Login</button>\n                    </div>\n                    <div>\n                        <a type=\"button\" href=\"/forgot\" className=\"forgotPassword mFont\">Forgot Password ?</a>\n                    </div>\n                    <div>\n                        <a type=\"button\" className=\"forgotPassword mFont\" href=\"/register\">Don't have account?<strong> Register</strong></a>\n                    </div>\n                    {\n                    loading &&\n                    <Box style={{position:\"relative\", bottom:300}}>\n                        <CircularProgress/>\n                    </Box>\n                    }\n                </form>\n            }\n        </div>\n    </div>\n    );      \n      \n}\n\nlogin.propTypes = {\n    login : PropTypes.func.isRequired,\n    isAuthenticated : PropTypes.bool,\n    loading : PropTypes.bool,\n    setLoading : PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    loading : state.loading,\n});\n\nexport default connect(mapStateToProps,{login, setLoading})(Login);","import React from 'react';\r\n\r\nimport { Box, Typography, Radio } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n    Box:{\r\n        padding:10,\r\n        display :\"flex\",\r\n        flexDirection:\"row\",\r\n        border:\"1px solid #e0e0e0\",\r\n        borderRadius : 5,    \r\n    },\r\n    selectedBox:{\r\n        padding:10,\r\n        display :\"flex\",\r\n        flexDirection:\"row\",\r\n        border:\"1px solid #3F51B5\",\r\n        borderRadius : 5,\r\n    }\r\n};\r\n\r\nfunction CustomRadioButton({PlanName,PlanPrice,selected,onClick}) {\r\n    \r\n    return (\r\n        <Box style={ !selected ? styles.Box : styles.selectedBox}>\r\n            <Box>\r\n                <Radio color=\"primary\" checked={selected} onClick={onClick}/>\r\n            </Box>\r\n            <Box textAlign=\"left\">\r\n                <Typography className=\"mFont\">{PlanName}</Typography>\r\n                <Typography className=\"mFont\" color=\"textSecondary\"> Rs {PlanPrice}</Typography>\r\n            </Box>    \r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default CustomRadioButton;","import React from 'react';\r\nimport { Box, LinearProgress } from '@material-ui/core';\r\nimport Logo from '../../assets/logo.png';\r\n\r\nfunction LoadingScreen(props) {\r\n    \r\n    return (\r\n        <Box style={{\r\n            display:\"flex\",\r\n            justifyContent:\"center\",\r\n            alignContent:'center',\r\n            marginTop:'20%',\r\n        }}>\r\n            <Box>\r\n                <img src={Logo} height={50} alt=''/>\r\n                <LinearProgress /> \r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default LoadingScreen;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { setAlert } from '../actions/alert';\nimport { setLoading } from '../actions/loading';\nimport { register } from '../actions/auth';\nimport Alerts from './components/Alerts';\nimport Logo from '../assets/logo.png';\nimport { useMediaQuery } from 'react-responsive';\nimport { \n    TextField, InputAdornment, IconButton, \n    AppBar, Toolbar, Typography, Divider, \n    Box\n} from '@material-ui/core';\nimport { withStyles,makeStyles} from '@material-ui/core/styles';\nimport PersonOutlineOutlinedIcon from '@material-ui/icons/PersonOutlineOutlined';\nimport MailOutlineRoundedIcon from '@material-ui/icons/MailOutlineRounded';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport PhoneOutlinedIcon from '@material-ui/icons/PhoneOutlined';\nimport CustomRadioButton from './elements/CustomRadioButton';\nimport LoadingScreen from './elements/LoadingScreen';\n\nconst CustomTextField = withStyles({\n    root : {\n        '& label.Mui-focused': {\n            color: '#FFD31D',\n        },\n        '& .MuiInput-underline:after': {\n            borderBottomColor: '#FFD31D',\n        },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n        },\n        '&:hover fieldset': {\n          borderColor: '#FFD31D',\n        },\n        '&.Mui-focused fieldset': {\n          borderColor: '#FFD31D',\n          \n        },\n        }\n    }\n})(TextField);\nconst useStyles = makeStyles((theme)=>({\n\n    LoginInput : {\n        width:'30%',\n        marginTop:'20px',\n        padding:'10px',\n        fontSize:'larger'\n    },\n    mobileLoginInput : {\n        width : '100%',\n        marginTop:'20px',\n        padding:'10px',\n        fontSize:'larger'\n    }\n\n}));\n\nfunction Register({ setAlert,setLoading,register,isAuthenticated,loading }){\n    \n    const classes = useStyles();\n\n    const [formData , setFormData] = React.useState({\n        username : '',\n        email : '',\n        password : '',\n        confirmPassword : '',\n        Phone : null,\n        Plan : 'Monthly',\n    });\n    \n    const isMobile = useMediaQuery({ query: '(max-width: 768px)' });\n    const isMobileDevice = useMediaQuery({query: '(max-device-width: 768px)'});\n\n    const [PlanSelected,setSelected] = React.useState({\n        Monthly : true,\n        Quaterly : false,\n    });\n\n    const { username, email, password, confirmPassword, Phone, Plan } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name] : e.target.value });\n\n    const onSubmit = e =>{\n        e.preventDefault();\n        if(username === ''){\n            setAlert('Please fill the username field.','error');\n        }else\n        if(email === ''){\n            setAlert('Please fill the email field.','error');\n        }else\n        if(Phone === null){\n            setAlert('Please fill the phone field.','error');\n        }else\n        if(password === ''){\n            setAlert('Please fill the password field.','error');\n        }else\n        if(confirmPassword === ''){\n            setAlert('Please fill the confirm password field.','error');\n        }else\n        if(password === confirmPassword){\n            register({ username, email, password, Phone, Plan });\n            setLoading();\n        }else{\n            setAlert('Password do not match','error');\n        }\n    }\n\n    if(isAuthenticated){\n        return <Redirect to=\"/dashboard\"/>\n    }\n    \n    if(loading){\n        return <LoadingScreen/>\n    }\n\n    return (\n        <div className=\"LoginParent\">\n            <AppBar position=\"static\" style={{backgroundColor:\"#FFF\"}}>\n                <Toolbar>\n                    <IconButton edge=\"start\">\n                        <img src={Logo} width=\"40\" alt=\"Logo\"/>\n                    </IconButton>\n                    <Typography className=\"logoFont navbar-brand\" variant=\"h6\">\n                        Serve My Table\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <div className=\"LoginChild\">\n                {isMobile || isMobileDevice ? \n                    <form onSubmit={e=> onSubmit(e)}>\n                    <Box style={{marginLeft:\"5px\"}}>\n                        <p className=\"mFont\" style={{textAlign:\"center\"}}>Register with Serve My Table Account</p>\n                        <Divider/>\n                        <Alerts/>\n                    </Box>\n                    <div>\n                        <p className=\"mFont\" style={{marginTop:10}}>Select Plan</p>\n                        <Box display=\"flex\" alignContent=\"center\" justifyContent=\"center\">\n                        <Box flexDirection=\"row\" display=\"flex\" justifyContent=\"space-between\">\n                            <Box>\n                                <CustomRadioButton \n                                    PlanName=\"Monthly\" \n                                    PlanPrice=\"1000\" \n                                    selected={PlanSelected.Monthly}\n                                    onClick={()=>{setSelected({\n                                        Monthly:true,\n                                        Quaterly:false\n                                    })\n                                    setFormData({...formData,Plan:\"MONTHLY\"});\n                                    }\n                                    }    \n                                    />\n                            </Box>\n                            <Box>\n                                <CustomRadioButton \n                                    PlanName=\"Quaterly\" \n                                    PlanPrice=\"3000\" \n                                    selected={PlanSelected.Quaterly}\n                                    onClick={()=>{setSelected({\n                                        Monthly:false,\n                                        Quaterly:true\n                                    })\n                                    setFormData({...formData,Plan:\"QUATERLY\"});\n                                    }\n                                    }\n                                    />\n                            </Box>\n                        </Box>\n                        </Box>\n                    </div>\n                    <div>\n                        <CustomTextField \n                            className={classes.mobileLoginInput}\n                            variant=\"outlined\" \n                            name=\"username\" \n                            type=\"text\"\n                            onChange={e => onChange(e)}\n                            value={username} \n                            InputProps={{\n                                startAdornment:(\n                                    <InputAdornment position=\"start\">\n                                        <PersonOutlineOutlinedIcon/>\n                                    </InputAdornment>\n                                ),\n                            }}\n                            placeholder=\"Username *\"\n                            required\n                        />\n                    </div>\n                    <div>\n                        <CustomTextField \n                            className={classes.mobileLoginInput}\n                            variant=\"outlined\"  \n                            name=\"email\" \n                            type=\"email\"\n                            onChange={e => onChange(e)}\n                            value={email}\n                            style={{marginTop:\"5px\"}}\n                            InputProps={{\n                                startAdornment:(\n                                    <InputAdornment position=\"start\">\n                                        <MailOutlineRoundedIcon/>\n                                    </InputAdornment>\n                                ),\n                            }} \n                            placeholder=\"Email Address *\" \n                            required/>\n                    </div>\n                    <div>\n                        <CustomTextField \n                            className={classes.mobileLoginInput}  \n                            name=\"Phone\" \n                            type=\"number\"\n                            variant=\"outlined\"\n                            onChange={e => onChange(e)}\n                            value={Phone}\n                            InputProps={{\n                                startAdornment:(\n                                    <InputAdornment position=\"start\">\n                                        <PhoneOutlinedIcon/>\n                                    </InputAdornment>\n                                ),\n                            }}\n                            style={{marginTop:\"5px\"}} \n                            placeholder=\"Contact No. *\" \n                            required/>\n                    </div>\n                    <div>\n                        <CustomTextField\n                            className={classes.mobileLoginInput} \n                            variant=\"outlined\"\n                            name=\"password\" \n                            type=\"password\"\n                            onChange={e => onChange(e)}\n                            value={password}\n                            InputProps={{\n                                startAdornment:(\n                                    <InputAdornment position=\"start\">\n                                        <LockOutlinedIcon/>\n                                    </InputAdornment>\n                                ),\n                            }}\n                            style={{marginTop:\"5px\"}} \n                            placeholder=\"Password *\" \n                            required/>\n                    </div>\n                    <div>\n                        <CustomTextField\n                            className={classes.mobileLoginInput} \n                            name=\"confirmPassword\"\n                            variant=\"outlined\" \n                            type=\"password\"\n                            onChange={e => onChange(e)}\n                            value={confirmPassword}\n                            InputProps={{\n                                startAdornment:(\n                                    <InputAdornment position=\"start\">\n                                        <LockOutlinedIcon/>\n                                    </InputAdornment>\n                                ),\n                            }}\n                            style={{marginTop:\"5px\"}}  \n                            placeholder=\"Confirm Password *\" \n                            required/>\n                    </div>\n                    <div className=\"termsText\">\n                        <input className=\"mFont\" type=\"checkbox\" required/>\n                        <span className=\"mFont\">&nbsp;\n                            By Checking this you accept all our<br/>\n                            <a href=\"http://www.servemytable.in/tnc\">Terms and Conditions</a> and <a href=\"http://www.servemytable.in/privacy\">Privacy Policies</a>\n                        </span>\n                    </div>\n                    <div>\n                        <button type=\"submit\" className=\"LoginBtn\">Register</button>\n                    </div>\n                </form>\n                :\n                    <form onSubmit={e=> onSubmit(e)}>\n                        <Box style={{marginLeft:\"5px\"}}>\n                            <p className=\"mFont\" style={{textAlign:\"center\"}}>Register with Serve My Table Account</p>\n                            <Box style={{marginLeft:\"35%\",marginRight:\"35%\"}}>\n                                <Alerts/>\n                            </Box>\n                        </Box>\n                        <div>\n                            <p className=\"mFont\">Select Plan</p>\n                            <Box display=\"flex\" alignContent=\"center\" justifyContent=\"center\">\n                            <Box flexDirection=\"row\" display=\"flex\" justifyContent=\"space-between\">\n                                <Box>\n                                    <CustomRadioButton \n                                        PlanName=\"Monthly\" \n                                        PlanPrice=\"1000\" \n                                        selected={PlanSelected.Monthly}\n                                        onClick={()=>{setSelected({\n                                            Monthly:true,\n                                            Quaterly:false\n                                        })\n                                        setFormData({...formData,Plan:\"Monthly\"});\n                                        }\n                                        }    \n                                        />\n                                </Box>\n                                <Box>\n                                    <CustomRadioButton \n                                        PlanName=\"Quaterly\" \n                                        PlanPrice=\"3000\" \n                                        selected={PlanSelected.Quaterly}\n                                        onClick={()=>{setSelected({\n                                            Monthly:false,\n                                            Quaterly:true\n                                        })\n                                        setFormData({...formData,Plan:\"Quaterly\"});\n                                        }\n                                        }\n                                        />\n                                </Box>\n                            </Box>\n                            </Box>\n                        </div>\n                        <div>\n                            <CustomTextField \n                                className={classes.LoginInput} \n                                name=\"username\" \n                                type=\"text\"\n                                variant=\"outlined\"\n                                onChange={e => onChange(e)}\n                                value={username} \n                                InputProps={{\n                                    startAdornment:(\n                                        <InputAdornment position=\"start\">\n                                            <PersonOutlineOutlinedIcon/>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                                style={{marginTop:\"5px\"}}\n                                placeholder=\"Username *\"\n                                required\n                            />\n                        </div>\n                        <div>\n                            <CustomTextField \n                                className={classes.LoginInput}  \n                                name=\"email\" \n                                type=\"email\"\n                                variant=\"outlined\"\n                                onChange={e => onChange(e)}\n                                value={email}\n                                InputProps={{\n                                    startAdornment:(\n                                        <InputAdornment position=\"start\">\n                                            <MailOutlineRoundedIcon/>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                                style={{marginTop:\"5px\"}} \n                                placeholder=\"Email Address *\" \n                                required/>\n                        </div>\n                        <div>\n                            <CustomTextField \n                                className={classes.LoginInput}  \n                                name=\"Phone\" \n                                type=\"number\"\n                                variant=\"outlined\"\n                                onChange={e => onChange(e)}\n                                value={Phone}\n                                InputProps={{\n                                    startAdornment:(\n                                        <InputAdornment position=\"start\">\n                                            <PhoneOutlinedIcon/>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                                style={{marginTop:\"5px\"}} \n                                placeholder=\"Contact No. *\" \n                                required/>\n                        </div>\n                        <div>\n                            <CustomTextField\n                                className={classes.LoginInput} \n                                name=\"password\" \n                                type=\"password\"\n                                variant=\"outlined\"\n                                onChange={e => onChange(e)}\n                                value={password}\n                                InputProps={{\n                                    startAdornment:(\n                                        <InputAdornment position=\"start\">\n                                            <LockOutlinedIcon/>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                                style={{marginTop:\"5px\"}} \n                                placeholder=\"Password *\" \n                                required/>\n                        </div>\n                        <div>\n                            <CustomTextField\n                                className={classes.LoginInput} \n                                name=\"confirmPassword\" \n                                type=\"password\"\n                                variant=\"outlined\"\n                                onChange={e => onChange(e)}\n                                value={confirmPassword}\n                                InputProps={{\n                                    startAdornment:(\n                                        <InputAdornment position=\"start\">\n                                            <LockOutlinedIcon/>\n                                        </InputAdornment>\n                                    ),\n                                }} \n                                style={{marginTop:\"5px\"}} \n                                placeholder=\"Confirm Password *\" \n                                required/>\n                        </div>\n                        <div className=\"termsText\">\n                            <input \n                                className=\"mFont\" \n                                type=\"checkbox\" \n                                style={{backgroundColor:\"#FFD31D\",borderColor:\"#FFD31D\"}}\n                                required/>\n                            <span className=\"mFont\">&nbsp;\n                                By Checking this you accept all our<br/>\n                                <a href=\"http://www.servemytable.in/tnc\">Terms and Conditions</a> and <a href=\"http://www.servemytable.in/privacy\">Privacy Policies</a>\n                            </span>\n                        </div>\n                        \n                        <div>\n                            <button type=\"submit\" className=\"LoginBtn\">Register</button>\n                        </div>\n                    </form>\n                }\n                <a type=\"button\" className=\"forgotPassword mFont\" href=\"/\">Already have an Account?<strong> Login</strong></a>\n            </div>\n        </div>\n    )\n}\n\nRegister.prototype = {\n    setAlert: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n    isAuthenticated : PropTypes.bool,\n    loading : PropTypes.bool,\n    setLoading : PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    loading : state.loading\n});\n\nexport default connect(mapStateToProps,{ setAlert,register,setLoading })(Register);","import { SET_MENUTYPE } from './types';\n\nexport const setMenu = (text) => dispatch => {\n    dispatch({\n        type : SET_MENUTYPE,\n        payload : text\n    });\n};","import {\n    TABLE_SUCCESS, \n    TABLE_FAIL,\n    ORDER_SUCCESS,\n    ORDER_FAIL,\n    CANCEL_SUCCESS,\n    CANCEL_FAIL,\n\n} from './types';\nimport { setAlert } from './alert';\nimport axios from 'axios';\n\nexport const getOrders = () => async dispatch =>{\n\n    try {\n        \n        const Tables = await axios.get('/api/table');\n        dispatch({\n            type : TABLE_SUCCESS,\n            payload : Tables.data\n        });\n\n    } catch (err) {\n        dispatch({\n            type : TABLE_FAIL\n        });\n    }\n};\n\nexport const OrderComplete = ({TableNo,RestaurantId,OrderId}) => async dispatch =>{\n\n    try {\n        const config = {\n            headers : {\n                'Content-Type':'application/json'\n            }\n        }\n        const body = JSON.stringify({TableNo,RestaurantId,OrderId});\n        await axios.post('/api/table/complete',body,config);\n\n        dispatch({\n            type : ORDER_SUCCESS\n        });\n\n        dispatch(getOrders());\n\n    } catch (err) {\n        dispatch({\n            type : ORDER_FAIL\n        });\n    }\n\n};\n\nexport const OrderCancel = ({TableNo,RestaurantId,OrderId}) => async dispatch =>{\n\n    try {\n        \n        const config = {\n            headers : {\n                'Content-Type':'application/json'\n            }\n        }\n        const body = JSON.stringify({TableNo,RestaurantId,OrderId});\n        await axios.post('/api/table/cancel',body,config);\n\n        dispatch({\n            type : CANCEL_SUCCESS\n        });\n\n        dispatch(getOrders());\n\n    } catch (err) {\n        dispatch({\n            type : CANCEL_FAIL\n        });\n    }\n};\n\nexport const placeOrder = ({Dish,TableNo,TotalBill,SubTotal,CustomerName}) => async dispatch => {\n    try{\n        const config = {\n            headers : {\n                'Content-Type':'application/json'\n            }\n        }\n\n        const body = JSON.stringify({Dish,TableNo,TotalBill,SubTotal,CustomerName});\n        await axios.post(\"/api/table/placeorder\",body,config);\n        \n        dispatch(setAlert(\"Order Placed Successfully\",\"success\"));\n       \n        dispatch(getOrders());\n\n    }catch(err){\n        \n        dispatch(setAlert(\"Error occurred\",\"error\"));\n    }\n};","import { SUBSCRIBE_DATA_FAIL, SUBSCRIBE_DATA_PASS } from './types';\r\nimport axios from 'axios';\r\n//import { setAlert } from './alert';\r\n\r\nexport const getSubscriptionDetails = () => async dispatch=>{\r\n    try {\r\n        \r\n        const res = await axios.get(\"/api/subscribe\");\r\n        dispatch({\r\n            type : SUBSCRIBE_DATA_PASS,\r\n            payload : res.data,\r\n        });        \r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({\r\n            type : SUBSCRIBE_DATA_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateSubscription = ({payment_id,order_id}) => async dispatch=>{\r\n    try{\r\n        await axios.post(\"/api/subscribe/update\",{payment_id,order_id});\r\n    }catch(err){\r\n        console.log(err);\r\n    }\r\n};","import React from 'react';\nimport { useMediaQuery } from 'react-responsive'\n\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/auth';\nimport { setMenu } from '../../actions/menu';\n\nimport PropTypes from 'prop-types';\n//import { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n    AppBar, Toolbar, IconButton, Typography, Badge, Grid,\n    Drawer, List, ListItem, ListItemText, SwipeableDrawer, Box,\n    ListItemIcon, Divider, Menu, MenuItem, Button, Avatar,  Paper,\n    Chip } from '@material-ui/core';\n\nimport DehazeIcon from '@material-ui/icons/Dehaze';\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ExitToAppRoundedIcon from '@material-ui/icons/ExitToAppRounded';\nimport DashboardOutlinedIcon from '@material-ui/icons/DashboardOutlined';\nimport DiscFullOutlinedIcon from '@material-ui/icons/DiscFullOutlined';\nimport ReceiptOutlinedIcon from '@material-ui/icons/ReceiptOutlined';\nimport HelpOutlineOutlinedIcon from '@material-ui/icons/HelpOutlineOutlined';\nimport AddShoppingCartOutlinedIcon from '@material-ui/icons/AddShoppingCartOutlined';\nimport FilterTiltShiftOutlinedIcon from '@material-ui/icons/FilterTiltShiftOutlined';\nimport PersonOutlineOutlinedIcon from '@material-ui/icons/PersonOutlineOutlined';\n// import ShoppingBasketOutlinedIcon from '@material-ui/icons/ShoppingBasketOutlined';\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\nimport AccountBalanceWalletOutlinedIcon from '@material-ui/icons/AccountBalanceWalletOutlined';\nimport FeedbackOutlinedIcon from '@material-ui/icons/FeedbackOutlined';\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport DeckIcon from '@material-ui/icons/Deck';\nimport { getOrders } from '../../actions/tables';\nimport { getSubscriptionDetails } from '../../actions/subscribe';\n\nimport Logo from '../../assets/logo.png';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    mr_20: {\n        marginRight: '20px',\n    },\n    colorBlack : {\n        color : '#000'\n    },\n    appBar:{\n        background : '#FFF',\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    navBtn:{\n        width : \"100%\",\n        textAlign : \"left\",\n        padding:0,\n        textTransform:'none',\n        \"&:hover\":{\n            background:'transparent'\n        }\n    },\n    themeColor : {\n        color: theme.palette.getContrastText(\"#ffd31d\"),\n        backgroundColor: \"#ffd31d\",\n    },\n    navHeaderTxt:{\n        letterSpacing:2,\n        paddingLeft:10,\n        paddingTop:10,\n        paddingBottom:10,\n    },\n    DividerNav:{\n        marginTop:10,\n        marginBottom:10\n    }\n}));\n\nfunction Navbar({ logout,setMenu,user,tables,getOrders, getSubscriptionDetails,subscribe,menu }){\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [newanchorEl, setNewAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const Nopen = Boolean(newanchorEl);\n    const [state, setState] = React.useState({left: false});\n    const handleClose = () => { setAnchorEl(null); };\n    const NhandleClose = () => { setNewAnchorEl(null); };\n    const handleProfile = ()=>{ setMenu('My Account'); setAnchorEl(null);};\n    const handleMenu = (event) => { setAnchorEl(event.currentTarget);};\n    const handleNotifications = (event) => { setNewAnchorEl(event.currentTarget); };\n\n    const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1224px)' });\n    const isTabletOrMobileDevice = useMediaQuery({query: '(max-device-width: 1224px)'});\n    const icons = [\n        <DashboardOutlinedIcon/>, //Dashboard\n        <FilterTiltShiftOutlinedIcon/>, //Table Management\n        <DescriptionOutlinedIcon/>, // Tokens\n        <AddShoppingCartOutlinedIcon/>, //Place Order\n        <ReceiptOutlinedIcon/>, //Order History\n        <AccountBalanceWalletOutlinedIcon/>, //Accounts\n        <PeopleOutlineIcon/>, //Employees\n        <DiscFullOutlinedIcon/>, //Dishes\n        <PersonOutlineOutlinedIcon/>, //My Account\n        <FeedbackOutlinedIcon/>,//Feedback\n        <HelpOutlineOutlinedIcon/> //Help\n    ];\n    const texts = [\n        'Dashboard',\n        'Table Management',\n        'Tokens',\n        'Place Order',\n        'Order History',\n        'Accounts',\n        'Employees',\n        'Dishes',\n        'My Account',\n        'Feedback',\n        'Help'\n    ];\n    const handleClick = (event)=>{\n        const value = event.target.textContent;\n        if(value !== ''){\n            setMenu(value);\n        }\n    }\n\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n          return;\n        }\n    \n        setState({ ...state, [anchor]: open });\n    };\n    function mobileListItems(){\n        const lst = [];\n        lst.push(\n        <ListItem key={12} >\n            <Typography className=\"navbar-brand logoFont\" variant=\"h6\">\n                <img src={Logo} width=\"40\" alt=\"Logo\"/> Serve My Table\n            </Typography>\n        </ListItem>\n        );\n        lst.push(<Divider/>);\n        \n        for(var i = 0 ; i < texts.length ; i++){\n            lst.push(\n                <ListItem className={menu === texts[i] ? \"selectedlistItems\" : \"listItems\"} key={texts[i]} onClick={handleClick}>\n                    <Button className={classes.navBtn} \n                    variant=\"text\" size=\"small\" id={texts[i]} disableRipple>\n                        <ListItemIcon>{icons[i]}</ListItemIcon>\n                        <ListItemText>{texts[i]}</ListItemText>\n                    </Button>\n                </ListItem>\n            );\n            \n            if(i === 6){\n                lst.push(\n                    <Divider key=\"divider2\" className={classes.DividerNav}/>\n                );\n                lst.push(\n                    <Typography className={classes.navHeaderTxt}>INFORMATION</Typography>\n                );\n            }\n            if(i === 0){\n                lst.push(<Divider key=\"divider0\" className={classes.DividerNav}/>)\n                lst.push(\n                    <Typography className={classes.navHeaderTxt}>ORDERS</Typography>\n                );\n            }\n            if(i === 4){\n                lst.push(<Divider key=\"divider1\" className={classes.DividerNav}/>)\n                lst.push(\n                    <Typography className={classes.navHeaderTxt}>ACCOUNTS & WORKFORCE</Typography>\n                );\n            }\n            if(i === 9){\n                lst.push(<Divider key=\"divider3\" className={classes.DividerNav}/>)\n                lst.push(\n                    <Typography className={classes.navHeaderTxt}>SUPPORT</Typography>\n                );\n            }\n        }\n        return(\n            <List>\n                {lst}\n            </List>\n            );\n    }\n    function listItems(){\n\n        \n        const lst = [];\n        for(var j = 0 ; j < 5 ; j++){\n            lst.push(<ListItem key={j}></ListItem>);\n        }\n        for(var i = 0 ; i < texts.length ; i++){\n            lst.push(\n                <ListItem className={menu === texts[i] ? \"selectedlistItems\" : \"listItems\"} key={texts[i]} onClick={handleClick}>\n                    <Button className={classes.navBtn} \n                    variant=\"text\" size=\"small\" id={texts[i]} disableRipple>\n                        <ListItemIcon>{icons[i]}</ListItemIcon>\n                        <ListItemText>{texts[i]}</ListItemText>\n                    </Button>\n                </ListItem>\n            );\n            if(i === 6){\n                lst.push(\n                    <Divider key=\"divider2\" className={classes.DividerNav}/>\n                );\n                lst.push(\n                    <Typography className={classes.navHeaderTxt}>INFORMATION</Typography>\n                );\n            }\n            if(i === 0){\n                lst.push(<Divider key=\"divider0\" className={classes.DividerNav}/>)\n                lst.push(\n                    <Typography className={classes.navHeaderTxt}>ORDERS</Typography>\n                );\n            }\n            if(i === 4){\n                lst.push(<Divider key=\"divider1\" className={classes.DividerNav}/>)\n                lst.push(\n                    <Typography className={classes.navHeaderTxt}>ACCOUNTS & WORKFORCE</Typography>\n                );\n            }\n            if(i === 9){\n                lst.push(<Divider key=\"divider3\" className={classes.DividerNav}/>)\n                lst.push(\n                    <Typography className={classes.navHeaderTxt}>SUPPORT</Typography>\n                );\n            }\n\n        }\n        return(\n            <List>\n                {lst}\n            </List>\n            );\n    }\n    const classes = useStyles();\n    \n    setTimeout(()=>{\n        getOrders();\n        getSubscriptionDetails(); \n    },5000);\n\n    const DateDiff = Math.ceil(Math.abs(subscribe.SubscriptionEndDate - new Date().getTime()) / (1000 * 60 * 60 * 24));\n\n    return(\n        <div>\n        <AppBar className={classes.appBar} position=\"relative\">\n        <Toolbar>\n            {isTabletOrMobile || isTabletOrMobileDevice ? \n            <Box>\n            {['left'].map((anchor) => {\n                return(\n                <React.Fragment key={anchor}>\n                    <IconButton onClick={toggleDrawer(anchor, true)} edge=\"start\" aria-label=\"menu\" className={classes.colorBlack}>\n                        <DehazeIcon/>\n                    </IconButton>\n                    <SwipeableDrawer\n                        anchor={anchor}\n                        open={state[anchor]}\n                        onClose={toggleDrawer(anchor, false)}\n                        onOpen={toggleDrawer(anchor, true)}\n                    >\n                        <div onClick={toggleDrawer(anchor, false)}>\n                            {mobileListItems()}\n                        </div>\n                    </SwipeableDrawer>\n                </React.Fragment>);\n            })}\n            </Box> \n            : \n            <Box>\n            {['left'].map((anchor) => {\n                return(\n                <React.Fragment key={anchor}>\n                    <IconButton onClick={toggleDrawer(anchor, true)} edge=\"start\" aria-label=\"menu\" className={classes.colorBlack}>\n                        <DehazeIcon/>\n                    </IconButton>\n                    <SwipeableDrawer\n                        anchor={anchor}\n                        open={state[anchor]}\n                        onClose={toggleDrawer(anchor, false)}\n                        onOpen={toggleDrawer(anchor, true)}\n                    >\n                        <div onClick={toggleDrawer(anchor, false)}>\n                            {listItems()}\n                        </div>\n                    </SwipeableDrawer>\n                </React.Fragment>);\n            })}\n            </Box>}\n            \n            <Typography className=\"navbar-brand logoFont\" variant=\"h6\">\n                <img src={Logo} width=\"40\" alt=\"Logo\"/> Serve My Table\n            </Typography>\n            <div className={classes.menuButton}>\n\n            <IconButton \n                className={classes.colorBlack}  \n                aria-haspopup=\"true\"\n                onClick={handleNotifications}\n                aria-controls=\"notifications-bar\"\n                >\n                <Badge badgeContent={tables.length} color='secondary'>\n                <NotificationsNoneIcon/>\n                </Badge>\n            </IconButton>\n\n            <IconButton className={classes.colorBlack} aria-controls=\"menu-appbar\" aria-haspopup=\"true\"\n                onClick={handleMenu}>\n                {\n                    user === null ? <AccountCircleOutlinedIcon/> :\n                    user.ImageUrl ? \n                    <Avatar className={classes.themeColor} src={user.ImageUrl}></Avatar> :\n                    <Avatar className={classes.themeColor}>{user.username[0]}</Avatar>\n                    \n                }\n            </IconButton>\n            <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                getContentAnchorEl={null}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'center',\n                }}\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'center',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem>\n                    <Typography variant=\"h6\" component=\"h6\">{user&&user.username}</Typography>\n                </MenuItem>\n                <MenuItem style={{marginBottom:0,paddingBottom:0}}>\n                    \n                    {\n                        subscribe&&subscribe.SubscriptionStatus === \"FREETRIAL\" \n                        ?\n                        <Typography className=\"mFont\"> Subscription <Chip size=\"small\" label=\"FREE TRIAL\" style={{backgroundColor:\"#FFD31D\",fontFamily:\"Noto Sans,sans-serif\"}}/></Typography>\n                        :\n                        <Typography className=\"mFont\"> Subscription <Chip size=\"small\" label=\"ACTIVE\" style={{backgroundColor:\"#28a745\",fontFamily:\"Noto Sans,sans-serif\",color:'#FFF'}}/></Typography>\n                    }\n                </MenuItem>\n                <MenuItem style={{marginTop:0,paddingTop:0}}>\n                    <Typography color=\"textSecondary\">Expires in {DateDiff} days.</Typography>\n                </MenuItem>\n                <Divider/>\n                <MenuItem onClick={handleProfile}> <PersonIcon className={classes.mr_20}/>Profile</MenuItem>\n                <MenuItem onClick={logout}> <ExitToAppRoundedIcon className={classes.mr_20}/> Sign Out</MenuItem>\n              </Menu>\n            \n            <Menu\n                id=\"notifications-bar\"\n                anchorEl={newanchorEl}\n                getContentAnchorEl={null}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'center',\n                }}\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'center',\n                }}\n                open={Nopen}\n                onClose={NhandleClose}\n            >\n                <MenuItem key=\"headNotification\">\n                <Typography variant=\"h6\"> Notifications </Typography>\n                <Divider/>\n                </MenuItem>\n                {tables.length > 0 ? \n                tables.map((table)=>\n                <MenuItem key={table.tableNo}>\n                    <Paper elevation={0}>\n                        <Grid container>\n                        <Grid item sm={3} xs={3}>\n                            <Avatar className={classes.themeColor}><DeckIcon/></Avatar>\n                        </Grid>\n                        <Grid item sm={9} xs={9}>\n                            You have an order<br/> at Table No. {table.tableNo}\n                        </Grid>\n                        </Grid>\n                    </Paper>\n                </MenuItem>\n                ) : \n                <MenuItem key=\"NoOrders\">\n                    <Box textAlign=\"center\">\n                        <Typography color=\"textSecondary\">\n                        No orders available\n                        </Typography>\n                    </Box>\n                </MenuItem>\n                }\n            </Menu>\n            </div>   \n        </Toolbar>\n        </AppBar>\n        {!isTabletOrMobile && !isTabletOrMobileDevice && \n            <Drawer\n                variant=\"permanent\"\n                anchor=\"left\"\n                >\n                {listItems()}\n            </Drawer>\n        }\n        </div>\n    );\n}\n\nNavbar.propTypes={\n    logout: PropTypes.func.isRequired,\n    setMenu : PropTypes.func.isRequired,\n    user : PropTypes.object,\n    tables : PropTypes.array,\n    getOrders : PropTypes.func,\n    getSubscriptionDetails : PropTypes.func,\n    menu : PropTypes.string\n}\n\nconst mapStateToProps = state =>({\n    user : state.auth.user,\n    tables : state.tables,\n    subscribe : state.subscribe,\n    menu : state.menu\n});\n\nexport default connect(mapStateToProps,{ logout,setMenu,getOrders,getSubscriptionDetails })(Navbar);","import React from 'react';\nimport { \n    Button, Card, CardActions, CardContent, FormControlLabel,\n    Dialog, DialogActions, DialogContent, Checkbox, TextField,\n    DialogTitle, Divider, Typography, Grid, Box, InputAdornment,\n    Avatar } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useMediaQuery } from 'react-responsive';\nimport {makeStyles} from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nimport { addDish, deleteDish, updateDish, availableDish} from '../../actions/dish';\nimport { loadUser } from '../../actions/auth';\n\nimport Alert from './Alerts';\nimport { setLoading } from '../../actions/loading';\nimport LoadingScreen from '../elements/LoadingScreen';\n\nconst useStyles = makeStyles((theme)=>({\n    customInput:{\n        marginTop:10,\n        marginBottom:10,\n    },\n    customFileInput : {\n        marginTop:10,\n        marginBottom:10,\n        width:theme.spacing(40),\n        border : \"1px solid rgba(0,0,0,0.20)\",\n        padding : 12,\n        borderRadius : 5\n    },\n    customMobileFileInput:{\n        marginTop:10,\n        marginBottom:10,\n        width:\"100%\",\n        border : \"1px solid rgba(0,0,0,0.20)\",\n        padding : 12,\n        borderRadius : 5,\n    },\n    customText:{\n        marginTop:10,\n        marginBottom:10,\n        width:theme.spacing(40),\n        padding : 12,\n    },\n}));\n\n\nfunction Dishes({loading,Categories,Dishes, addDish, updateDish, loadUser, deleteDish, availableDish,setLoading}){\n    \n    const classes = useStyles();\n    const [mtags,setTags] = React.useState({\n        'Veg':false,\n        'Non Veg':false,\n        'Speciality':false,\n        'Sweet':false,\n        'Spicy':false,\n        'Med. Spicy':false,\n    });\n    const [utags,setUpdateTags] = React.useState({\n        'Veg':false,\n        'Non Veg':false,\n        'Speciality':false,\n        'Sweet':false,\n        'Spicy':false,\n        'Med. Spicy':false\n    });\n    const [openAddDialog,setOpen] = React.useState(false);\n    const [openUpdateDialog,setUpdateOpen] = React.useState(false);\n    const [searchDish,setSearch]= React.useState('');\n    const [DishPic,setDishPic] = React.useState(null);\n    const [DishImage,setDishImage] = React.useState(null);\n\n    const [updateDishPic,setUpdateDishPic] = React.useState(null);\n    const [updateDishImage,setUpdateDishImage] = React.useState(null); \n\n    const [formData, setData] = React.useState({\n        DishName:'',\n        Description:'',\n        Category:'',\n        Price: 0,\n    });\n    const [editFormData, setEditData] = React.useState({\n        DishName:'',\n        Description:'',\n        Category:'',\n        Price: 0,\n        OldFileName:null\n    });\n\n    const Tags = [\n        'Veg',\n        'Non Veg',\n        'Speciality',\n        'Sweet',\n        'Spicy',\n        'Med. Spicy',\n    ];\n    \n    const [dishID,setDishID] = React.useState(null);\n\n    const isMobile = useMediaQuery({ query: '(max-width: 768px)' });\n    const isMobileDevice = useMediaQuery({query: '(max-device-width: 768px)'});\n\n    const {DishName, Description, Category, Price} = formData;\n    \n    const onChange = e => setData({ ...formData, [e.target.name] : e.target.value });\n    const onUpdateChange = e => setEditData({ ...editFormData, [e.target.name] : e.target.value });\n\n    const [optionsCategory,setOptionCategories] = React.useState([]);\n\n    function handleClick(){ setOpen(true); }\n    function handleClose(){ setOpen(false); }\n    function handleUpdateClose(){ setUpdateOpen(false); }\n\n    function onSubmitForm(e){\n        e.preventDefault();\n        const identifiers = Object.keys(mtags);\n        const nTag = identifiers.filter(function(id) {\n            return mtags[id]\n        });\n        addDish({DishName, Description, Category, Price, tags:nTag,myFile:DishImage !== null ? DishImage.myFile:null});\n        setLoading();\n        loadUser();\n        setOpen(false);\n    }\n\n    function onSubmitDelete(e){\n        e.preventDefault();\n        const [DeleteCategory,DishID,DishImageName]=[e.target[1].value,e.target[0].value,e.target[2].value]\n        deleteDish({DeleteCategory,DishID,DishImageName});\n        setLoading();\n        loadUser();\n    }\n\n    function onSubmitUpdateForm(e){\n        e.preventDefault();\n        const identifiers = Object.keys(utags);\n        const nTag = identifiers.filter(function(id) {\n            return utags[id]\n        });\n        updateDish({\n            DishName : editFormData.DishName,\n            Description : editFormData.Description,\n            Category : editFormData.Category,\n            tags : nTag,\n            Price : editFormData.Price,\n            DishID : dishID,\n            OldFileName:editFormData.OldFileName,\n            myFile : updateDishImage !== null ? updateDishImage.myFile : null,\n        });\n        loadUser();\n        setLoading();\n        setUpdateOpen(false);\n    }\n\n    function onEditClick(e){\n\n        e.preventDefault();\n    \n        const [\n            DishName,\n            Description,\n            Category,\n            Price,\n            DishID,\n            ImageUrl,\n            OldFileName\n        ] = \n        [\n            e.target[0].value,\n            e.target[1].value,\n            e.target[2].value,\n            e.target[3].value,\n            e.target[4].value,\n            e.target[5].value,\n            e.target[6].value\n        ];\n        setDishID(DishID);\n        \n        setUpdateDishPic(ImageUrl);\n        setEditData({DishName,Description,Category,Price,OldFileName});\n        setUpdateOpen(true);\n    }\n\n    function onSubmitStatus(e){\n        e.preventDefault();\n        const DishID = e.target[0].value;\n        const Status = e.target[1].value;\n        availableDish({DishID,Status});\n        loadUser();\n    }\n\n    function handleTags(event){ \n        setTags({ ...mtags, [event.target.name]: event.target.checked }); \n    }\n    function handleUpdateTags(event){ \n        setUpdateTags({...utags, [event.target.name]: event.target.checked}); \n    }\n\n    function handleSearch(e) { setSearch(e.target.value); }\n\n    function getUniqueCategories(){ return Categories.filter((item,pos)=> Categories.indexOf(item) === pos) }\n    \n    if(getUniqueCategories().length !== optionsCategory.length){\n        setOptionCategories([...getUniqueCategories()]);\n    }\n    const handleChangeDocuments = (e) =>{\n        setDishImage({[e.target.name]:e.target.files[0]});\n        if(e.target.name === \"myFile\"){\n            setDishPic(URL.createObjectURL(e.target.files[0]));\n        }\n    };\n    const handleChangeUpdateDocuments = (e) =>{\n        setUpdateDishImage({[e.target.name]:e.target.files[0]});\n        if(e.target.name === \"myFile\"){\n            setUpdateDishPic(URL.createObjectURL(e.target.files[0]));\n        }\n    };\n\n    function allDishes(){\n\n        const lst = [];\n        for(var i=0 ; i<Dishes.length ; i++){\n\n            if((Dishes[i].DishName).toUpperCase().indexOf(searchDish.toUpperCase()) > -1){\n\n                lst.push(\n                    <Grid item xs={4} sm={4} key={Dishes[i].DishID}>\n                        <Card variant=\"outlined\">\n                            <CardContent>\n                                <Avatar \n                                    src={Dishes[i].ImageUrl}\n                                    style={{\n                                        width:'200px',\n                                        height:'200px',\n                                        border:\"1px solid black\"\n                                    }} \n                                    variant='rounded'\n                                    />\n                                <Typography variant=\"h5\" component=\"h2\">\n                                {Dishes[i].DishName}\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                    {Dishes[i].Description}\n                                    <br></br>\n                                    {Dishes[i].Category}\n                                    <br></br>\n                                    {Dishes[i].tags !== null && (Dishes[i].tags).join(\",\")}\n                                </Typography>\n                                <Typography variant=\"h6\" component=\"h4\">\n                                    Rs {Dishes[i].Price}\n                                </Typography>\n                            </CardContent>\n                            <CardActions>\n                                <form onSubmit={(e)=>{onEditClick(e)}}>\n                                <TextField onChange={()=>{}} style={{display:\"none\"}} name=\"DishName\" value={Dishes[i].DishName}/>\n                                <TextField onChange={()=>{}} style={{display:\"none\"}} name=\"Description\" value={Dishes[i].Description}/>\n                                <TextField onChange={()=>{}} style={{display:\"none\"}} name=\"Category\" value={Dishes[i].Category}/>\n                                <TextField onChange={()=>{}} style={{display:\"none\"}} name=\"Price\" value={Dishes[i].Price}/>\n                                <TextField onChange={()=>{}} style={{display:\"none\"}} name=\"DishID\" value={Dishes[i].DishID}/>\n                                <TextField onChange={()=>{}} style={{display:\"none\"}} name=\"ImageUrl\" value={Dishes[i].ImageUrl}/>\n                                <TextField onChange={()=>{}} style={{display:\"none\"}} name=\"OldFileName\" value={Dishes[i].FileName}/>\n                                <Button \n                                    startIcon={<EditIcon/>}\n                                    type=\"submit\" \n                                    variant=\"contained\">Edit</Button>\n                                </form>\n\n                                <form onSubmit={(e)=>{onSubmitDelete(e)}}>\n                                    <TextField \n                                    style={{display : \"none\"}} \n                                    name=\"DishID\" \n                                    value={Dishes[i].DishID}\n                                    onChange={()=>{}}\n                                    />\n                                    <TextField \n                                    style={{display : \"none\"}} \n                                    name=\"DeleteCategory\" \n                                    value={Dishes[i].Category}\n                                    onChange={()=>{}}\n                                    />\n                                    <TextField \n                                    style={{display : \"none\"}} \n                                    name=\"DishImageName\" \n                                    value={Dishes[i].FileName}\n                                    onChange={()=>{}}\n                                    />\n                                    <Button \n                                    startIcon={<DeleteIcon/>}\n                                    type=\"submit\" \n                                    color=\"secondary\"\n                                    variant=\"contained\">Remove</Button>\n                                </form>\n                                \n                                <form onSubmit={(e)=>{onSubmitStatus(e)}}>\n                                    <TextField \n                                        style={{display : \"none\"}} \n                                        name=\"DishID\" \n                                        value={Dishes[i].DishID}\n                                        onChange={()=>{}}\n                                    />\n                                    <TextField \n                                        style={{display : \"none\"}} \n                                        name=\"Status\" \n                                        value={Dishes[i].Available}\n                                        onChange={()=>{}}\n                                    />\n                                    <Button startIcon={Dishes[i].Available ? <VisibilityIcon/> :<VisibilityOffIcon/>} type=\"submit\">{Dishes[i].Available ? 'Available' : 'Unavailable' }</Button>\n                                </form>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                );\n            \n            }\n        }\n        return(lst);\n    }\n\n    if(loading){\n        return <LoadingScreen/>\n    }else{\n    return(\n        <Box>\n        \n            {isMobile || isMobileDevice ? \n            \n            <Box style={{marginLeft:\"10px\",marginRight:\"10px\"}}>\n\n            <Grid container>\n                <Grid item key='Dishes' sm={6} xs={6}>\n                    <h3 className=\"mFont\"> Dishes </h3>\n                </Grid>\n                <Grid item key='addDish' sm={6} xs={6}>\n                    <Box textAlign=\"right\">\n                        <Button \n                            className=\"mFont yel\"\n                            startIcon={<AddIcon/>}\n                            color=\"primary\"\n                            variant=\"contained\" \n                            onClick={handleClick}\n                            disableElevation> \n                            Add Dish\n                        </Button>\n                    </Box>\n                </Grid>\n            </Grid>\n            <Box>\n                <TextField     \n                    variant=\"outlined\"\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <SearchIcon/>\n                            </InputAdornment>\n                        ),\n                        style:{ height:40 } \n                    }}\n                    onChange={handleSearch}\n                    placeholder=\"Search by Dish Name...\"\n                    fullWidth\n                />\n            </Box>\n            <Alert/>\n            { Dishes.length <= 0 ?\n            <Box style={{width:\"100%\",marginTop:40}}>\n                <Typography style={{textAlign:\"center\"}}><NotInterestedIcon/></Typography>\n                <Typography style={{textAlign:\"center\"}}>No Dish Added.</Typography>\n            </Box>\n            :\n            <div style={{marginTop : \"10px\"}}>\n                <div className=\"row\">\n                    {allDishes()}\n                </div>\n            </div>\n            }\n            </Box> \n            \n            : \n            \n            <Box>\n            \n            <Grid container>\n                <Grid item key='Dishes2' sm={3} xs={3}>\n                    <h3 className=\"mFont\"> Dishes </h3>\n                </Grid>\n                <Grid item key='addDish2' sm={9} xs={9}>\n                    <Box textAlign=\"right\">\n                        <Button \n                            className=\"mFont yel\"\n                            startIcon={<AddIcon/>}\n                            color=\"primary\"\n                            variant=\"contained\"\n                            style={{marginRight:20}} \n                            onClick={handleClick}\n                            disableElevation> \n                            Add Dish\n                        </Button>\n                    </Box>\n                </Grid>\n            </Grid>\n            \n            <Divider style={{marginTop:10}}/>\n\n            <Box style={{marginTop:10}}>\n                <TextField     \n                    variant=\"outlined\"\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <SearchIcon/>\n                            </InputAdornment>\n                        ),\n                        style:{ height:40 } \n                    }}\n                    onChange={handleSearch}\n                    placeholder=\"Search by Name\"\n                />\n            </Box>\n\n            <Alert/>\n            { Dishes.length <= 0 ?\n            <Box style={{width:\"100%\",marginTop:40}}>\n                <Typography style={{textAlign:\"center\"}}><NotInterestedIcon/></Typography>\n                <Typography style={{textAlign:\"center\"}}>No Dish Added.</Typography>\n            </Box>\n            :\n            <div style={{marginTop : \"20px\"}}>\n                <Grid container spacing={1}>\n                    {allDishes()}\n                </Grid>\n            </div>\n            }\n           \n            </Box>\n\n            }\n\n            <Dialog open={openAddDialog} onClose={handleClose}>\n                <DialogTitle className=\"mFont\">Add Dish</DialogTitle>\n                <form onSubmit={(e)=>onSubmitForm(e)}>\n                <DialogContent>\n                    {DishPic ? \n                        <img src={DishPic} width=\"200px\" height=\"200px\" alt=\"unable to display.\" style={{border:\"1px solid black\"}}/>\n                        :\n                        <Box style={{width:200,height:200,border:\"1px solid black\"}}></Box>\n                    }\n                    <Box>\n                        <input\n                            name=\"myFile\"\n                            variant=\"outlined\"\n                            onChange={handleChangeDocuments}\n                            className={classes.customFileInput}\n                            type=\"file\"\n                            accept=\"image/*\"\n                        />\n                    </Box>\n                    <Box>\n                        <TextField \n                            name=\"DishName\"\n                            variant=\"outlined\"\n                            type=\"text\" \n                            className={classes.customInput}\n                            onChange={e => onChange(e)} \n                            label=\"Dish Name\"\n                            fullWidth\n                            required\n                        />\n                    </Box>\n                    <Box>\n                        <TextField \n                            name=\"Description\"\n                            type=\"text\" \n                            variant=\"outlined\"\n                            className={classes.customInput}\n                            onChange={e => onChange(e)} \n                            label=\"Dish Description\"\n                            fullWidth\n                        />\n                    </Box>\n                    <Box>\n                        <Autocomplete\n                            freeSolo\n                            name=\"Category\"\n                            type=\"text\" \n                            options={optionsCategory}\n                            className={classes.customInput}\n                            onInputChange={(event,newInputValue)=>{\n                                setData({...formData,Category:newInputValue})\n                            }}\n                            renderInput={(params)=>\n                            <TextField {...params} label=\"Category\" variant=\"outlined\" required/>}\n                            fullWidth\n                        />  \n                    </Box>\n                    <Box>\n                        <TextField \n                            name=\"Price\"\n                            type=\"tel\" \n                            className={classes.customInput}\n                            onChange={e => onChange(e)} \n                            label=\"Price\"\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                        />\n                    </Box>\n                    \n                    <Box>\n                        <Grid container>\n                            \n                            {Tags.map(tag=>(\n                                <Grid item key={tag} xs={6} sm={6}>\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox \n                                            onChange={e => handleTags(e)}  \n                                            color=\"primary\" \n                                            name={tag} \n                                            checked={mtags.tag}/>\n                                        }\n                                        label={tag}                    \n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </Box>\n                    \n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}> Close </Button>\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">Add Dish</Button>\n                </DialogActions>\n                </form>\n            </Dialog>\n            \n            <Dialog open={openUpdateDialog} onClose={handleUpdateClose}>\n                <DialogTitle className=\"mFont\">Edit Dish</DialogTitle>\n                <form onSubmit={(e)=>onSubmitUpdateForm(e)}>\n                <DialogContent>\n                    {updateDishPic === null ? \n                        <Box style={{width:200,height:200,border:\"1px solid black\"}}></Box>\n                        :\n                        <img src={updateDishPic} width=\"200px\" height=\"200px\" alt=\"unable to display.\" style={{border:\"1px solid black\"}}/>\n                    }\n                    <Box>\n                        <input\n                            name=\"myFile\"\n                            variant=\"outlined\"\n                            onChange={handleChangeUpdateDocuments}\n                            className={classes.customFileInput}\n                            type=\"file\"\n                            accept=\"image/*\"\n                        />\n                    </Box>\n                    <Box>\n                        <TextField \n                            name=\"DishName\"\n                            type=\"text\"\n                            variant=\"outlined\" \n                            className={classes.customInput}\n                            onChange={e => onUpdateChange(e)} \n                            label=\"Dish Name\"\n                            value={editFormData.DishName}\n                            required\n                            fullWidth\n                        />\n                    </Box>\n                    <Box>\n                        <TextField \n                            name=\"Description\"\n                            type=\"text\" \n                            className={classes.customInput}\n                            onChange={e => onUpdateChange(e)} \n                            label=\"Dish Description\"\n                            variant=\"outlined\"\n                            value={editFormData.Description}\n                            fullWidth\n                        />\n                    </Box>\n                    <Box>\n                        <Autocomplete\n                            freeSolo\n                            name=\"Category\"\n                            type=\"text\" \n                            className={classes.customInput}\n                            options={optionsCategory}\n                            onInputChange={(event,newInputValue)=>{\n                                setEditData({...editFormData,Category:newInputValue})\n                            }}\n                            value={editFormData.Category}\n                            renderInput={(params)=><TextField {...params} variant=\"outlined\" label=\"Category\" required/>}\n                            fullWidth\n                        />\n                        \n                    </Box>\n                    <Box>\n                        <TextField \n                            name=\"Price\"\n                            type=\"tel\" \n                            variant=\"outlined\"\n                            className={classes.customInput}\n                            onChange={e => onUpdateChange(e)} \n                            label=\"Price\"\n                            value={editFormData.Price}\n                            required\n                            fullWidth\n                        />\n                    </Box>\n                    <Box>\n                        <Grid container>\n                            {Tags.map(tag=>(\n                            <Grid item key={`${tag}1`} xs={6} sm={6}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox \n                                        onChange={e => handleUpdateTags(e)}  \n                                        color=\"primary\" \n                                        name={tag} \n                                        checked={utags.tag}/>\n                                    }\n                                    label={tag}                   \n                                />\n                            </Grid>\n                            ))}\n                            \n                        </Grid>\n                    </Box>\n                    \n                    \n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleUpdateClose}> Close </Button>\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">Update Dish</Button>\n                </DialogActions>\n                </form>\n            </Dialog>\n        \n        </Box>\n    );\n    }\n}\n\nDishes.propTypes={\n    Dishes : PropTypes.array.isRequired,\n    addDish : PropTypes.func.isRequired,\n    deleteDish : PropTypes.func.isRequired,\n    updateDish : PropTypes.func.isRequired,\n    availableDish : PropTypes.func.isRequired,\n    loadUser : PropTypes.func.isRequired,\n    loading : PropTypes.bool.isRequired,\n    setLoading : PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state =>({\n    Dishes : state.auth.user.Dishes,\n    Categories : state.auth.user.Categories,\n    loading : state.loading\n});\n\nexport default connect(mapStateToProps,{addDish,deleteDish,loadUser,updateDish,availableDish,setLoading})(Dishes);","import axios from 'axios';\n\nimport {\n    DISH_SUCCESS,\n    DISH_FAIL, \n    REMOVE_DISH,\n    UPDATE_DISH\n} from './types';\n\nimport { loadUser } from './auth';\nimport { setAlert } from \"./alert\";\nimport { removeLoading } from './loading';\n\nexport const addDish = ({DishName,Description,Category,Price,tags,myFile}) => async dispatch =>{\n    \n    try{\n        const config = {\n            headers : {\n                'Content-Type':'multipart/form-data'\n            }\n        }\n        const formData = new FormData();\n        formData.append(\"DishName\",DishName);\n        formData.append(\"Description\",Description);\n        formData.append(\"Category\",Category);\n        formData.append(\"Price\",Price);\n        formData.append(\"tags\",tags);\n        formData.append(\"myFile\",myFile);\n\n        await axios.post('/api/dishes',formData,config);\n        dispatch({\n            type : DISH_SUCCESS,\n            payload : true\n        });\n        dispatch(loadUser());\n        dispatch(removeLoading());\n        dispatch(setAlert(`Dish ${DishName} added Successfully`,'success'));\n\n    }catch(err){\n        dispatch({\n            type : DISH_FAIL,\n        });\n        dispatch(removeLoading());\n    }\n}\n\nexport const updateDish = ({DishName,Description,Category,tags,Price,DishID,OldFileName,myFile})=> async dispatch =>{\n\n    try {\n        const config = {\n            headers : {\n                'Content-Type':'multipart/form-data'\n            }\n        }\n        const formData = new FormData();\n        formData.append(\"DishID\",DishID);\n        formData.append(\"DishName\",DishName);\n        formData.append(\"Description\",Description);\n        formData.append(\"Category\",Category);\n        formData.append(\"Price\",Price);\n        formData.append(\"tags\",tags);\n        formData.append(\"OldFileName\",OldFileName);\n        formData.append(\"myFile\",myFile);\n\n        await axios.post('/api/dishes/update',formData,config);\n        \n        dispatch({\n            type : UPDATE_DISH,\n            payload : true\n        });\n        dispatch(loadUser());\n        dispatch(removeLoading());\n        dispatch(setAlert(`Dish ${DishName} updated Successfully`,'success'));\n\n    } catch (err) {\n        \n        dispatch({\n            type : DISH_FAIL,\n        });\n        dispatch(removeLoading());\n        dispatch(setAlert('Failed to update Dish','error'));\n    }\n}\n\nexport const deleteDish = ({DeleteCategory,DishID,DishImageName}) => async dispatch => {\n    \n    const config = {\n        headers : {\n            'Content-Type':'application/json'\n        }\n    }\n    const body = JSON.stringify({DeleteCategory,DishID,DishImageName});\n\n    try {\n        await axios.post('/api/dishes/delete',body,config);\n        \n        dispatch({\n            type : REMOVE_DISH,\n            payload : true\n        });\n        dispatch(loadUser());\n        dispatch(removeLoading());\n        dispatch(setAlert('Dish Deleted Successfully','success'));\n\n    } catch (err) {\n        dispatch({\n            type : DISH_FAIL,\n        });\n        dispatch(removeLoading());\n        dispatch(setAlert('Failed to Delete Dish','error'));\n    }\n}\n\nexport const availableDish = ({DishID,Status}) => async dispatch => {\n    \n    const config = {\n        headers : {\n            'Content-Type':'application/json'\n        }\n    }\n    const body = JSON.stringify({DishID,Status});\n\n    try {\n\n        await axios.post('/api/dishes/available',body,config);\n\n        dispatch({\n            type : UPDATE_DISH,\n            payload : true\n        });\n        \n    } catch (err) {\n        dispatch({\n            type : DISH_FAIL,\n        });\n    }\n};","import React from 'react';\nimport {\n    Box, Grid, Typography, IconButton\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nfunction DishComponent(props){\n    const [counter,setCounter] = React.useState(0);\n\n    function handleIncrement(){ \n        setCounter(counter+1); \n        props.handleAddFunc({\n            name:props.name,\n            price:props.price,\n            units:counter+1,\n            type:0,\n            id:props.id\n        });\n    }\n    function handleDecrement(){ \n\n        counter === 0 ? setCounter(0) : setCounter(counter-1)\n        props.handleAddFunc({\n            name:props.name,\n            price:props.price,\n            units:counter-1,\n            type:0,\n            id:props.id\n        });\n        \n    }\n    React.useEffect(()=>{\n        props.cart.forEach(element => {\n            if(element.id === props.id){\n                setCounter(element.units);\n            }\n        });\n    },[])\n\n    return(\n        <Box>\n            <Grid container>\n                <Grid item xs={7} sm={7}>\n                    <Typography>\n                        {props.name}       \n                    </Typography>\n                    <Typography style={{fontSize:\"medium\"}} color=\"textSecondary\">\n                        Rs. {props.price}\n                    </Typography>\n                </Grid>\n                <Grid item xs={5} sm={5}>\n                { counter!==0 \n                    ? <IconButton onClick={()=>{handleDecrement();}}><RemoveIcon/></IconButton>\n                    : <IconButton><RemoveIcon/></IconButton> \n                }\n                        {counter}\n                    <IconButton \n                    onClick={()=>{handleIncrement();}}\n                    ><AddIcon/></IconButton>\n                </Grid>\n            </Grid>\n            <br/><br/>\n        </Box>\n    );\n}\n\nexport default DishComponent;","import React from 'react';\nimport { \n    Divider, Grid, Box, \n    Button, Tabs, Tab,\n    Typography,InputAdornment,\n    TextField,SwipeableDrawer,\n    } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport SwipeableViews from 'react-swipeable-views';\nimport { connect } from 'react-redux';\n\nimport AddShoppingCartOutlinedIcon from '@material-ui/icons/AddShoppingCartOutlined';\nimport SearchIcon from '@material-ui/icons/Search';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nimport {loadUser} from '../../actions/auth';\nimport {placeOrder} from '../../actions/tables';\nimport PropTypes from 'prop-types';\nimport { useMediaQuery } from 'react-responsive';\nimport DishComponent from './DishComponent';\nimport Alert from './Alerts';\n\nfunction PlaceOrder({details,loadUser,placeOrder}){\n\n    React.useEffect(()=>{loadUser();},[]);\n    const isMobile = useMediaQuery({ query: '(max-width: 768px)' });\n    const isMobileDevice = useMediaQuery({query: '(max-device-width: 768px)'});\n    const theme = useTheme();\n    const [value,setValue] = React.useState(0);\n    const [orderCart,setCart] = React.useState([]);\n    const [searchDish,setSearch] = React.useState(\"\");\n\n    const [state, setState] = React.useState({bottom: false});\n    \n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n          return;\n        }\n    \n        setState({ ...state, [anchor]: open });\n    };\n\n    function handleSearch(e){ setSearch(e.target.value); }\n    function handleChange(event,newValue){setValue(newValue);}\n    function a11yProps(index) { return { id: `tabs-${index}`, 'aria-controls': `tabpanel-${index}`}; }  \n    function handleChangeIndex(index){  setValue(index); }\n    function TabPanel(props){\n        const { children, value, index, ...other } = props;\n\n        return (\n            <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`tabpanel-${index}`}\n            aria-labelledby={`tabs-${index}`}\n            {...other}\n            >\n            {value === index && (\n                <Box p={3}>\n                <Typography>{children}</Typography>\n                </Box>\n            )}\n            </div>\n        );\n    }\n\n    function getUniqueCategories(){\n        if(searchDish !== ''){\n            const newCategories = [];\n            for(var i = 0 ; i< details.Dishes.length ; i++){\n                details.Dishes[i].DishName.indexOf(searchDish) > -1 &&\n                newCategories.push(details.Dishes[i].Category);\n            }\n            return newCategories.filter(function(item,pos){return newCategories.indexOf(item) === pos;});\n        }\n        if(details.Categories !== null && details.Categories !== undefined){\n            return details.Categories.filter(function(item, pos){return details.Categories.indexOf(item) === pos;});\n        }\n    }\n\n    function allTabs(){\n\n        const lst = [];\n        if(details !== null && details.Categories !== null){\n        const UniqueCategories = getUniqueCategories();\n        for(var i=0 ; i < UniqueCategories.length ; i++){\n            lst.push(<Tab key={UniqueCategories[i]} label={UniqueCategories[i]} {...a11yProps(i)} />);\n        }\n        }\n        \n        return lst;\n    }\n\n    function handleAddFunc(order){\n        \n        if(orderCart.length <= 0){\n            setCart([order]);\n        }else{\n            \n            var temp = 0;\n            for(var i = 0 ; i < orderCart.length ; i++){\n                temp++;\n                if(orderCart[i].name === order.name){\n                    orderCart[i].units = order.units\n                    setCart([...orderCart]);\n                    temp=0;\n                    break;\n                }\n            }\n            if(temp === orderCart.length){\n                setCart([...orderCart,order]);\n            }\n            \n        }\n        //console.log(orderCart);\n    }\n\n    function support(category){\n        \n        const lst = [];\n        for(var i = 0 ; i< details.Dishes.length ; i++){\n            if(details.Dishes[i].Category === category){\n                details.Dishes[i].DishName.indexOf(searchDish) > -1 &&\n                lst.push(\n\n                    <DishComponent\n                        name = {details.Dishes[i].DishName}\n                        price = {details.Dishes[i].Price}\n                        handleAddFunc = {handleAddFunc}\n                        id={i}\n                        cart={orderCart}\n                    />\n                    \n                );\n            }\n        }\n        return lst;\n    }\n\n    function allPanels(){\n        const lst = [];\n        if(details !== null && details.Categories !== null){\n        const UniqueCategories = getUniqueCategories();\n        for(var i=0 ; i < UniqueCategories.length ; i++){\n            lst.push(\n            <TabPanel \n                value={value} \n                index={i} \n                dir={theme.direction}\n                > {support(UniqueCategories[i])}\n            </TabPanel>\n            );\n        }\n        }\n        return lst;\n    }\n\n    function getSubtotal(){\n        var SubTotal = 0.0;\n        for(var i = 0 ; i < orderCart.length ; i++){\n            SubTotal += (orderCart[i].price * orderCart[i].units);\n        }\n        return SubTotal\n    }\n\n    function getTotalCharges(){\n\n        const Charges = details.Taxes;\n        if(Charges.length > 0){\n            var totalCharges = 0.0;\n            const SubTotal = getSubtotal();\n            for(var i = 0 ; i< Charges.length ; i++){\n                if(Charges[i].TaxType === \"Percentage\"){\n                    totalCharges += (SubTotal * (Number.parseFloat(Charges[i].Amount))/100);\n                }\n                if(Charges[i].TaxType === \"Fixed\"){\n                    totalCharges += Number.parseFloat(Charges[i].Amount);\n                }\n            }\n            return totalCharges;\n        }else{\n            return 0.0;\n        }\n        \n    }\n\n    function handleSubmit(e){    \n        e.preventDefault();    \n        var Dish = [];\n        for(var i = 0 ; i < orderCart.length ; i++){\n            if(orderCart[i].units !== 0){\n                Dish.push({\n                    name : orderCart[i].name,\n                    units : orderCart[i].units,\n                    price : orderCart[i].price,\n                });\n            }\n        }\n        \n        var CustomerName = e.target[0].value;\n        var TableNo = e.target[1].value\n        var SubTotal = getSubtotal();\n        var TotalBill = SubTotal+getTotalCharges();\n        placeOrder({Dish,TableNo,TotalBill,SubTotal,CustomerName});\n        setCart([]);\n    }\n    \n    if(details.Dishes.length <= 0){\n        return(\n            <Box>\n            <Grid container>\n                <Grid item sm={8} xs={8}>\n                    <Box textAlign=\"left\"><h3 className=\"mFont\">Place Order</h3></Box>\n                </Grid>\n                <Grid item sm={4} xs={4}>\n                    <Box textAlign=\"center\">\n                        <TextField\n                            variant=\"outlined\"\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <SearchIcon/>\n                                    </InputAdornment>\n                                ),\n                                style:{ height:40 }\n                            }}\n                            placeholder=\"Search by Dish Name\"\n                            onChange={handleSearch}\n                        />\n                    </Box>\n                </Grid>\n            </Grid>\n            {(!isMobile && !isMobileDevice) && <Divider style={{marginTop:10}}/>}\n            <Box style={{width:\"100%\",marginTop:40}}>\n                <Typography style={{textAlign:\"center\"}}><NotInterestedIcon/></Typography>\n                <Typography style={{textAlign:\"center\"}}>No Dishes Added yet.</Typography>\n            </Box>\n            </Box>\n        );\n    }\n    else\n    if(isMobile || isMobileDevice){\n        return(\n            <Box style={{marginLeft:\"10px\",marginRight:\"10px\"}}>\n                <Box>\n                <Grid container>\n                    <Grid item xs={6}>\n                        <h3 className=\"mFont\">Place Order</h3> \n                    </Grid>\n                    <Grid item xs={6}>\n                        <Box textAlign=\"left\">\n                            <TextField\n                                variant=\"outlined\"\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            <SearchIcon/>\n                                        </InputAdornment>\n                                    ),\n                                    style:{ height:40 }\n                                }}\n                                placeholder=\"Search by Dish Name\"\n                                onChange={handleSearch}\n                            />\n                        </Box>\n                    </Grid>\n                </Grid>\n                <br/>\n                <Tabs \n                    value={value} \n                    onChange={handleChange} \n                    aria-label=\"tabs\" \n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                    >\n                    {allTabs()}\n                </Tabs>\n                <SwipeableViews\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                    index={value}\n                    onChangeIndex={handleChangeIndex}\n                >\n                        \n                    {allPanels()}\n                </SwipeableViews>\n                </Box>\n                {['bottom'].map((anchor)=>{\n                \n                return(\n                \n                <React.Fragment key={anchor}>\n                    <button \n                    onClick={toggleDrawer(anchor, true)}\n                    className=\"bottomBtn shadow-lg mFont\"\n                    >Order Summary</button>\n                    <SwipeableDrawer\n                        anchor={anchor}\n                        open={state[anchor]}\n                        onClose={toggleDrawer(anchor, false)}\n                        onOpen={toggleDrawer(anchor, true)}\n                        style={{\n                            borderTopLeftRadius:\"60px\",\n                            borderTopRightRadius:\"60px\"\n                        }}\n                    >\n                    <Box className=\"contentOrder\">\n                        <h5 className=\"mFont\">Order Summary</h5>\n                        <Alert/>\n                        <br/>\n                        {getSubtotal() !== 0 && orderCart.length > 0 ?\n                        <div>\n                        <Grid container>\n                                <Grid item sm={5} xs={5} className=\"mFont\">\n                                    Dish Name\n                                </Grid>\n                                <Grid item sm={2} xs={2} className=\"mFont\">\n                                    Qty.\n                                </Grid>\n                                <Grid item sm={5} xs={5} className=\"mFont\">\n                                    Price\n                                </Grid>\n                            </Grid>\n                        <Divider/>\n                        <br/>\n                        {orderCart.map((order)=>{\n                                if(order.units !== 0){\n                                return(\n                                <Grid container> \n                                    <Grid item sm={5} xs={5} className=\"mFont\">\n                                        {order.name}\n                                    </Grid>\n                                    <Grid item sm={2} xs={2} className=\"mFont\">\n                                        x{order.units}\n                                    </Grid>\n                                    <Grid item sm={5} xs={5} className=\"mFont\">\n                                        {order.units * order.price}\n                                    </Grid>\n                                </Grid>\n                                );\n                                }\n                                else{\n                                    return(<div></div>);\n                                }\n                        })}\n                        <Divider/>\n                        <Grid container>\n                                <Grid item sm={3} xs={3}>\n\n                                </Grid>\n                                <Grid item sm={4} xs={4}>\n                                    Sub Total\n                                </Grid>\n                                <Grid item sm={5} xs={5}>\n                                    {getSubtotal()}\n                                </Grid>\n                            </Grid>\n                        <Grid container>\n                                <Grid item sm={3} xs={3}>\n\n                                </Grid>\n                                <Grid item sm={4} xs={4}>\n                                    Taxes & Charges\n                                </Grid>\n                                <Grid item sm={5} xs={5}>\n                                    {getTotalCharges()}\n                                </Grid>\n                            </Grid>\n                        <Grid container>\n                                <Grid item sm={3} xs={3}>\n\n                                </Grid>\n                                <Grid item sm={4} xs={4}>\n                                    Total\n                                </Grid>\n                                <Grid item sm={5} xs={5}>\n                                    {getSubtotal()+getTotalCharges()}\n                                </Grid>\n                            </Grid>\n                        <br/>\n                        <form onSubmit={(e)=>handleSubmit(e)}>\n                                <Grid container spacing={2}>\n                                    <Grid item sm={5} xs={5}>\n                                        <TextField \n                                        name=\"CustomerName\"\n                                        placeholder=\"Customer Name\"    \n                                        />\n                                    </Grid>\n                                    <Grid item sm={5} xs={5}>\n                                        <TextField \n                                        name=\"TableNo\"\n                                        placeholder=\"Table No\"\n                                        required    \n                                        />\n                                    </Grid>\n                                </Grid>\n                                <br/>\n                                <Button \n                                    variant=\"contained\" \n                                    color=\"primary\" \n                                    startIcon={<AddShoppingCartOutlinedIcon/>}\n                                    type=\"submit\"\n                                    >\n                                    Place Order\n                                </Button>\n                            </form>\n                            \n                        </div>\n\n                        : \n                        <Box textAlign=\"center\">\n                            <Typography color=\"textSecondary\">\n                            No Orders in Cart\n                            </Typography>\n                        </Box>\n                        }\n                        \n                    </Box>\n                    </SwipeableDrawer>\n                </React.Fragment>\n                );\n                }\n                )}\n            </Box>\n        );\n    }\n    else{\n    return(\n        <Box>\n            <Box>\n            <Grid container>\n                <Grid item sm={8} xs={8}>\n                    <Box textAlign=\"left\"><h3 className=\"mFont\">Place Order</h3></Box>\n                </Grid>\n                <Grid item sm={4} xs={4}>\n                    <Box textAlign=\"center\">\n                        <TextField\n                            variant=\"outlined\"\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <SearchIcon/>\n                                    </InputAdornment>\n                                ),\n                                style:{ height:40 }\n                            }}\n                            placeholder=\"Search by Dish Name\"\n                            onChange={handleSearch}\n                        />\n                    </Box>\n                </Grid>\n            </Grid>\n            <Divider style={{marginTop:10}}/>\n            <br/>\n            <Grid container spacing={1}>\n                <Grid item sm={7} xs={7} style={{borderRight:\"1px solid #e0e0e0\"}}>\n                    \n                    <Tabs \n                        value={value} \n                        onChange={handleChange} \n                        aria-label=\"tabs\" \n                        variant=\"scrollable\"\n                        scrollButtons=\"auto\"\n                        >\n                        {allTabs()}\n                    </Tabs>\n                    <SwipeableViews\n                        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                        index={value}\n                        onChangeIndex={handleChangeIndex}\n                    >\n                        \n                    {allPanels()}\n                    </SwipeableViews>\n                </Grid>\n                <Grid item sm={4} xs={4}>\n                    <h5 className=\"mFont\">Order Summary</h5>\n                    <Alert/>\n                    <br/>\n                    {getSubtotal() !== 0 && orderCart.length > 0 ?\n                    <Box>\n                        <Grid container>\n                            <Grid item sm={5} xs={5} className=\"mFont\">\n                                Dish Name\n                            </Grid>\n                            <Grid item sm={2} xs={2} className=\"mFont\">\n                                Qty.\n                            </Grid>\n                            <Grid item sm={5} xs={5} className=\"mFont\">\n                                Price\n                            </Grid>\n                        </Grid>\n                        <Divider/>\n                        <br/>\n                        {orderCart.map((order)=>{\n                            if(order.units !== 0){\n                            return(\n                            <Grid container> \n                                <Grid item sm={5} xs={5} className=\"mFont\">\n                                    {order.name}\n                                </Grid>\n                                <Grid item sm={2} xs={2} className=\"mFont\">\n                                    x{order.units}\n                                </Grid>\n                                <Grid item sm={5} xs={5} className=\"mFont\">\n                                    {order.units * order.price}\n                                </Grid>\n                            </Grid>\n                            );\n                            }\n                            else{\n                                return(<div></div>);\n                            }\n                        })}\n                        <Divider/>\n                        <Grid container>\n                            <Grid item sm={3} xs={3}>\n\n                            </Grid>\n                            <Grid item sm={4} xs={4}>\n                                Sub Total\n                            </Grid>\n                            <Grid item sm={5} xs={5}>\n                                {getSubtotal()}\n                            </Grid>\n                        </Grid>\n                        <Grid container>\n                            <Grid item sm={3} xs={3}>\n\n                            </Grid>\n                            <Grid item sm={4} xs={4}>\n                                Taxes & Charges\n                            </Grid>\n                            <Grid item sm={5} xs={5}>\n                                {getTotalCharges()}\n                            </Grid>\n                        </Grid>\n                        <Grid container>\n                            <Grid item sm={3} xs={3}>\n\n                            </Grid>\n                            <Grid item sm={4} xs={4}>\n                                Total\n                            </Grid>\n                            <Grid item sm={5} xs={5}>\n                                {getSubtotal() + getTotalCharges()}\n                            </Grid>\n                        </Grid>\n                        <br/>\n                        <form onSubmit={(e)=>handleSubmit(e)}>\n                            <Grid container spacing={2}>\n                                <Grid item sm={5} xs={5}>\n                                    <TextField \n                                    name=\"CustomerName\"\n                                    placeholder=\"Customer Name\"    \n                                    />\n                                </Grid>\n                                <Grid item sm={5} xs={5}>\n                                    <TextField \n                                    name=\"TableNo\"\n                                    placeholder=\"Table No\"\n                                    required    \n                                    />\n                                </Grid>\n                            </Grid>\n                            <br/>\n                            <Button \n                                variant=\"contained\" \n                                color=\"primary\" \n                                startIcon={<AddShoppingCartOutlinedIcon/>}\n                                type=\"submit\"\n                                >\n                                Place Order\n                            </Button>\n                        </form>\n                        \n                    </Box>\n\n                    : \n                    <Box textAlign=\"center\">\n                        <Typography color=\"textSecondary\">No Orders in Cart</Typography>\n                    </Box>\n                    }\n                </Grid>\n            </Grid>\n            </Box>\n        </Box>\n    );\n    }\n}\n\nPlaceOrder.propTypes = {\n    details : PropTypes.object,\n    loadUser : PropTypes.func.isRequired,\n    placeOrder : PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state =>({\n    details : state.auth.user\n});\n\nexport default connect(mapStateToProps,{loadUser,placeOrder})(PlaceOrder);","import axios from 'axios';\n\nimport { HISTORY_SUCCESS, HISTORY_FAIL } from './types';\n\nexport const getOrders = () => async dispatch =>{\n    try {\n        \n        const response = await axios.get('/api/history/');\n        dispatch({\n            type : HISTORY_SUCCESS,\n            payload : response.data\n        });\n\n    } catch (err) {\n        dispatch({\n            type : HISTORY_FAIL\n        });\n    }\n}","import { SET_ACCOUNT, FAILED_ACCOUNT } from './types';\nimport axios from 'axios';\nimport { setAlert } from './alert';\n\nexport const setAccount = ({amountType,particulars,debit,credit}) => async dispatch => {\n\n    const config = {\n        headers : {\n            'Content-Type':'application/json'\n        }\n    }\n    const body = JSON.stringify({amountType,particulars,debit,credit});\n\n    try {\n\n        const response = await axios.post('/api/accounts/',body,config);\n        dispatch({\n            type : SET_ACCOUNT,\n            payload : response.data\n        });\n        dispatch(setAlert(\"Added Details to Accounts Successfully\",\"success\"));\n\n    } catch (error) {\n        dispatch({\n            type : FAILED_ACCOUNT,\n        });\n        dispatch(setAlert(\"Error Occurred\",\"error\"));\n        \n    }\n\n};\n\nexport const getAccounts = () => async dispatch => {\n    \n    try{\n        \n        const response = await axios.get('/api/accounts/');\n        dispatch({\n            type : SET_ACCOUNT,\n            payload : response.data\n        });\n        \n    }catch(err){\n        dispatch({\n            type : FAILED_ACCOUNT,\n        }); \n    }\n\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { loadUser } from '../../actions/auth';\nimport { getOrders } from '../../actions/history';\nimport { getAccounts } from '../../actions/accounts';\nimport { useMediaQuery } from 'react-responsive';\n\nimport { Line } from 'react-chartjs-2';\nimport { Divider, Box, Typography, Grid } from '@material-ui/core';\n\nimport Rating from '@material-ui/lab/Rating';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport CopyrightIcon from '@material-ui/icons/Copyright';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport AddIcon from '@material-ui/icons/Add';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\nimport TrendingDownIcon from '@material-ui/icons/TrendingDown';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\nimport Axios from 'axios';\n\nconst useStyles = makeStyles((theme)=>({\n    shadowBox :{\n        padding:10,\n        marginTop:10,\n        boxShadow:\"0px 3px 6px rgba(0,0,0,0.16)\"\n    },\n    customCard:{\n        border: 0,\n        borderRadius: 3,\n        color: 'white',\n        display:\"flex\",\n        padding:20,\n        flexDirection:\"row\",\n        justifyContent:\"space-between\"\n    },\n    cardRed:{\n        background:\"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    },\n    cardBlue:{\n        background:'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n        boxShadow:'0 3px 5px 2px rgba(33, 203, 243, .3)',\n    },\n    cardYellow:{\n        background:'linear-gradient(45deg, #ffb347 30%, #ffcc33 90%)',\n        boxShadow:'0 3px 5px 2px rgba(255,204,51, .3)',\n    },\n    cardGreen:{\n        background:'linear-gradient(45deg,#11998e 30%,#38ef7d 90%)',\n        boxShadow:'0 3px 5px 2px rgba(56,239,125, .3)',\n    },\n    Ratings:{\n        fontSize:100,\n        textAlign:'center',\n        marginTop:30\n    },\n    RatingsMob:{\n        fontSize:100,\n        textAlign:'center',\n        marginTop:20,\n    }\n}));\n\nfunction Analytics({loadUser,getAccounts, getOrders, history, accounts}){\n\n    const classes = useStyles(); \n\n    const isMobile = useMediaQuery({ query: '(max-width: 768px)' });\n    const isMobileDevice = useMediaQuery({query: '(max-device-width: 768px)'});\n\n    const allDates = [];\n    const finalData = [];\n    const finalLabels = [];\n    \n    const [feedbacks,setFeedbacks] = React.useState([]);\n\n    const getCount = (date) =>{\n        var cnt = 0;\n        for(var i = 0 ; i < allDates.length; i++){\n            if(allDates[i] === date){\n                cnt=cnt+1;\n            }\n        }\n        return cnt;\n    }\n    const getEarnings = (date) =>{\n        var counter = 0.0;\n        for(var i = 0 ; i < history.length ; i++){\n            if(history[i] !== undefined && history[i].CompletedDateOrder === date){\n                counter += Number.parseFloat(history[i].TotalBill);\n            }\n        }\n        for(var k=0 ; k<accounts.length ; k++){\n            if( accounts[k] !== undefined && accounts[k].AmountType === true && accounts[k].Date === date){\n                counter += parseFloat(accounts[k].Credit);\n            }\n        }\n        return counter;\n    };\n    const getDebits = (date) =>{\n\n        var totalDebits = 0.0;\n        for(var k=0 ; k<accounts.length ; k++){\n            if( accounts[k] !== undefined && accounts[k].AmountType === false && accounts[k].Date === date){\n                totalDebits += parseFloat(accounts[k].Debit);\n            }\n        }\n        return totalDebits;\n    };\n    const getAvgStars = () =>{\n\n        let num = 0;\n        for(var i = 0 ; i<feedbacks.length ; i++){\n            num += Number.parseInt(feedbacks[i].stars);\n        }\n        if(feedbacks.length<1){\n            return num;\n        }else{\n            return (num/feedbacks.length).toFixed(1) ;\n        }\n    };\n\n    React.useEffect(()=>{\n        setTimeout(()=>{\n            loadUser();\n            getOrders();\n            getAccounts();\n            Axios.get(\"/api/feedback\")\n            .then(response=>{\n                setFeedbacks(response.data);\n            }).catch(err=>console.error(err));\n        },5000);\n    },[]);\n\n    for(var m=0; m<history.length; m++){\n        allDates.push(history[m].CompletedDateOrder);\n    }\n\n    const uniqueDates = allDates.filter((item, i, ar) => ar.indexOf(item) === i);\n\n    for(var i=0 ; i<uniqueDates.length ; i++){\n        finalData.push(getCount(uniqueDates[i]))\n        finalLabels.push(uniqueDates[i]);\n    }\n\n    const Today = (new Date(Date.now()).toLocaleString().split(','))[0].toString();\n\n    const LineOptions = {\n        responsive:true,\n        scales:{\n            xAxes:[{\n                stacked:true,\n            }],\n            yAxes:[{\n                stacked:true\n            }]\n        },\n        legend:{\n            display:false,\n        },\n        animation:{\n            duration:2000,\n            easing:\"linear\",\n        }\n    };\n    const LineData = {\n        labels : finalLabels,\n        datasets:[{\n            label:\"Sales\",\n            backgroundColor: \"#ffcc3350\",\n            borderColor: \"#FFD31D\",\n            borderWidth: 5,\n            data : finalData\n        }]\n    };\n\n    if(isMobile || isMobileDevice){\n        return(\n        <Box>\n            <Box style={{marginLeft : \"10px\",marginRight:\"10px\"}}>\n                <h3 className=\"mFont\"> Dashboard </h3>\n\n                <Grid container style={{marginTop:10}} spacing={1}>\n\n                    <Grid item xs={6} sm={6}>\n                        <Box className={[classes.customCard,classes.cardRed]}>\n                            <Box style={{verticalAlign:'middle'}}>\n                                <ShoppingCartIcon style={{fontSize:50}}/>\n                            </Box>\n                            <Box>\n                                <Typography variant=\"h6\">Todays Orders</Typography>\n                                <Typography><AddIcon/> {getCount(Today)}</Typography>\n                            </Box>\n                        </Box>\n                    </Grid>\n\n                    <Grid item xs={6} sm={6}>\n                        <Box className={[classes.customCard,classes.cardBlue]}>\n                            <Box style={{verticalAlign:'middle'}}>\n                                <AccountBalanceWalletIcon style={{fontSize:50}}/>\n                            </Box>\n                            <Box>\n                                <Typography variant=\"h6\">Todays Earn..</Typography>\n                                <Typography><TrendingUpIcon/> {getEarnings(Today)}</Typography>\n                            </Box>\n                        </Box>\n                    </Grid>\n\n                    <Grid item xs={6} sm={6}>\n                        <Box className={[classes.customCard,classes.cardGreen]}>\n                            <Box style={{verticalAlign:'middle'}}>\n                                <AccountBalanceWalletIcon style={{fontSize:50}}/>\n                            </Box>\n                            <Box>\n                                <Typography variant=\"h6\">Todays Debit</Typography>\n                                <Typography><TrendingDownIcon/> {getDebits(Today)}</Typography>\n                            </Box>\n                        </Box>\n                    </Grid>\n\n                    <Grid item xs={6} sm={6}>\n                        <Box className={[classes.customCard,classes.cardYellow]}>\n                            <Box style={{verticalAlign:'middle'}}>\n                                <ShoppingCartIcon style={{fontSize:50}}/>\n                            </Box>\n                            <Box>\n                                <Typography variant=\"h6\">Total Orders</Typography>\n                                <Typography><ArrowUpwardIcon/> {history.length}</Typography>\n                            </Box>\n                        </Box>\n                    </Grid>\n\n                </Grid>\n                <Box style={{marginTop:2}}>\n                    <Box className={classes.shadowBox}>\n                    \n                        <Box style={{padding:10}}>\n                            <Typography variant=\"h6\" component=\"h6\" \n                            style={{letterSpacing:2}}>PERFORMANCE GRAPH</Typography>\n                        </Box>\n                        <Box style={{overflow:\"scroll\"}}>\n                            <Line \n                            width={10}\n                            height={5}\n                            style={{margin:0}}\n                            data={LineData} options={LineOptions}\n                            />  \n                        </Box>\n                    \n                    </Box>\n                    <Box className={classes.shadowBox}>\n                       \n                        <Box style={{padding:10}}>\n                            <Typography variant=\"h6\" component=\"h6\" \n                            style={{letterSpacing:2}}>RATINGS</Typography>\n                        </Box>\n                        <Box textAlign=\"center\" style={{paddingBottom:20}}>    \n                            <Typography className={classes.RatingsMob}>{getAvgStars()}</Typography>\n                            <Rating precision={0.5} value={getAvgStars()} readOnly />\n                        </Box>\n                    </Box>\n                </Box>\n\n                <Box textAlign=\"center\" style={{color:\"gray\",paddingTop:15}}>\n                    <Typography>Copyrights <CopyrightIcon/> Reserved by Serve My Table</Typography>\n                </Box>\n            </Box>\n        </Box>\n        )\n    }else{\n    return(\n        <Box>\n            <Box>\n                <h3 className=\"mFont\"> Dashboard </h3>\n                <Divider style={{marginTop:10}}/>\n\n                <Grid container style={{marginTop:10}} spacing={1}>\n                    <Grid item xs={3} sm={3}>\n                        <Box className={[classes.customCard,classes.cardRed]}>\n                            <Box style={{verticalAlign:'middle'}}>\n                                <ShoppingCartIcon style={{fontSize:50}}/>\n                            </Box>\n                            <Box>\n                                <Typography variant=\"h6\">Todays Orders</Typography>\n                                <Typography><AddIcon/> {getCount(Today)}</Typography>\n                            </Box>\n                        </Box>\n                    </Grid>\n                    <Grid item xs={3} sm={3}>\n                        <Box className={[classes.customCard,classes.cardBlue]}>\n                            <Box style={{verticalAlign:'middle'}}>\n                                <AccountBalanceWalletIcon style={{fontSize:50}}/>\n                            </Box>\n                            <Box>\n                                <Typography variant=\"h6\">Todays Earnings</Typography>\n                                <Typography><TrendingUpIcon/> {getEarnings(Today)}</Typography>\n                            </Box>\n                        </Box>\n                    </Grid>\n\n                    <Grid item xs={3} sm={3}>\n                        <Box className={[classes.customCard,classes.cardGreen]}>\n                            <Box style={{verticalAlign:'middle'}}>\n                                <AccountBalanceWalletIcon style={{fontSize:50}}/>\n                            </Box>\n                            <Box>\n                                <Typography variant=\"h6\">Todays Debit</Typography>\n                                <Typography><TrendingDownIcon/> {getDebits(Today)}</Typography>\n                            </Box>\n                        </Box>\n                    </Grid>\n\n                    <Grid item xs={3} sm={3}>\n                        <Box className={[classes.customCard,classes.cardYellow]}>\n                            <Box style={{verticalAlign:'middle'}}>\n                                <ShoppingCartIcon style={{fontSize:50}}/>\n                            </Box>\n                            <Box>\n                                <Typography variant=\"h6\">Total Orders</Typography>\n                                <Typography><ArrowUpwardIcon/> {history.length}</Typography>\n                            </Box>\n                        </Box>\n                    </Grid>\n                    \n                </Grid>\n\n                <Box style={{marginTop:2,display:\"flex\",flexDirection:\"row\"}}>\n                    <Box className={classes.shadowBox} style={{width:\"70%\"}}>\n                    \n                        <Box style={{padding:10}}>\n                            <Typography variant=\"h6\" component=\"h6\" \n                            style={{letterSpacing:2}}>PERFORMANCE GRAPH</Typography>\n                        </Box>\n                        <Box style={{overflow:\"scroll\"}}>\n                            <Line \n                            width={10}\n                            height={5}\n                            style={{margin:0}}\n                            data={LineData} options={LineOptions}\n                            />  \n                        </Box>\n                    \n                    </Box>\n                    <Box style={{marginLeft:10,width:\"30%\"}} className={classes.shadowBox}>\n                       \n                        <Box style={{padding:10}}>\n                            <Typography variant=\"h6\" component=\"h6\" \n                            style={{letterSpacing:2}}>RATINGS</Typography>\n                        </Box>\n                        <Box textAlign=\"center\">    \n                            <Typography className={classes.Ratings}>{getAvgStars()}</Typography>\n                            <Rating precision={0.5} value={getAvgStars()} readOnly />\n                        </Box>\n                    </Box>\n                </Box>\n\n                \n            </Box>\n            <Box textAlign=\"center\" style={{color:\"gray\",paddingTop:15}}>\n                <Typography>Copyrights <CopyrightIcon/> Reserved by Serve My Table</Typography>\n            </Box>\n        </Box>\n    );\n    }\n}\nAnalytics.propTypes = {\n    loadUser : PropTypes.func.isRequired,\n    getOrders : PropTypes.func.isRequired,\n    getAccounts : PropTypes.func.isRequired,\n    history : PropTypes.array,\n    accounts : PropTypes.array,\n}\nconst mapStateToProps = state => ({\n    history : state.history,\n    accounts : state.accounts,\n});\n\n\nexport default connect(mapStateToProps,{loadUser,getOrders, getAccounts})(Analytics);","import React from 'react';\nimport { \n    Accordion, AccordionDetails, AccordionSummary, \n    Box, CircularProgress, Grid,\n    Button, Divider, Typography \n} from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport SendIcon from '@material-ui/icons/Send';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\nimport { lightGreen } from '@material-ui/core/colors'\nimport { sendMessage } from '../../actions/alert';\nimport { setLoading } from '../../actions/loading'\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Alert from './Alerts';\nimport { useMediaQuery } from 'react-responsive';\n\nconst ColorButton = withStyles((theme) => ({\n    root: {\n      color: lightGreen[500],\n      borderColor : lightGreen[500],\n      '&:hover': {\n        color: lightGreen[700],\n        borderColor : lightGreen[700],\n      },\n    },\n  }))(Button);\n\nfunction Help({sendMessage, setLoading, loading}){\n\n    const [Subject,setSubject] = React.useState(\"\");\n    const [Message,setMessage] = React.useState(\"\");\n\n    function handleSubmit(e){\n        e.preventDefault();\n        sendMessage({message : Message , subject : Subject}); \n        setLoading();       \n    }\n    \n    const isMobile = useMediaQuery({ query: '(max-width: 768px)' });\n    const isMobileDevice = useMediaQuery({query: '(max-device-width: 768px)'});\n\n    return(\n        <div>\n\n            {isMobile || isMobileDevice ?\n                <Box style={{marginLeft:\"10px\",marginRight:\"10px\"}}>\n                <Grid container>\n                    <Grid item sm={6} xs={6}>\n                        <h3 className=\"mFont\"> Help </h3>\n                    </Grid>\n                    <Grid item sm={6} xs={6}>\n                        <Box textAlign=\"right\">\n                        <ColorButton\n                            startIcon={<WhatsAppIcon/>}\n                            href=\"https://api.whatsapp.com/send?phone=+919730525275\"\n                            variant=\"outlined\"\n                            >\n                            WhatsApp\n                        </ColorButton>\n                        </Box>\n                    </Grid>\n                </Grid>\n                \n                <br/>\n                </Box>\n            :\n            <Box>\n                <Grid container> \n                    <Grid item sm={6} xs={6}>\n                        <h3 className=\"mFont\"> Help </h3>\n                    </Grid>\n                    <Grid item sm={6} xs={6}>\n                        <Box textAlign=\"right\" className=\"mr-20\">\n                        <ColorButton\n                            startIcon={<WhatsAppIcon/>}\n                            href=\"https://api.whatsapp.com/send?phone=+919730525275\"\n                            variant=\"outlined\"\n                            >\n                            WhatsApp\n                        </ColorButton>\n                        </Box>\n                    </Grid>\n                </Grid>\n                \n                <Divider style={{marginTop:10}}/>\n                <br/>\n            </Box>\n            }\n\n            {isMobile || isMobileDevice ? \n                \n                <Box style={{marginLeft:\"10px\",marginRight:\"10px\"}}>\n                    <p className=\"mFont\"><strong>Feel free to message us.</strong></p>\n                    <Alert/>\n                    <form onSubmit={handleSubmit}>\n                        <input\n                            type=\"text\" \n                            className=\"form-control mFont\"\n                            placeholder=\"Subject\"\n                            name=\"Subject\"\n                            onChange={(e)=>setSubject(e.target.value)}\n                            required\n                        />\n                        <br/>\n                        <textarea \n                            type=\"text\" \n                            className=\"form-control mFont\" id=\"message\" \n                            placeholder=\"Message\" rows=\"3\"\n                            name=\"Message\"\n                            onChange={(e)=>setMessage(e.target.value)}\n                            required\n                            ></textarea>\n                        <br/>\n                        <Button \n                            variant=\"contained\" \n                            color=\"primary\" \n                            startIcon={<SendIcon/>}\n                            type=\"submit\"> \n                            Send Message \n                        </Button>\n\n                    </form>\n                    <br/>\n                    <p className=\"mFont\"> <strong>Note </strong>: We will get back to you within next 3 working days. </p>\n\n                    <p className=\"mFont\"><strong>FAQ's</strong></p>\n\n                    <Accordion>\n                        <AccordionSummary expandIcon={<ExpandMoreIcon/>}>\n                            <Typography>\n                                Add, Update, Delete Dishes\n                            </Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <Typography>\n                                <ol>    \n                                    <li>Login with your registered email id and password.\n                                    </li><li>   Press the “Dishes” button on the navigation bar.\n                                    </li><li>Click on “Add Dish” button.\n                                    </li><li>Fill in the basic details of the dish you wish to add.\n                                    </li><li>You can edit details of a particular dish easily whenever you want and even hide a dish from menu card.\n                                    </li>    \n                                </ol>\n                                <Button \n                                variant=\"contained\" \n                                color=\"secondary\" \n                                startIcon={<YouTubeIcon/>}\n                                href=\"https://youtu.be/trFoasyG4yI\"\n                                >YouTube</Button>\n                                \n                            </Typography>\n                        </AccordionDetails>\n                    </Accordion>\n\n                    <Accordion>\n                        <AccordionSummary expandIcon={<ExpandMoreIcon/>}>\n                            <Typography>\n                                Get, Print QR Codes\n                            </Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <Typography>\n                                <ol>    \n                                    <li>Login with your registered email id and password.\n                                    </li><li>Press the “QR Code” button on the navigation bar.\n                                    </li><li>Print QR Code by clicking on “Print codes” button.\n                                    </li><li>To generate codes go to My Account and edit number of Tables.\n                                    </li>    \n                                </ol>\n                                <Button \n                                variant=\"contained\" \n                                color=\"secondary\" \n                                startIcon={<YouTubeIcon/>}\n                                href=\"https://youtu.be/r6QFXeuVJVw\"\n                                >YouTube</Button>\n                                \n                            </Typography>\n                        </AccordionDetails>\n                    </Accordion>\n\n\n                    <Accordion>\n                        <AccordionSummary expandIcon={<ExpandMoreIcon/>}>\n                            <Typography>\n                                Order cancellation\n                            </Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <Typography>\n                                Order once placed cannot be cancelled by the guest.\n                                Order can be cancelled by the restaurant.\n                            </Typography>\n                        </AccordionDetails>\n                    </Accordion>\n\n\n\n                </Box>\n\n            :\n            \n                <Grid container spacing={2}>\n                    <Grid item sm={5} xs={5}>\n                        <p className=\"mFont\">Feel free to message us.</p>\n                        <Alert/>\n                        <form onSubmit={handleSubmit}>\n                            <input\n                                type=\"text\" \n                                className=\"form-control mFont\"\n                                placeholder=\"Subject\"\n                                name=\"Subject\"\n                                onChange={(e)=>setSubject(e.target.value)}\n                                required\n                            />\n                            <br/>\n                            <textarea \n                                type=\"text\" \n                                className=\"form-control mFont\" id=\"message\" \n                                placeholder=\"Message\" rows=\"3\"\n                                name=\"Message\"\n                                onChange={(e)=>setMessage(e.target.value)}\n                                required\n                                ></textarea>\n                            <br/>\n                            <Button \n                                variant=\"contained\" \n                                color=\"primary\" \n                                startIcon={<SendIcon/>}\n                                type=\"submit\"> \n                                Send Message \n                            </Button>\n\n                        </form>\n                        <br/>\n                        <p className=\"mFont\"> <strong>Note </strong>: We will get back to you within next 3 working days. </p>\n                        {\n                            loading && \n                            <Box style={{position:\"relative\",bottom:200,left:200}}>\n                                <CircularProgress/>\n                            </Box>\n                        }\n                        \n                    </Grid>\n                    <Grid item sm={5} xs={5}>\n                        <p className=\"mFont\">FAQ's</p>\n\n                        <Accordion>\n                            <AccordionSummary expandIcon={<ExpandMoreIcon/>}>\n                                <Typography>\n                                    Add, Update, Delete Dishes\n                                </Typography>\n                            </AccordionSummary>\n                            <AccordionDetails>\n                                <Typography>\n                                    <ol>    \n                                        <li>Login with your registered email id and password.\n                                        </li><li>   Press the “Dishes” button on the navigation bar.\n                                        </li><li>Click on “Add Dish” button.\n                                        </li><li>Fill in the basic details of the dish you wish to add.\n                                        </li><li>You can edit details of a particular dish easily whenever you want and even hide a dish from menu card.\n                                        </li>    \n                                    </ol>\n                                    <Button \n                                    variant=\"contained\" \n                                    color=\"secondary\" \n                                    startIcon={<YouTubeIcon/>}\n                                    href=\"https://youtu.be/trFoasyG4yI\"\n                                    >YouTube</Button>\n                                    \n                                </Typography>\n                            </AccordionDetails>\n                        </Accordion>\n\n                        <Accordion>\n                            <AccordionSummary expandIcon={<ExpandMoreIcon/>}>\n                                <Typography>\n                                    Get, Print QR Codes\n                                </Typography>\n                            </AccordionSummary>\n                            <AccordionDetails>\n                                <Typography>\n                                    <ol>    \n                                        <li>Login with your registered email id and password.\n                                        </li><li>Press the “QR Code” button on the navigation bar.\n                                        </li><li>Print QR Code by clicking on “Print codes” button.\n                                        </li><li>To generate codes go to My Account and edit number of Tables.\n                                        </li>    \n                                    </ol>\n                                    <Button \n                                    variant=\"contained\" \n                                    color=\"secondary\" \n                                    startIcon={<YouTubeIcon/>}\n                                    href=\"https://youtu.be/r6QFXeuVJVw\"\n                                    >YouTube</Button>\n                                    \n                                </Typography>\n                            </AccordionDetails>\n                        </Accordion>\n\n\n                        <Accordion>\n                            <AccordionSummary expandIcon={<ExpandMoreIcon/>}>\n                                <Typography>\n                                    Order cancellation\n                                </Typography>\n                            </AccordionSummary>\n                            <AccordionDetails>\n                                <Typography>\n                                    Order once placed cannot be cancelled by the guest.\n                                    Order can be cancelled by the restaurant.\n                                </Typography>\n                            </AccordionDetails>\n                        </Accordion>\n\n                    </Grid>\n                </Grid>\n            \n            }\n        </div>\n\n    );\n}\n\nHelp.propTypes={\n    sendMessage : PropTypes.func.isRequired,\n    setLoading : PropTypes.func.isRequired,\n    loading : PropTypes.bool \n};\n\nconst mapStateToProps = state =>({\n    loading : state.loading\n});\n\nexport default connect(mapStateToProps,{sendMessage,setLoading})(Help);","import React from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getOrders,OrderCancel,OrderComplete } from '../../actions/tables';\n\nimport {    Divider, Box, Grid, TextField, \n            InputAdornment, Card, CardContent,\n            CardActions,    \n            Typography,\n            Button} from '@material-ui/core';\n\nimport { useMediaQuery } from 'react-responsive';\nimport RestaurantMenuIcon from '@material-ui/icons/RestaurantMenu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nfunction TableManagement({tables,getOrders,OrderCancel,OrderComplete}){\n\n    const [searchTable, setSearch] = React.useState('');\n    const isMobile = useMediaQuery({ query: '(max-width: 768px)' });\n    const isMobileDevice = useMediaQuery({query: '(max-device-width: 768px)'});\n\n    function handleSearch(e){ setSearch(e.target.value); }\n\n    function handleCancel(TableNo,RestaurantID,OrderId){\n        OrderCancel({\n            TableNo : TableNo,\n            RestaurantId : RestaurantID,\n            OrderId : OrderId\n        });\n    }\n\n    function handleComplete(TableNo,RestaurantID,OrderId){\n        OrderComplete({\n            TableNo : TableNo,\n            RestaurantId : RestaurantID,\n            OrderId : OrderId\n        });\n    }\n\n    function mobileAllTables(){\n        const lst = [];\n        tables.map((table)=>(\n            (table.tableNo + \"\").indexOf(searchTable) > -1 &&\n            lst.push(\n                <Box>\n                <Box \n                    style={ table.OrderType === 'Local' ? {\n                        backgroundColor:'#28a745',\n                        border:'1px solid #28a745',\n                        borderTopLeftRadius : 10,\n                        borderTopRightRadius : 10,\n                        color:'#FFF'\n                    } : {\n                        backgroundColor:'#d63447',\n                        border:'1px solid #d63447',\n                        borderTopLeftRadius : 10,\n                        borderTopRightRadius : 10,\n                        color:'#FFF'\n                    }}\n                >\n                    <Typography style={{textAlign:'center'}}>\n                    {table.OrderType}\n                    </Typography>\n                </Box>\n                <Card variant=\"outlined\">\n                    <CardContent>\n                        \n                        <Typography variant=\"h5\">\n                            Table No. {table.tableNo}\n                        </Typography>\n                            \n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                            {table.CustomerName}<br/>\n                            {table.notes}\n                        </Typography>\n\n                        <Typography>\n                            {table.Orders.map((order)=>(\n                            <Grid container>\n                                <Grid item sm={8} xs={8}>\n                                    {order.DishName}\n                                </Grid>\n                                <Grid item sm={4} xs={4}>\n                                    {order.Quantity} \n                                </Grid> \n                            </Grid>\n                            ))}\n                        </Typography>\n                    </CardContent>          \n                    <CardActions>\n                        <Button \n                            variant=\"outlined\" \n                            color=\"secondary\" \n                            onClick={()=>{handleCancel(table.tableNo,table.RestaurantID,table.OrderId)}}\n                            >\n                            Cancel Order\n                        </Button>\n                        <Button \n                            variant=\"contained\" \n                            color=\"primary\" \n                            disableElevation\n                            onClick={()=>{handleComplete(table.tableNo,table.RestaurantID,table.OrderId)}}\n                            >\n                            Order Completed\n                        </Button>\n                    </CardActions>\n                </Card>\n                {table.OrderType === 'Delivery' &&\n                <Box \n                    style={{\n                        border:'1px solid #28a745',\n                        borderTopLeftRadius : 10,\n                        borderTopRightRadius : 10,\n                        color:'#FFF',\n                        padding:10\n                    }}>\n                    <Typography>Delivery Address</Typography>\n                    <Typography style={{marginTop:10}}>{table.CustomerAddress}</Typography>\n                </Box>\n                }\n                </Box>\n            )));\n\n        return lst;\n    }\n\n    function allTables(){\n        const lst = [];\n\n        tables.map((table)=>(\n            (table.tableNo + \"\").indexOf(searchTable) > -1 &&\n            lst.push(\n            <Grid item>\n                <Box \n                    style={ table.OrderType === 'Local' ? {\n                        backgroundColor:'#28a745',\n                        border:'1px solid #28a745',\n                        borderTopLeftRadius : 10,\n                        borderTopRightRadius : 10,\n                        color:'#FFF'\n                    } : {\n                        backgroundColor:'#d63447',\n                        border:'1px solid #d63447',\n                        borderTopLeftRadius : 10,\n                        borderTopRightRadius : 10,\n                        color:'#FFF'\n                    }}\n                >\n                    <Typography style={{textAlign:'center'}}>\n                    {table.OrderType}\n                    </Typography>\n                </Box>\n                <Card variant=\"outlined\">\n                    <CardContent>\n                        \n                        <Typography variant=\"h5\">\n                            Table No. {table.tableNo}\n                        </Typography>\n                            \n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                            {table.CustomerName}<br/>\n                            {table.notes}\n                        </Typography>\n\n                        <Typography>\n                            {table.Orders.map((order)=>(\n                            <Grid container>\n                                <Grid item sm={8} xs={8}>\n                                    {order.DishName}\n                                </Grid>\n                                <Grid item sm={4} xs={4}>\n                                    {order.Quantity} \n                                </Grid> \n                            </Grid>\n                            ))}\n                        </Typography>\n                    </CardContent>          \n                    <CardActions>\n                        <Button \n                            variant=\"outlined\" \n                            color=\"secondary\" \n                            onClick={()=>{handleCancel(table.tableNo,table.RestaurantID,table.OrderId)}}\n                            >\n                            Cancel Order\n                        </Button>\n                        <Button \n                            variant=\"contained\" \n                            color=\"primary\" \n                            disableElevation\n                            onClick={()=>{handleComplete(table.tableNo,table.RestaurantID,table.OrderId)}}\n                            >\n                            Order Completed\n                        </Button>\n                    </CardActions>\n                </Card>\n                {table.OrderType === 'Delivery' &&\n                <Box \n                    style={{\n                        border:'1px solid #28a745',\n                        borderTopLeftRadius : 10,\n                        borderTopRightRadius : 10,\n                        color:'#FFF',\n                        padding:10\n                    }}>\n                    <Typography>Delivery Address</Typography>\n                    <Typography style={{marginTop:10}}>{table.CustomerAddress}</Typography>\n                </Box>\n                }\n            </Grid>\n        )));\n        return lst;\n    }\n    \n    setTimeout(()=>{\n        getOrders();\n    },5000);\n    \n    return(\n        <div>\n        \n        {isMobile || isMobileDevice ? \n        \n        <Box style={{marginLeft:\"10px\",marginRight:\"10px\"}}>\n            \n            <h3 className=\"mFont\">Table Management</h3>    \n            <Box>\n                    \n                <TextField\n                    variant=\"outlined\"\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <SearchIcon/>\n                            </InputAdornment>\n                        ),\n                        style:{ height:40 }\n                    }}\n                    placeholder=\"Search by Table No\"\n                    onChange={handleSearch}\n                    fullWidth\n                />\n                    \n            </Box>\n        \n            <br/>\n            <Box>\n                {   tables.length > 0 ?\n                    mobileAllTables()\n                    :\n                    <Box style={{width:\"100%\"}}>\n                        <Typography style={{textAlign:\"center\"}}><RestaurantMenuIcon/></Typography>\n                        <Typography style={{textAlign:\"center\"}}>No Orders Placed yet</Typography>\n                    </Box>\n                }\n            </Box>\n        </Box>\n        \n        :\n        \n        <Box>\n            <Grid container>\n                <Grid item sm={8} xs={8}>\n                    <Box textAlign=\"left\"><h3 className=\"mFont\">Table Management</h3></Box>\n                </Grid>\n                <Grid item sm={4} xs={4}>\n                    <Box textAlign=\"center\">\n                        <TextField\n                            variant=\"outlined\"\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <SearchIcon/>\n                                    </InputAdornment>\n                                ),\n                                style:{ height:40 }\n                            }}\n                            placeholder=\"Search by Table No\"\n                            onChange={handleSearch}\n                        />\n                    </Box>\n                </Grid>\n            </Grid>\n            <Divider style={{marginTop:10}}/>\n            <br/><br/>\n            <Grid container>\n                \n                {   tables.length > 0 ?\n                    allTables()\n                    :\n                    <Box style={{width:\"100%\"}}>\n                        <Typography style={{textAlign:\"center\"}}><RestaurantMenuIcon/></Typography>\n                        <Typography style={{textAlign:\"center\"}}>No Orders Placed yet</Typography>\n                    </Box>\n                }\n            </Grid>\n            \n            </Box>\n            }\n        </div>\n    );\n}\n\nTableManagement.propTypes = {\n    tables : PropTypes.array.isRequired,\n    getOrders : PropTypes.func.isRequired,\n    OrderCancel : PropTypes.func.isRequired,\n    OrderComplete : PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state =>({\n    tables : state.tables\n});\n\nexport default connect(mapStateToProps,{getOrders,OrderCancel,OrderComplete})(TableManagement);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n    Avatar, Box, Button, Divider, \n    Grid, Typography, Dialog, \n    DialogTitle, DialogContent, \n    TextField, DialogActions, MenuItem,\n    } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport EditIcon from '@material-ui/icons/Edit';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport { green, pink, deepOrange } from '@material-ui/core/colors';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { \n    basicUpdate,\n    updateName, \n    updateLocation,\n    updateTable,\n    loadUser,\n    addTax,\n    removeTax,\n    updateUPI\n} from '../../actions/auth';\nimport Alert from './Alerts';\nimport { useMediaQuery } from 'react-responsive';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n\n    themeColor : {\n        color: theme.palette.getContrastText(\"#ffd31d\"),\n        backgroundColor: \"#ffd31d\",\n        width : \"150px\",\n        height : \"150px\",\n        fontSize : \"50px\",\n        \n    },\n    \n    pink: {\n        color: theme.palette.getContrastText(pink[500]),\n        backgroundColor: pink[500],\n        padding : \"10px\",\n        height : \"100px\"\n    },\n    green: {\n        color: '#fff',\n        backgroundColor: green[500],\n        padding : \"10px\",\n        height : \"100px\"\n    },\n    orange: {\n        color: theme.palette.getContrastText(deepOrange[500]),\n        backgroundColor: deepOrange[500],\n        padding : \"10px\",\n        height : \"100px\"\n    },\n    mBox: {\n        padding: 20,\n        marginTop: 10,\n        boxShadow:\"0px 3px 6px rgba(0,0,0,16%)\"\n    }\n}));\n\nfunction MyAccount({user,basicUpdate,updateName,updateLocation,updateTable,loadUser,addTax,removeTax,updateUPI}){\n    const classes = useStyles();\n    const [open,setOpen] = React.useState(false);\n    const [formData,setFormData] = React.useState({\n        RestaurantName : '',\n        Location : '',\n        Phone : null,\n        nTables : null\n    });\n    const [taxData,setTaxData] = React.useState({\n        Name:'',\n        Type:'',\n        Amount:null\n    });\n    const [fileDialogOpen,setDialogOpen] = React.useState(false);\n    \n    const isMobile = useMediaQuery({ query: '(max-width: 768px)' });\n    const isMobileDevice = useMediaQuery({query: '(max-device-width: 768px)'});\n\n    const [editName,setName] = React.useState('');\n    const [editLocation,setLocation] = React.useState('');\n    const [editTables,setTables] = React.useState(null);\n    const [UPI, setUPI] = React.useState('');\n    const [openName,setNameClose] = React.useState(false);\n    const [openLocation,setLocationClose] = React.useState(false);\n    const [openUPI, setUPIDialogClose] = React.useState(false);\n    const [openTable,setTableClose] = React.useState(false);\n    const [srcImg,setImg] = React.useState(null);\n\n    const [files,setFile] = React.useState(null);\n\n    function handleChangeName(e){ setName(e.target.value); }\n    function handleCloseName(e){ setNameClose(false); }\n    function handleChangeLocation(e){ setLocation(e.target.value); }\n    function handleCloseLocation(e){ setLocationClose(false); }\n    function handleChangeTable(e){ setTables(e.target.value); }\n    function handleChangeUPI(e){ setUPI(e.target.value); }\n\n    function handleCloseTable(e){ setTableClose(false); }\n    function openNameDialog(){ setNameClose(true); }\n    function openLocationDialog(){ setLocationClose(true); }\n    function openTableDialog(){ setTableClose(true); }\n    function openUPIDialog(){ setUPIDialogClose(true); }\n\n    function handleCloseUPIDialog(){ setUPIDialogClose(false); }\n    function handleClose(){ setOpen(false); }\n    function handleFileDialogClose(){ setDialogOpen(false); }\n    function handleChange(e){ setFormData({...formData,[e.target.name] : [e.target.value]}) }\n    \n    function handleUPISubmit(e){\n        e.preventDefault();\n        updateUPI({upiID : UPI})\n        setUPIDialogClose(false);\n    }\n\n    function handleSubmit(e){\n        e.preventDefault();\n        basicUpdate({\n            RestaurantName : formData.RestaurantName,\n            Location : formData.Location,\n            Phone : formData.Phone,\n            nTables : formData.nTables\n        });\n        setOpen(false);\n    }\n\n    function handleNameSubmit(e){\n        e.preventDefault();\n        updateName({RestaurantName : editName});\n        setNameClose(false);\n    }\n    function handleLocationSubmit(e){\n        e.preventDefault();\n        updateLocation({Location : editLocation});\n        setLocationClose(false);\n    }\n    function handleTableSubmit(e){\n        e.preventDefault();\n        updateTable({nTables : editTables});\n        setTableClose(false);\n    }\n\n    function handleImageSubmit(e){\n        e.preventDefault();\n        const config = {\n            headers : {\n                'Content-Type':'multipart/form-data'\n            }\n        }\n        var formData = new FormData();\n        formData.append(\"myFile\",files);\n        \n        axios.post('/api/profile/upload',formData,config)\n        .then((response)=>{if(response.data === \"ok\"){ loadUser(); }});\n        \n        handleFileDialogClose();\n    }\n\n    function handleAddTax(e){\n        e.preventDefault();\n        addTax(taxData);\n    }\n    \n    function handleChangeImage(event){\n        setFile(event.target.files[0]);\n        setImg(URL.createObjectURL(event.target.files[0]));\n    }\n\n    function Header(){\n        return(\n            <Grid container>\n                <Grid item sm={6} xs={6}>\n                    <h3 className=\"mFont\">My Account</h3>\n                </Grid>\n                <Grid item sm={6} xs={6}>\n                    <Box textAlign=\"right\" className={!isMobile && !isMobileDevice && \"mr-20\"}>\n                        \n                        <Button \n                            variant=\"contained\" \n                            color=\"primary\" \n                            onClick={()=>setOpen(true)}\n                            startIcon={<EditIcon/>}\n                            className=\"mFont\"\n                            >\n                            Add/Edit Profile\n                        </Button>\n                    </Box>\n                </Grid>\n            </Grid>\n        );\n    }\n\n    if(isMobile || isMobileDevice ){\n        return(\n            <Box style={{marginLeft:\"10px\",marginRight:\"10px\"}}>\n\n                <Header/>\n                <Box style={{marginTop:40}}>\n                <Grid container>\n                    <Grid item sm={2} xs={5}>\n                    { user.ImageUrl ? \n                        <Avatar className={classes.themeColor} src={user.ImageUrl} variant=\"rounded\"></Avatar> :\n                        <Avatar className={classes.themeColor} variant=\"rounded\">{user.username[0]}</Avatar>\n                    }\n                    </Grid>\n                    <Grid item sm={10} xs={7}>\n                        <h4 className=\"mFont\">{user.username}</h4>\n                        <p className=\"mFont\" style={{fontSize:\"0.8rem\"}}>{user.email}</p>\n                        <Button \n                            variant=\"outlined\" \n                            className=\"mFont\" \n                            color=\"primary\"\n                            onClick={()=>setDialogOpen(true)}\n                            startIcon={<PhotoCamera/>}\n                            >Upload Image\n                        </Button>\n                        \n                    </Grid>\n                </Grid>\n                </Box>\n                <Typography style={{letterSpacing:2,marginTop:10}} variant=\"h6\">BASIC DETAILS</Typography>\n                <Box className={classes.mBox}>\n                    <Box style={{marginTop:10}}>\n                        <Grid container>\n                            <Grid item xs={8} sm={8}>\n                                <Typography> {user.RestaurantName ? user.RestaurantName : \"Restaurant Name: \"}</Typography>\n                            </Grid>\n                            <Grid item xs={4} sm={4}>\n                                <Box textAlign=\"right\">\n                                <Button onClick={openNameDialog} variant=\"outlined\" color=\"primary\">Edit</Button>\n                                </Box>\n                            </Grid>\n                        </Grid>\n                        \n    \n                    </Box>\n                    <Box style={{marginTop:10}}>\n                    <Grid container>\n                        <Grid item xs={8} sm={8}>\n                            <Typography>{user.Location ? user.Location : \"Restaurant Address: \"}</Typography>\n                        </Grid>\n                        <Grid item xs={4} sm={4}>\n                            <Box textAlign=\"right\">\n                                <Button onClick={openLocationDialog} variant=\"outlined\" color=\"primary\">Edit</Button>\n                            </Box>\n                        </Grid>\n                    </Grid>\n                    \n                    </Box>\n                    <Box style={{marginTop:10}}>\n                        <Grid container>\n                            <Grid item xs={8} sm={8}>\n                                <Typography>Number of Tables : { user.nTables }</Typography>\n                            </Grid>\n                            <Grid item xs={4} sm={4}>\n                                <Box textAlign=\"right\">\n                                    <Button onClick={openTableDialog} variant=\"outlined\" color=\"primary\">Edit</Button>\n                                </Box>\n                            </Grid>\n                        </Grid>\n                        \n                    </Box>\n                </Box>\n                <Typography style={{letterSpacing:2,marginTop:10}} variant=\"h6\">TAXES & CHARGES</Typography>\n                <Alert/>\n                <Box className={classes.mBox}>\n                {user.Taxes.length > 0 ?\n                <Grid container style={{paddingTop:5,paddingBottom:5,marginTop:5,backgroundColor:\"#FFD31D\"}}>\n                    <Grid item xs={3} sm={3}><Typography className=\"mFont\" style={{textAlign:\"center\"}}>Tax Name</Typography></Grid>\n                    <Grid item xs={3} sm={3}><Typography className=\"mFont\" style={{textAlign:\"center\"}}>Type of tax</Typography></Grid>\n                    <Grid item xs={3} sm={3}><Typography className=\"mFont\" style={{textAlign:\"center\"}}>Amount</Typography></Grid>\n                    <Grid item xs={3} sm={3}><Typography className=\"mFont\" style={{textAlign:\"center\"}}>Delete</Typography></Grid>\n                </Grid>\n                :\n                <Typography className=\"mFont\" color=\"textSecondary\" style={{textAlign:\"center\"}}>No Taxes added</Typography>\n                }\n                {user.Taxes.length > 0 &&\n                user.Taxes.map((tax)=>(\n                    <Grid container style={{marginTop:5}}>\n                        <Grid item xs={3} sm={3}><Typography className=\"mFont\" style={{textAlign:\"center\"}}>{tax.TaxName}</Typography></Grid>\n                        <Grid item xs={3} sm={3}><Typography className=\"mFont\" style={{textAlign:\"center\"}}>{tax.TaxType}</Typography></Grid>\n                        <Grid item xs={3} sm={3}><Typography className=\"mFont\" style={{textAlign:\"center\"}}>{tax.Amount}</Typography></Grid>\n                        <Grid item xs={3} sm={3} style={{textAlign:\"center\"}}>\n                        <Button \n                        startIcon={<DeleteIcon/>} variant='outlined' \n                        color=\"secondary\" className=\"mFont\"\n                        onClick={()=>{removeTax({Name:tax.TaxName,Type:tax.TaxType,Amount:tax.Amount})}}\n                        >Delete</Button>\n                        </Grid>\n                    </Grid>\n                ))\n                }\n                </Box>\n                <Box className={classes.mBox} style={{marginTop:10,justifyContent:\"center\",alignContent:\"center\"}}>\n                    <form onSubmit={(e)=>handleAddTax(e)}>\n                        <TextField\n                            label=\"Name of Tax or Charges\"\n                            className=\"mFont customInput\"\n                            name=\"TaxName\"\n                            variant=\"outlined\"\n                            style={{marginTop:10,marginLeft:5,marginRight:5}}\n                            onChange={(e)=>setTaxData({...taxData,Name:e.target.value})}\n                            required\n                            fullWidth\n                        />\n                        <TextField\n                            select\n                            label=\"Select Type of Tax\"\n                            className=\"mFont customInput\"\n                            variant=\"outlined\"\n                            style={{marginTop:10,marginLeft:5,marginRight:5}}\n                            onChange={(e)=>setTaxData({...taxData,Type:e.target.value})}\n                            required\n                            fullWidth\n                            >\n                            <MenuItem key={1} value=\"Percentage\">\n                                Percentage\n                            </MenuItem>\n                            <MenuItem key={2} value=\"Fixed\">\n                                Fixed Amount\n                            </MenuItem>\n                        </TextField>\n                        <TextField\n                            label=\"Amount\"\n                            className=\"mFont customInput\"\n                            style={{marginTop:10,marginLeft:5,marginRight:5}}\n                            name=\"TaxAmount\"\n                            type=\"number\"\n                            variant=\"outlined\"\n                            onChange={(e)=>setTaxData({...taxData,Amount:e.target.value})}\n                            required\n                            fullWidth\n                        />\n                        <Button \n                            type=\"submit\" \n                            variant=\"outlined\" \n                            color=\"primary\" \n                            style={{marginTop:10,marginLeft:5,marginRight:5}}\n                            startIcon={<AddIcon/>}\n                            fullWidth\n                            >ADD TAX</Button>\n                    </form>\n                </Box>\n                <Dialog open={open} onClose={handleClose}>\n                    <DialogTitle>Profile</DialogTitle>\n                    <form onSubmit={handleSubmit}>\n                    <DialogContent>\n                        <Alert/>\n                        <TextField\n                            className=\"mFont customInput\"                                    \n                            label=\"Restaurant Name\"\n                            name=\"RestaurantName\"\n                            onChange={e => handleChange(e)}\n                            required\n                        />\n                        <br/><br/>\n                        <TextField\n                            label=\"Restaurant Address\"\n                            className=\"mFont customInput\"\n                            name=\"Location\"\n                            onChange={e => handleChange(e)}\n                            required\n                        />\n                        <br/><br/>\n                        <TextField\n                            label=\"Phone\"\n                            name=\"Phone\"\n                            className=\"mFont customInput\"\n                            onChange={e => handleChange(e)}\n                            type=\"tel\"\n                            required\n                        />\n                        <br/><br/>\n                        <TextField\n                            label=\"Number of Table\"\n                            className=\"mFont customInput\"\n                            name=\"nTables\"                                    \n                            type=\"number\"\n                            onChange={e => handleChange(e)}\n                            required\n                        />\n                        <br/><br/>\n                        \n                        <DialogActions>\n                        <Button onClick={handleClose} variant=\"contained\">Close</Button>\n                        <Button variant=\"contained\" color=\"primary\"\n                        startIcon={<SaveIcon/>} type=\"submit\">Save</Button>\n                    </DialogActions>\n                </DialogContent>\n                </form>\n            </Dialog>\n                <Dialog open={openTable} onClose={handleCloseTable}>\n                    <Alert/>\n                    <form onSubmit={handleTableSubmit}>\n                    <DialogContent>\n                        <TextField\n                            label=\"Number of Table\"\n                            className=\"mFont customInput\"\n                            name=\"nTables\"                                    \n                            type=\"number\"\n                            onChange={e => handleChangeTable(e)}\n                            required\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                            <Button onClick={handleCloseTable} variant=\"contained\">Close</Button>\n                            <Button variant=\"contained\" color=\"primary\"\n                            startIcon={<SaveIcon/>} type=\"submit\">Save</Button>\n                    </DialogActions>\n                    </form>\n                </Dialog>\n                <Dialog open={openLocation} onClose={handleCloseLocation}>\n                    <Alert/>\n                    <form onSubmit={handleLocationSubmit}>\n                    <DialogContent>\n                        <TextField\n                            label=\"Restaurant Address\"\n                            className=\"mFont customInput\"\n                            name=\"Location\"\n                            onChange={e => handleChangeLocation(e)}\n                            required\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                            <Button onClick={handleCloseLocation} variant=\"contained\">Close</Button>\n                            <Button variant=\"contained\" color=\"primary\"\n                            startIcon={<SaveIcon/>} type=\"submit\">Save</Button>\n                    </DialogActions>\n                    </form>\n                </Dialog> \n                <Dialog open={openName} onClose={handleCloseName}>\n                    <Alert/>\n                    <form onSubmit={handleNameSubmit}>\n                        <DialogContent>\n                            <TextField\n                                className=\"mFont customInput\"                                    \n                                label=\"Restaurant Name\"\n                                name=\"RestaurantName\"\n                                onChange={e => handleChangeName(e)}\n                                required\n                            />\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseName} variant=\"contained\">Close</Button>\n                            <Button variant=\"contained\" color=\"primary\"\n                            startIcon={<SaveIcon/>} type=\"submit\">Save</Button>\n                        </DialogActions>\n                    </form>\n                </Dialog>\n                <Dialog open={fileDialogOpen} onClose={handleFileDialogClose}>\n                    <DialogTitle>Upload Image</DialogTitle>\n                    <Alert/>\n                    <form \n                    onSubmit={(e)=>handleImageSubmit(e)} \n                    encType=\"multipart/form-data\">\n                    <DialogContent>\n                        <img id=\"imagePreview\" alt=\"\" src={srcImg} width=\"100px\" height=\"100px\"/><br/>\n                        <br/>\n                        <input\n                            type=\"file\"\n                            accept=\"image/*\"\n                            id=\"imageInp\"\n                            onChange={(e)=>handleChangeImage(e)}\n                            name=\"myFile\"/>\n                        <br/><br/>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleFileDialogClose} variant=\"contained\">Close</Button>\n                        <Button variant=\"contained\" color=\"primary\"\n                        startIcon={<CloudUploadIcon/>} type=\"submit\">Upload Image</Button>\n                    </DialogActions>\n                    </form>\n                </Dialog>\n                <Dialog open={openUPI} onClose={handleCloseUPIDialog}>\n                    <Alert/>\n                    <form onSubmit={handleUPISubmit}>\n                    <DialogContent>\n                        <TextField\n                            className=\"mFont customInput\"                                    \n                            label=\"UPI Id\"\n                            name=\"upiID\"\n                            onChange={e => handleChangeUPI(e)}\n                            required\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleCloseUPIDialog} variant=\"contained\">Close</Button>\n                        <Button variant=\"contained\" color=\"primary\"\n                        startIcon={<SaveIcon/>} type=\"submit\">Save</Button>\n                    </DialogActions>\n                    </form>\n                </Dialog>\n            \n            </Box> \n        );\n    }\n    else{\n    return(\n        <Box>\n            <Box>\n                <Header/>\n                <Divider style={{marginTop:10}}/>\n                <br/>\n                <Grid container spacing={2}>\n                    <Grid item sm={2}>\n                    { user.ImageUrl ? \n                        <Avatar className={classes.themeColor} src={user.ImageUrl} variant=\"rounded\"></Avatar> :\n                        <Avatar className={classes.themeColor} variant=\"rounded\">{user.username[0]}</Avatar>\n                    }\n                    </Grid>\n                    <Grid item sm={8}>\n                        <h4 className=\"mFont\">{user.username}</h4>\n                        <p className=\"mFont\">{user.email}</p>\n                        <Button \n                            variant=\"outlined\" \n                            className=\"mFont\" \n                            color=\"primary\"\n                            onClick={()=>setDialogOpen(true)}\n                            startIcon={<PhotoCamera/>}\n                            >Upload Image</Button>\n                            \n                    </Grid>\n                </Grid>\n                <br></br>\n                <Typography style={{letterSpacing:2}} variant=\"h6\">BASIC DETAILS</Typography>\n                <Box className={classes.mBox}>\n                    <Box style={{marginTop:10}}>\n                        <Grid container>\n                            <Grid item sm={8} xs={8}>\n                                <Typography>{user.RestaurantName ? user.RestaurantName : \"Restaurant Name: \"}</Typography>\n                            </Grid>\n                            <Grid item sm={4} xs={4}>\n                                <Box textAlign=\"right\">\n                                <Button onClick={openNameDialog} variant=\"outlined\" color=\"primary\">Edit</Button>\n                                </Box>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box style={{marginTop:10}}>\n                        <Grid container>\n                            <Grid item sm={8} xs={8}>\n                                <Typography> Number of Tables: {user.nTables}</Typography>\n                            </Grid>\n                            <Grid item sm={4} xs={4}>\n                                <Box textAlign=\"right\">\n                                    <Button onClick={openTableDialog} variant=\"outlined\" color=\"primary\">Edit</Button>\n                                </Box>\n                                \n                        \n                            </Grid>\n                        </Grid>\n                    </Box>\n                    <Box style={{marginTop:10}}>\n                        <Grid container>\n                            <Grid item sm={8} xs={8}>\n                                <Typography>{user.Location ? user.Location : \"Restaurant Address: \"}</Typography>\n                            </Grid>\n                            <Grid item sm={4} xs={4}>\n                                <Box textAlign=\"right\">\n                                    <Button onClick={openLocationDialog} variant=\"outlined\" color=\"primary\">Edit</Button>\n                                </Box>\n                            </Grid>\n                        </Grid>\n                    </Box>\n\n                    <Box style={{marginTop:10}}>\n                        <Grid container>\n                            <Grid item sm={8} xs={8}>\n                                <Typography>{user.UPIID ? user.UPIID : \"UPI ID: \"}</Typography>\n                            </Grid>\n                            <Grid item sm={4} xs={4}>\n                                <Box textAlign=\"right\">\n                                    <Button onClick={openUPIDialog} variant=\"outlined\" color=\"primary\">Edit</Button>\n                                </Box>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Box>\n\n                <Typography style={{letterSpacing:2,marginTop:10}} variant=\"h6\">TAXES & CHARGES</Typography>\n                <Alert/>\n                <Box className={classes.mBox}>\n                {user.Taxes.length > 0 ?\n                <Grid container style={{paddingTop:5,paddingBottom:5,marginTop:5,backgroundColor:\"#FFD31D\"}}>\n                    <Grid item xs={3} sm={3}><Typography className=\"mFont\" style={{textAlign:\"center\"}}>Tax Name</Typography></Grid>\n                    <Grid item xs={3} sm={3}><Typography className=\"mFont\" style={{textAlign:\"center\"}}>Type of tax</Typography></Grid>\n                    <Grid item xs={3} sm={3}><Typography className=\"mFont\" style={{textAlign:\"center\"}}>Amount</Typography></Grid>\n                    <Grid item xs={3} sm={3}><Typography className=\"mFont\" style={{textAlign:\"center\"}}>Delete</Typography></Grid>\n                </Grid>\n                :\n                <Typography className=\"mFont\" color=\"textSecondary\" style={{textAlign:\"center\"}}>No Taxes added</Typography>\n                }\n                {user.Taxes.length > 0 &&\n                user.Taxes.map((tax)=>(\n                    <Grid container style={{marginTop:5}}>\n                        <Grid item xs={3} sm={3}><Typography className=\"mFont\" style={{textAlign:\"center\"}}>{tax.TaxName}</Typography></Grid>\n                        <Grid item xs={3} sm={3}><Typography className=\"mFont\" style={{textAlign:\"center\"}}>{tax.TaxType}</Typography></Grid>\n                        <Grid item xs={3} sm={3}><Typography className=\"mFont\" style={{textAlign:\"center\"}}>{tax.Amount}</Typography></Grid>\n                        <Grid item xs={3} sm={3} style={{textAlign:\"center\"}}>\n                        <Button \n                        startIcon={<DeleteIcon/>} variant='outlined' \n                        color=\"secondary\" className=\"mFont\"\n                        onClick={()=>{removeTax({Name:tax.TaxName,Type:tax.TaxType,Amount:tax.Amount})}}\n                        >Delete</Button>\n                        </Grid>\n                    </Grid>\n                ))\n                }\n                </Box>\n                <Box className={classes.mBox} style={{justifyContent:\"center\",alignSelf:\"center\"}}>\n                    <form onSubmit={(e)=>handleAddTax(e)}>\n                        <TextField\n                            label=\"Name of Tax or Charges\"\n                            className=\"mFont customInput\"\n                            name=\"TaxName\"\n                            variant=\"outlined\"\n                            style={{marginRight:5}}\n                            onChange={(e)=>setTaxData({...taxData,Name:e.target.value})}\n                            required\n                        />\n                        <TextField\n                            select\n                            label=\"Select Type of Tax\"\n                            className=\"mFont customInput\"\n                            variant=\"outlined\"\n                            style={{marginLeft:5,marginRight:5}}\n                            onChange={(e)=>setTaxData({...taxData,Type:e.target.value})}\n                            required\n                            >\n                            <MenuItem key={1} value=\"Percentage\">\n                                Percentage\n                            </MenuItem>\n                            <MenuItem key={2} value=\"Fixed\">\n                                Fixed Amount\n                            </MenuItem>\n                        </TextField>\n                        <TextField\n                            label=\"Amount\"\n                            className=\"mFont customInput\"\n                            style={{marginLeft:5,marginRight:5}}\n                            name=\"TaxAmount\"\n                            type=\"number\"\n                            variant=\"outlined\"\n                            onChange={(e)=>setTaxData({...taxData,Amount:e.target.value})}\n                            required\n                        />\n                        <Button \n                            type=\"submit\" \n                            variant=\"outlined\" \n                            color=\"primary\" \n                            style={{paddingTop:15,paddingBottom:15,paddingLeft:15,paddingRight:15}}\n                            startIcon={<AddIcon/>}>ADD TAX</Button>\n                    </form>\n                </Box>\n                \n                \n            </Box>\n\n                <Dialog open={openLocation} onClose={handleCloseLocation}>\n                <Alert/>\n                <form onSubmit={handleLocationSubmit}>\n                <DialogContent>\n                    <TextField\n                        label=\"Restaurant Address\"\n                        className=\"mFont customInput\"\n                        name=\"Location\"\n                        onChange={e => handleChangeLocation(e)}\n                        required\n                    />\n                </DialogContent>\n                <DialogActions>\n                        <Button onClick={handleCloseLocation} variant=\"contained\">Close</Button>\n                        <Button variant=\"contained\" color=\"primary\"\n                        startIcon={<SaveIcon/>} type=\"submit\">Save</Button>\n                </DialogActions>\n                </form>\n            </Dialog>\n                <Dialog open={openTable} onClose={handleCloseTable}>\n                    <Alert/>\n                    <form onSubmit={handleTableSubmit}>\n                    <DialogContent>\n                        <TextField\n                            label=\"Number of Table\"\n                            className=\"mFont customInput\"\n                            name=\"nTables\"                                    \n                            type=\"number\"\n                            onChange={e => handleChangeTable(e)}\n                                required\n                            />\n                    </DialogContent>\n                    <DialogActions>\n                            <Button onClick={handleCloseTable} variant=\"contained\">Close</Button>\n                            <Button variant=\"contained\" color=\"primary\"\n                            startIcon={<SaveIcon/>} type=\"submit\">Save</Button>\n                    </DialogActions>\n                    </form>\n                </Dialog>\n                <Dialog open={openName} onClose={handleCloseName}>\n                    <Alert/>\n                    <form onSubmit={handleNameSubmit}>\n                    <DialogContent>\n                        <TextField\n                            className=\"mFont customInput\"                                    \n                            label=\"Restaurant Name\"\n                            name=\"RestaurantName\"\n                            onChange={e => handleChangeName(e)}\n                            required\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleCloseName} variant=\"contained\">Close</Button>\n                        <Button variant=\"contained\" color=\"primary\"\n                        startIcon={<SaveIcon/>} type=\"submit\">Save</Button>\n                    </DialogActions>\n                    </form>\n                </Dialog>\n                <Dialog open={fileDialogOpen} onClose={handleFileDialogClose}>\n                    <DialogTitle>Upload Image</DialogTitle>\n                    <Alert/>\n                    <form \n                    onSubmit={(e)=>handleImageSubmit(e)} \n                    encType=\"multipart/form-data\">\n                    <DialogContent>\n                        <img id=\"imagePreview\" alt=\"\" src={srcImg} width=\"100px\" height=\"100px\"/><br/>\n                        <br/>\n                        <input\n                            type=\"file\"\n                            accept=\"image/*\"\n                            id=\"imageInp\"\n                            onChange={(e)=>handleChangeImage(e)}\n                            name=\"myFile\"/>\n                        <br/><br/>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleFileDialogClose} variant=\"contained\">Close</Button>\n                        <Button variant=\"contained\" color=\"primary\"\n                        startIcon={<CloudUploadIcon/>} type=\"submit\">Upload Image</Button>\n                    </DialogActions>\n                    </form>\n                </Dialog>\n                <Dialog open={open} onClose={handleClose}>\n                    <DialogTitle>Profile</DialogTitle>\n                    <form onSubmit={handleSubmit}>\n                    <DialogContent>\n                        <Alert/>\n                        <TextField\n                            className=\"mFont customInput\"                                    \n                            label=\"Restaurant Name\"\n                            name=\"RestaurantName\"\n                            onChange={e => handleChange(e)}\n                            required\n                        />\n                        <br/><br/>\n                        <TextField\n                            label=\"Restaurant Address\"\n                            className=\"mFont customInput\"\n                            name=\"Location\"\n                            onChange={e => handleChange(e)}\n                            required\n                        />\n                        <br/><br/>\n                        <TextField\n                            label=\"Phone\"\n                            name=\"Phone\"\n                            className=\"mFont customInput\"\n                            onChange={e => handleChange(e)}\n                            type=\"tel\"\n                            required\n                        />\n                        <br/><br/>\n                        <TextField\n                            label=\"Number of Table\"\n                            className=\"mFont customInput\"\n                            name=\"nTables\"                                    \n                            type=\"number\"\n                            onChange={e => handleChange(e)}\n                            required\n                        />\n                        <br/><br/>\n                        \n                        <DialogActions>\n                            <Button onClick={handleClose} variant=\"contained\">Close</Button>\n                            <Button variant=\"contained\" color=\"primary\"\n                            startIcon={<SaveIcon/>} type=\"submit\">Save</Button>\n                        </DialogActions>\n                    </DialogContent>\n                    </form>\n                </Dialog>      \n                <Dialog open={openUPI} onClose={handleCloseUPIDialog}>\n                    <Alert/>\n                    <form onSubmit={handleUPISubmit}>\n                    <DialogContent>\n                        <TextField\n                            className=\"mFont customInput\"                                    \n                            label=\"UPI Id\"\n                            name=\"upiID\"\n                            onChange={e => handleChangeUPI(e)}\n                            required\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleCloseUPIDialog} variant=\"contained\">Close</Button>\n                        <Button variant=\"contained\" color=\"primary\"\n                        startIcon={<SaveIcon/>} type=\"submit\">Save</Button>\n                    </DialogActions>\n                    </form>\n                </Dialog>\n\n        </Box>\n    );\n    }\n}\n\nMyAccount.propTypes = {\n    user : PropTypes.object.isRequired,\n    basicUpdate : PropTypes.func.isRequired,\n    updateName : PropTypes.func.isRequired,\n    updateLocation : PropTypes.func.isRequired,\n    updateTable : PropTypes.func.isRequired,\n    loadUser : PropTypes.func.isRequired,\n    addTax : PropTypes.func.isRequired,\n    removeTax : PropTypes.func.isRequired,\n    updateUPI : PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state=>({\n    user : state.auth.user\n});\n\nexport default connect(mapStateToProps,{basicUpdate,updateName,updateLocation,updateTable,loadUser,addTax,removeTax,updateUPI})(MyAccount);","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\n\r\nconst PaginationComponent = ({\r\n    total = 0,\r\n    itemsPerPage = 10,\r\n    currentPage = 1,\r\n    onPageChange\r\n}) => {\r\n    const [totalPages, setTotalPages] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (total > 0 && itemsPerPage > 0)\r\n            setTotalPages(Math.ceil(total / itemsPerPage));\r\n    }, [total, itemsPerPage]);\r\n\r\n    const paginationItems = useMemo(() => {\r\n        const pages = [];\r\n\r\n        for (let i = 1; i <= totalPages; i++) {\r\n            pages.push(\r\n                <Pagination.Item\r\n                    key={i}\r\n                    active={i === currentPage}\r\n                    onClick={() => onPageChange(i)}\r\n                >\r\n                    {i}\r\n                </Pagination.Item>\r\n            );\r\n        }\r\n\r\n        return pages;\r\n    }, [totalPages, currentPage]);\r\n\r\n    if (totalPages === 0) return null;\r\n\r\n    return (\r\n        <Pagination>\r\n            <Pagination.Prev\r\n                onClick={() => onPageChange(currentPage - 1)}\r\n                disabled={currentPage === 1}\r\n            />\r\n            {paginationItems}\r\n            <Pagination.Next\r\n                onClick={() => onPageChange(currentPage + 1)}\r\n                disabled={currentPage === totalPages}\r\n            />\r\n        </Pagination>\r\n    );\r\n};\r\n\r\nexport default PaginationComponent;","import React, { useState } from \"react\";\r\nimport { TextField, InputAdornment } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst Search = ({ onSearch }) => {\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const onInputChange = value => {\r\n        setSearch(value);\r\n        onSearch(value);\r\n    };\r\n    return (\r\n        <TextField\r\n            type=\"text\"\r\n            variant='outlined'\r\n            className='mFont'\r\n            style={{ width: \"240px\"}}\r\n            placeholder=\"Search\"\r\n            value={search}\r\n            InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <SearchIcon />\r\n                  </InputAdornment>\r\n                ),\r\n                style:{ height:40 } \r\n              }}\r\n            onChange={e => onInputChange(e.target.value)}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Search;","import React from 'react';\n//import { DataGrid } from '@material-ui/data-grid';\n\nimport {  Divider, TableRow, Typography,\n          TableHead, TableContainer, TableCell,\n          Paper, Box, Collapse, IconButton,\n          Table, TableBody, Grid\n        } from '@material-ui/core';\n\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { useMediaQuery } from 'react-responsive';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport { connect } from 'react-redux';\nimport { getOrders } from '../../actions/history';\n\nimport { Pagination, Search } from \"./DataTable\";\n\nconst useRowStyles = makeStyles({\n    root: {\n      '& > *': {\n        borderBottom: 'unset',\n      },\n    },\n});\n  \nfunction OrderHistory({getOrders,history}){\n\n    const [searchOrder,setSearch]= React.useState('');\n    const isMobile = useMediaQuery({ query: '(max-width: 768px)' });\n    const isMobileDevice = useMediaQuery({query: '(max-device-width: 768px)'});\n    const [totalItems, setTotalItems] = React.useState(0);\n    const [currentPage,setCurrentPage] = React.useState(1);\n    const ITEMS_PER_PAGE = 10;\n\n    const historyData = React.useMemo(() => {\n      let computedOrders = history;\n\n      if (searchOrder) {\n          let temp = [];\n          for(var i = 0 ; i< history.length ; i++){\n            if(history[i].CompletedDateOrder && history[i].CompletedDateOrder.toUpperCase().indexOf(searchOrder.toUpperCase()) > -1 )\n            {\n              temp.push(history[i]);\n            }\n          }\n          computedOrders = temp;\n      }\n\n      setTotalItems(computedOrders.length);\n\n      //Current Page slice\n      return computedOrders.slice(\n          (currentPage - 1) * ITEMS_PER_PAGE,\n          (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\n      );\n  }, [currentPage, searchOrder]);\n\n    React.useEffect(()=>{\n      getOrders();\n    },[]);\n    \n    function Row(props) {\n        const { row } = props;\n        const [open, setOpen] = React.useState(false);\n        const classes = useRowStyles();\n        \n        return (\n          <React.Fragment>\n            <TableRow className={classes.root}>\n              <TableCell>\n                <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n                  {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                </IconButton>\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.CompletedDateOrder}\n              </TableCell>\n              <TableCell>{row.CompletedTimeOrder}</TableCell>\n              <TableCell>{row.tableNo}</TableCell>\n              <TableCell>{row.TotalBill}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                  <Box margin={1}>\n                    <Typography variant=\"h6\" gutterBottom component=\"div\">\n                      Order Summary\n                    </Typography>\n                    <Table size=\"small\" aria-label=\"purchases\">\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Dish Name</TableCell>\n                          <TableCell>Quantity</TableCell>\n                          <TableCell>Price</TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {row.Orders.map((historyRow) => (\n                          <TableRow key={historyRow.date}>\n                            <TableCell component=\"th\" scope=\"row\">{historyRow.DishName}</TableCell>\n                            <TableCell>{historyRow.Quantity}</TableCell>\n                            <TableCell>{parseInt(historyRow.Rate) * parseInt(historyRow.Quantity)}</TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </Box>\n                </Collapse>\n              </TableCell>\n            </TableRow>\n          </React.Fragment>\n        );\n    }\n\n    return(\n        <div>\n            {isMobile || isMobileDevice ?\n            <Box style={{marginLeft:\"10px\",marginRight:\"10px\"}}>\n              <h3 className=\"mFont\">Order History</h3> \n              <br/>\n            </Box>\n            :\n            <Box>\n              <h3 className=\"mFont\">Order History</h3>\n              <Divider style={{marginTop:10}}/>\n            </Box>\n            }\n            { history.length > 0 ?\n            <Box style={{marginTop:10}}>\n              <Search\n                onSearch={value => {\n                    setSearch(value);\n                    setCurrentPage(1);\n                }}\n              />\n              <TableContainer component={Paper} style={{marginTop:10}}>\n                <Table aria-label=\"collapsible table\">\n                    <TableHead style={{backgroundColor:'#FFD31D'}}>\n                      <TableRow>\n                          <TableCell />\n                          <TableCell className='mFont' style={{fontWeight:700}}>Date</TableCell>\n                          <TableCell className='mFont' style={{fontWeight:700}}>Time</TableCell>\n                          <TableCell className='mFont' style={{fontWeight:700}}>Table No</TableCell>\n                          <TableCell className='mFont' style={{fontWeight:700}}>Total Bill</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      { historyData.map((row) => (<Row key={row._id} row={row} />))}\n                    </TableBody>\n                </Table>\n              </TableContainer>\n              <div style={{marginTop:20}}>\n                  <Pagination\n                    total={totalItems}\n                    itemsPerPage={ITEMS_PER_PAGE}\n                    currentPage={currentPage}\n                    onPageChange={page => setCurrentPage(page)}\n                  />\n              </div>\n            </Box>\n            :\n            <Box style={{width:\"100%\",marginTop:40}}>\n              <Typography style={{textAlign:\"center\"}}><NotInterestedIcon/></Typography>\n              <Typography style={{textAlign:\"center\"}}>No history available yet.</Typography>\n            </Box>\n            }\n        </div>\n    );\n}\n\nOrderHistory.propTypes = {\n    getOrders : PropTypes.func.isRequired,\n    history : PropTypes.array\n}\nconst mapStateToProps = state => ({\n    history : state.history\n});\n\n\nexport default connect(mapStateToProps,{getOrders})(OrderHistory);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\nimport { \n    Box, Button, Divider, \n    Grid, Typography, TextField,\n    Dialog, DialogTitle, DialogContent, Radio,\n    RadioGroup, FormControlLabel, DialogActions\n} from '@material-ui/core';\n\nimport { getAccounts, setAccount } from '../../actions/accounts';\nimport { getOrders } from '../../actions/history';\nimport Alerts from './Alerts';\n\nimport { Pagination, Search } from \"./DataTable\";\n\nfunction Accounts({getAccounts,setAccount,getOrders,accounts,history}) {\n\n    const isMobile = useMediaQuery({ query: '(max-width: 768px)' });\n    const isMobileDevice = useMediaQuery({query: '(max-device-width: 768px)'});\n    const [open,setOpen]=React.useState(false);\n    const [value, setValue] = React.useState('true');\n    const [Particulars,setParticulars] = React.useState('');\n    const [Amount,setAmount] = React.useState(0);\n    const [search,setSearch] = React.useState(\"\");\n    const [totalItems, setTotalItems] = React.useState(0);\n    const [currentPage,setCurrentPage] = React.useState(1);\n    const ITEMS_PER_PAGE = 10;\n    const lst = [...history,...accounts];\n\n    const handleOpen = () => { setOpen(true); };\n    const handleClose = () => { setOpen(false); };\n    const handleParticulars = (event) => { setParticulars(event.target.value) };\n    const handleChange = (event) => { setValue(event.target.value); };\n    const handleAmount = (event) => { setAmount(event.target.value); };\n\n    function handleSubmit(e){\n        e.preventDefault();\n        if(value === \"true\"){\n            \n            setAccount({\n                amountType:value,\n                particulars:Particulars,\n                credit:Amount,\n            });\n        }else{\n            setAccount({\n                amountType:value,\n                particulars:Particulars,\n                debit:Amount,\n            });\n        }\n        setTimeout(()=>{handleClose();},3000);\n    }\n\n    function getTotalCredit() {\n\n        var TotalBill = 0.0;\n        for(var i=0 ; i<lst.length ; i++){\n            if(lst[i].Date && lst[i].AmountType === true && lst[i].Date.toUpperCase().indexOf(search.toUpperCase()) > -1){\n                TotalBill += parseFloat(lst[i].Credit)\n            }else\n            if(lst[i].CompletedDateOrder && lst[i].AmountType !== false && lst[i].CompletedDateOrder.toUpperCase().indexOf(search.toUpperCase()) > -1){\n                \n                TotalBill += parseFloat(lst[i].TotalBill)\n            }\n        }\n\n        return TotalBill;\n    }\n\n    function getTotalDebit() {\n\n        var TotalDebit = 0.0;\n        for(var i=0 ; i<lst.length ; i++){\n            if(lst[i].AmountType === false && lst[i].Date.toUpperCase().indexOf(search.toUpperCase()) > -1){\n                TotalDebit += parseFloat(lst[i].Debit);\n            }\n        }\n        return TotalDebit;\n    }\n\n    React.useEffect(()=>{\n        getAccounts();\n        getOrders();\n    },[])\n\n    const accountsData = React.useMemo(() => {\n        let computedAccounts = lst;\n        if (search) {\n            let temp = [];\n            for(var i = 0 ; i < lst.length ; i++){\n\n                if(lst[i].CompletedDateOrder && lst[i].CompletedDateOrder.toUpperCase().indexOf(search.toUpperCase()) > -1){\n                    temp.push(lst[i]);\n                }\n                if(lst[i].Date && lst[i].Date.toUpperCase().indexOf(search.toUpperCase()) > -1){\n                    temp.push(lst[i]);\n                }\n            }\n            computedAccounts = temp;\n        }\n\n        setTotalItems(computedAccounts.length);\n\n        //Current Page slice\n        return computedAccounts.slice(\n            (currentPage - 1) * ITEMS_PER_PAGE,\n            (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\n        );\n    }, [currentPage,search]);\n\n    return (\n        <Box>\n            {\n                isMobile || isMobileDevice ?\n                <Box style={{marginLeft : \"10px\",marginRight:\"10px\"}}>\n                <Grid container>\n                    <Grid item sm={6} xs={6}>\n                        <h3 className=\"mFont\">Accounts</h3>\n                    </Grid>\n                    <Grid item sm={6} xs={6}>\n                        <Box textAlign=\"right\">\n                            <Button \n                                className=\"mFont\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                style={{marginLeft:10}}\n                                onClick={handleOpen}\n                                disableElevation \n                            >Credit/Debit</Button>\n                        </Box>\n                    </Grid>\n                </Grid>\n                </Box>\n                :\n                <Box>\n                <Grid container>\n                    <Grid item sm={6} xs={6}>\n                        <h3 className=\"mFont\">Accounts</h3>\n                    </Grid>\n                    <Grid item sm={6} xs={6}>\n                        <Box textAlign=\"right\" className=\"mr-20\">\n                            <Button \n                                className=\"mFont\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                style={{marginLeft:10}}\n                                onClick={handleOpen}\n                                disableElevation \n                            >Credit/Debit</Button>\n                        </Box>\n                    </Grid>\n                </Grid>\n                </Box>\n            }\n            \n            <Divider style={{marginTop:10}}/>\n            <Dialog open={open} onClose={handleClose}>\n                <DialogTitle className=\"mFont\">Credit or Debit Account</DialogTitle>\n                <form onSubmit={(e)=>handleSubmit(e)} >\n                <DialogContent>\n                { alert && <Alerts/> }\n                <Box style={{margin:10}}>\n                    <Typography>Account Type</Typography>\n                    <RadioGroup aria-label=\"AccountType\" name=\"AccountType1\" value={value} onChange={handleChange}>\n                        <FormControlLabel value=\"true\" control={<Radio />} label=\"Credit\" />\n                        <FormControlLabel value=\"false\" control={<Radio />} label=\"Debit\" />\n                    </RadioGroup>\n                </Box>\n                <Box style={{margin:10}}>\n                    <TextField\n                        variant=\"outlined\"\n                        placeholder=\"Particulars\"\n                        onChange={handleParticulars}\n                        value={Particulars}\n                        label=\"Particulars\"\n                    />\n                </Box>\n                <Box style={{margin:10}}>\n                    <TextField\n                        variant=\"outlined\"\n                        type=\"number\"\n                        placeholder=\"Amount\"\n                        onChange={handleAmount}\n                        value={Amount}\n                        label=\"Amount\"\n                    />\n                </Box>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}> Close </Button>\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">Submit</Button>\n                </DialogActions>\n                </form>\n            </Dialog>\n\n            <Box style={{marginTop:10,marginBottom:10}}>\n                <Search\n                    onSearch={value => {\n                        setSearch(value);\n                        setCurrentPage(1);\n                    }}\n                />\n            </Box>\n            <div className=\"row w-100\">\n                    <div className=\"col mb-3 col-12 text-center\">\n                <table className=\" table table-striped\">\n                    <thead style={{backgroundColor:'#FFD31D'}}>\n                        <tr>\n                            <th className='mFont'>#</th>\n                            <th className='mFont'>Date</th>\n                            <th className='mFont'>Particulars</th>\n                            <th className='mFont'>Debit</th>\n                            <th className='mFont'>Credit</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                        accountsData.slice(0).reverse().map((row,index)=>\n                            <tr>\n                                <th className='mFont'>{ index + 1 }</th>\n                                <td className='mFont'>{ row.CompletedDateOrder ? row.CompletedDateOrder : row.Date }</td>\n                                <td className='mFont'>{ row.Particulars }</td>\n                                <td className='mFont'>{ row.Debit }</td>\n                                <td className='mFont'>{ row.TotalBill ? row.TotalBill : row.Credit }</td>\n                            </tr>\n                        )\n                        }       \n                    </tbody>\n                </table>\n            </div>\n            </div>\n            <Box>\n                <Pagination\n                    total={totalItems}\n                    itemsPerPage={ITEMS_PER_PAGE}\n                    currentPage={currentPage}\n                    onPageChange={page => setCurrentPage(page)}\n                />\n            </Box>\n\n            <Box style={{\n                    position:\"fixed\",\n                    bottom:0,\n                    boxShadow:\"0px 3px 6px rgba(0,0,0,0.16)\",\n                    padding: 20,\n                    backgroundColor:\"#FFD31D\",\n                    width: \"100%\",\n                }}\n                >\n                <Box>\n                   \n                    <Grid container>\n                        <Grid item xs={4} sm={4}>\n                            <Typography>Total Debit</Typography>\n                            <Typography><strong>{ getTotalDebit() }</strong></Typography>\n                        </Grid>\n                        <Grid item xs={4} sm={4}>\n                            <Typography>Total Credit</Typography>\n                            <Typography> <strong>{ getTotalCredit() }</strong> </Typography>\n                        </Grid>\n                        <Grid item xs={4} sm={4}>\n                            <Typography>Balance</Typography>\n                            <Typography> <strong>{ getTotalCredit() - getTotalDebit() }</strong> </Typography>\n                        </Grid>\n                    </Grid>\n                    \n                    \n                </Box>\n            </Box>\n        </Box>\n\n    );\n}\n\nAccounts.propTypes = {\n    history : PropTypes.array,\n    accounts : PropTypes.array,\n    getAccounts : PropTypes.func.isRequired,\n    setAccount : PropTypes.func.isRequired,\n    getOrders : PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    history : state.history,\n    accounts : state.accounts\n});\n\nexport default connect(mapStateToProps,{ getAccounts, setAccount, getOrders })(Accounts);","import {\r\n    \r\n    ADD_EMPLOYEE_SUCCESS,\r\n    ADD_EMPLOYEE_FAIL,\r\n    SET_EMPLOYEE_SUCCESS,\r\n    SET_EMPLOYEE_FAIL,\r\n    DELETE_EMPLOYEE_SUCCESS,\r\n    DELETE_EMPLOYEE_FAIL,\r\n\r\n} from './types';\r\n\r\nimport { setAlert } from './alert';\r\nimport axios from 'axios';\r\nimport { removeLoading } from './loading';\r\n\r\nexport const saveEmployee = ({EmployeeName,EmployeeAddress,EmployeePost,EmployeeSalary,\r\n    EmployeePhone,EmployeeDOB,EmployeeAadhar,EmployeePan,EmployeeProfilePic,\r\n    EmployeeAadharPic,EmployeePanPic}) => async dispatch =>{\r\n\r\n    try {\r\n        const config = {\r\n            headers : {\r\n                'Content-Type':'multipart/form-data'\r\n            }\r\n        }\r\n        const formData = new FormData();\r\n        formData.append(\"EmployeeProfilePic\",EmployeeProfilePic);\r\n        formData.append(\"EmployeeAadharPic\",EmployeeAadharPic);\r\n        formData.append(\"EmployeePanPic\",EmployeePanPic);\r\n        formData.append(\"EmployeeName\",EmployeeName);\r\n        formData.append(\"EmployeeAddress\",EmployeeAddress);\r\n        formData.append(\"EmployeePost\",EmployeePost);\r\n        formData.append(\"EmployeeSalary\",EmployeeSalary);\r\n        formData.append(\"EmployeePhone\",EmployeePhone);\r\n        formData.append(\"EmployeeDOB\",EmployeeDOB);\r\n        formData.append(\"EmployeeAadhar\",EmployeeAadhar);\r\n        formData.append(\"EmployeePan\",EmployeePan);\r\n        \r\n        const resp = await axios.post(\"/api/employee/\",formData,config);\r\n        dispatch({\r\n            type : ADD_EMPLOYEE_SUCCESS,\r\n            payload : resp.data\r\n        });\r\n        dispatch(removeLoading());\r\n        dispatch(getEmployees());\r\n        dispatch(setAlert(\"Employee Added Successfully\",\"success\"));\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type : ADD_EMPLOYEE_FAIL\r\n        });\r\n        dispatch(removeLoading());\r\n        dispatch(setAlert(\"Unable to add Employee\",\"error\"));\r\n    }\r\n\r\n};\r\n\r\nexport const getEmployees = () => async dispatch =>{\r\n\r\n    try{\r\n        const response = await axios.get(\"/api/employee/\");\r\n        dispatch({\r\n            type : SET_EMPLOYEE_SUCCESS,\r\n            payload : response.data\r\n        });\r\n\r\n    }catch(err){\r\n        console.log(err);\r\n        dispatch({\r\n            type : SET_EMPLOYEE_FAIL,\r\n        });\r\n    }\r\n\r\n};\r\n\r\nexport const deleteEmployee = ({EmpID,ImageFileName,AadharFileName,PanFileName}) => async dispatch =>{\r\n\r\n    try {\r\n        \r\n        const response = await axios.post(\"/api/employee/delete\",\r\n        {EmpId:EmpID,ImageFileName,AadharFileName,PanFileName},\r\n        {headers:{\r\n            \"Content-Type\" : \"application/json\"\r\n        }\r\n        });\r\n        dispatch({\r\n            type:DELETE_EMPLOYEE_SUCCESS,\r\n            payload:response.data\r\n        });\r\n        dispatch(getEmployees());\r\n        dispatch(removeLoading());\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        dispatch({\r\n            type:DELETE_EMPLOYEE_FAIL\r\n        });\r\n    }   dispatch(removeLoading());\r\n};\r\n\r\nexport const saveAttendance = ({data}) => async dispatch =>{\r\n\r\n    try{\r\n        const config = {\r\n            headers:{\r\n                \"Content-Type\" : \"application/json\"\r\n            }\r\n        };\r\n        const body = JSON.stringify({data:data});\r\n        const response = await axios.post(\"/api/employee/attendance\",body,config);\r\n        dispatch(removeLoading());\r\n        if(response.data === 'ok'){\r\n            dispatch(setAlert('Attendance saved successfully','success'));\r\n        }\r\n\r\n    }catch(error){\r\n        //console.log(error);\r\n        dispatch(removeLoading());\r\n        dispatch(setAlert('Attendance was not saved','error'));\r\n        \r\n    }\r\n};","import React from 'react';\n\nimport { Avatar, Box, LinearProgress  } from '@material-ui/core';\nimport Logo from '../../assets/logo.png';\n\nfunction Loading(){\n    return(\n        <Box\n            display='flex'\n            alignContent=\"center\"\n            justifyContent=\"center\"\n            style={{ marginTop:'20%' }}\n            >\n\n            <Box>\n                <Avatar src={Logo} variant='rounded' style={{width:'100px',height:'auto'}}/>\n                <LinearProgress style={{color : \"#FFD31D\"}}/>\n            </Box>   \n\n        </Box> \n    );\n}\n\nexport default Loading;","import React from 'react';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { \r\n    Box, Button, Grid, Avatar, Divider, TextField, Typography, \r\n    Dialog, DialogTitle, DialogContent, DialogActions, \r\n} from '@material-ui/core';\r\n\r\nimport Alerts from './Alerts';\r\nimport { saveEmployee, getEmployees, deleteEmployee, saveAttendance} from '../../actions/employees';\r\nimport { getAttendance } from '../../actions/attendance';\r\nimport { connect } from 'react-redux';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport PersonAddDisabledIcon from '@material-ui/icons/PersonAddDisabled';\r\n\r\nimport Loading from '../components/Loading';\r\nimport { setLoading } from '../../actions/loading';\r\n\r\nimport { Pagination, Search } from \"./DataTable\";\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n\r\n    customInput : {\r\n        marginTop:10,\r\n        marginBottom:10,\r\n        width:theme.spacing(40),\r\n    },\r\n    customFileInput : {\r\n        marginTop:10,\r\n        marginBottom:10,\r\n        width:theme.spacing(40),\r\n        border : \"1px solid rgba(0,0,0,0.20)\",\r\n        padding : 12,\r\n        borderRadius : 5\r\n    },\r\n    customMobileFileInput:{\r\n        marginTop:10,\r\n        marginBottom:10,\r\n        width:\"100%\",\r\n        border : \"1px solid rgba(0,0,0,0.20)\",\r\n        padding : 12,\r\n        borderRadius : 5,\r\n    },\r\n    customText:{\r\n        marginTop:10,\r\n        marginBottom:10,\r\n        width:theme.spacing(40),\r\n        padding : 12,\r\n    },\r\n    alignCenter:{\r\n        display:'flex',justifyContent:'center',alignContent:'center'\r\n    },\r\n    mtb10:{\r\n        marginTop:10,marginBottom:10\r\n    },\r\n    mBox: {\r\n        padding: 20,\r\n        marginTop: 10,\r\n        boxShadow:\"0px 3px 6px rgba(0,0,0,16%)\"\r\n    },\r\n    present:{ backgroundColor:\"#28a745\",color:'#FFF' },\r\n    absent :{ backgroundColor:\"#d63447\",color:'#FFF' },\r\n    Box1 : {\r\n        padding:10,\r\n        backgroundColor:\"#28a7458F\",\r\n        textAlign:\"left\",\r\n        marginTop:10,\r\n        marginBottom:10,\r\n        border:'4px solid #28a745',\r\n        borderRadius:5,\r\n        marginRight:10\r\n    },\r\n    Box2:{\r\n        padding:10,\r\n        backgroundColor:\"#d634478F\",\r\n        textAlign:\"left\",\r\n        marginTop:10,\r\n        marginBottom:10,\r\n        border:'4px solid #d63447',\r\n        borderRadius:5,\r\n        marginLeft:10,\r\n        marginRight:10\r\n    },\r\n    Box3:{\r\n        padding:10,\r\n        backgroundColor:\"#FFD31D8F\",\r\n        textAlign:\"left\",\r\n        marginTop:10,\r\n        marginBottom:10,\r\n        border:'4px solid #FFD31D',\r\n        borderRadius:5,\r\n        marginLeft:10,\r\n    }\r\n\r\n}));\r\n\r\nfunction Employees(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const isMobile = useMediaQuery({ query: '(max-width: 768px)' });\r\n    const isMobileDevice = useMediaQuery({query: '(max-device-width: 768px)'});\r\n\r\n    const [openAddEmployee,setOpenEmployee] = React.useState(false);\r\n    const [openAttendance,setOpenAttendance] = React.useState(false);\r\n    const [openEmployeeDetails,setOpenDetails] = React.useState(false);\r\n    const [singleEmpData,setEmpData] = React.useState(null);\r\n    const [showTable,setShowTable] = React.useState(false);\r\n\r\n    const [date, setDates] = React.useState({\r\n        StartDate:null,\r\n        EndDate:null\r\n    });\r\n\r\n    const [EmpDetails,setDetails] = React.useState({\r\n        EmployeeName : '',\r\n        EmployeeAddress : '',\r\n        EmployeePost : '',\r\n        EmployeeSalary : null,\r\n        EmployeePhone : null,\r\n        EmployeeDOB : null,\r\n        EmployeeAadhar : null,\r\n        EmployeePan : null\r\n    });\r\n\r\n    const [EmpDocuments,setEmpDocuments] = React.useState({\r\n        EmployeeProfilePic : null,\r\n        EmployeeAadharPic : null,\r\n        EmployeePanPic : null\r\n    });\r\n\r\n    const [ProfilePic,setProfilePic] = React.useState(null);\r\n    \r\n    const handleOpenAttendanceDialog = () =>{ setOpenAttendance(true); };\r\n    const handleCloseAttendanceDialog = () =>{ setOpenAttendance(false); };\r\n    const handleCloseDialog = () =>{setOpenEmployee(false)};\r\n    const handleOpenDialog = () =>{setOpenEmployee(true)};\r\n    const handleChange = (e) =>{\r\n        setDetails({...EmpDetails,[e.target.name]:e.target.value});\r\n    };\r\n\r\n    const handleChangeDocuments = (e) =>{\r\n        setEmpDocuments({...EmpDocuments,[e.target.name]:e.target.files[0]});\r\n        if(e.target.name === \"EmployeeProfilePic\"){\r\n            setProfilePic(URL.createObjectURL(e.target.files[0]));\r\n        }\r\n    };\r\n    \r\n    React.useEffect(()=>{ props.getEmployees(); },[]);\r\n    \r\n    \r\n    function handleFormSubmit(e){\r\n        e.preventDefault();\r\n        props.saveEmployee({\r\n            EmployeeName : EmpDetails.EmployeeName,\r\n            EmployeeAddress: EmpDetails.EmployeeAddress,\r\n            EmployeePost : EmpDetails.EmployeePost,\r\n            EmployeeSalary : EmpDetails.EmployeeSalary,\r\n            EmployeePhone : EmpDetails.EmployeePhone,\r\n            EmployeeDOB : EmpDetails.EmployeeDOB,\r\n            EmployeeAadhar : EmpDetails.EmployeeAadhar,\r\n            EmployeePan : EmpDetails.EmployeePan,\r\n            EmployeeProfilePic : EmpDocuments.EmployeeProfilePic,\r\n            EmployeeAadharPic : EmpDocuments.EmployeeAadharPic,\r\n            EmployeePanPic : EmpDocuments.EmployeePanPic\r\n        });\r\n        props.setLoading();\r\n    }\r\n\r\n    function EmployeeView({employee}){\r\n\r\n        const downloadFile = (fileUrl) =>{\r\n\r\n            const newWindow = window.open(fileUrl, '_blank', 'location=yes,height=570,width=520,scrollbars=yes,status=yes');\r\n            newWindow.document.write(\"<p>Downloading in progress</p>\");\r\n            newWindow.location = fileUrl;\r\n        };\r\n\r\n        const DeleteEmployee = (EmpID,ImageFileName,AadharFileName,PanFileName) =>{\r\n            props.deleteEmployee({EmpID,ImageFileName,AadharFileName,PanFileName});\r\n            props.setLoading();\r\n            setOpenDetails(false);\r\n        };\r\n\r\n        \r\n\r\n        const handleCloseView = () =>{ setOpenDetails(false) };\r\n\r\n        function AttendanceTable(){\r\n\r\n            const [totalItems, setTotalItems] = React.useState(0);\r\n            const [currentPage,setCurrentPage] = React.useState(1);\r\n            const ITEMS_PER_PAGE = 5;\r\n\r\n            const attendanceData = React.useMemo(() => {\r\n                let computedAttendance = props.attendance;\r\n                let paging = [];\r\n                if(computedAttendance !== null && computedAttendance.length > 0){\r\n                    setTotalItems(computedAttendance.length);\r\n                    paging = computedAttendance.slice(\r\n                        (currentPage - 1) * ITEMS_PER_PAGE,\r\n                        (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n                    );\r\n                }else{\r\n                    setTotalItems(0);\r\n                }\r\n\r\n                //Current Page slice\r\n                return paging;\r\n            }, [currentPage]);\r\n\r\n            function getTotalPresent(){\r\n                var counter = 0;\r\n                if(props.attendance !== null){\r\n                    let nAttendance = props.attendance;\r\n                    for(var i = 0 ; i < nAttendance.length ; i++)\r\n                    {\r\n                        if(nAttendance[i].Status === 'PRESENT'){\r\n                            counter+=1;\r\n                        }\r\n                    }\r\n                }\r\n                return counter;\r\n            }\r\n            \r\n            function getTotalAbsent(){\r\n                var counter = 0;\r\n                if(props.attendance !== null){\r\n                    let nAttendance = props.attendance;\r\n                    for(var i = 0 ; i < nAttendance.length ; i++)\r\n                    {\r\n                        if(nAttendance[i].Status === 'ABSENT'){\r\n                            counter+=1;\r\n                        }\r\n                    }\r\n                }\r\n                return counter;\r\n            }\r\n\r\n            function getTotalDays(){\r\n                \r\n                const sDay = (new Date(date.StartDate)).getTime();\r\n                const eDay = (new Date(date.EndDate)).getTime();\r\n                const diffDay = Math.abs(sDay - eDay);\r\n                return Math.ceil((diffDay / (1000 * 60 * 60 * 24))+1); \r\n            }\r\n\r\n            return(\r\n            <Box>\r\n                <Box display='flex' flexDirection='row' justifyContent='center' alignContent='center'>\r\n                    <Box className={classes.Box1}>\r\n                        <Typography className='mFont'>Total Days Present</Typography>\r\n                        <Typography className='mFont'>{getTotalPresent()}</Typography>\r\n                    </Box>\r\n                    <Box className={classes.Box2}>\r\n                        <Typography className='mFont'>Total Days Absent</Typography>\r\n                        <Typography className='mFont'>{getTotalAbsent()}</Typography>\r\n                    </Box>\r\n                    <Box className={classes.Box3}>\r\n                        <Typography className='mFont'>Total Days</Typography>\r\n                        <Typography className='mFont'>{getTotalDays()}</Typography>\r\n                    </Box>\r\n                </Box>\r\n                <table className='table table-stripped'>\r\n                    <thead style={{backgroundColor:\"#FFD31D\"}}>\r\n                        <tr>\r\n                            <th className='mFont text-center'>Date</th>\r\n                            <th className='mFont text-center'>In Time</th>\r\n                            <th className='mFont text-center'>Out Time</th>\r\n                            <th className='mFont text-center'>Status</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {attendanceData.map(attendance=>(\r\n                            <tr>\r\n                                <td className='mFont text-center'>{attendance.date}</td>\r\n                                <td className='mFont text-center'>{attendance.inTime}</td>\r\n                                <td className='mFont text-center'>{attendance.outTime}</td>\r\n                                <td>\r\n                                    <Box className={classes.alignCenter}>\r\n                                    <Box \r\n                                    className={ attendance.Status=== 'PRESENT' ? \r\n                                                classes.present : \r\n                                                classes.absent }\r\n                                    style={{padding:10}}>\r\n                                        {attendance.Status}\r\n                                    </Box>\r\n                                    </Box>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n                <Pagination\r\n                    total={totalItems}\r\n                    itemsPerPage={ITEMS_PER_PAGE}\r\n                    currentPage={currentPage}\r\n                    onPageChange={page => setCurrentPage(page)}\r\n                />\r\n            </Box>\r\n            );\r\n        }\r\n\r\n        \r\n        function EmployeeDetails(){\r\n            \r\n            const [StartDate,setStartDate] = React.useState(null);\r\n            const [EndDate,setEndDate] = React.useState(null);\r\n    \r\n            function handleGetAttendance(e){\r\n                e.preventDefault();\r\n                props.getAttendance({EmpID:employee._id,StartDate,EndDate});\r\n                setDates({StartDate:StartDate,EndDate:EndDate});\r\n                setShowTable(true);\r\n            }\r\n            return(\r\n                <Box>\r\n                    <Typography style={{letterSpacing:2,marginTop:10}}>BASIC DETAILS</Typography>\r\n\r\n                    <Box className={classes.mBox}>\r\n                        <Box display='flex' flexDirection='row' justifyContent='space-between'>\r\n                            <Typography>Employee Id</Typography>\r\n                            <Typography>{employee._id}</Typography>\r\n                        </Box>\r\n                        <Box style={{marginTop:10}} display='flex' flexDirection='row' justifyContent='space-between'>\r\n                            <Typography>Post</Typography>\r\n                            <Typography>{employee.EmpPost}</Typography>\r\n                        </Box>\r\n                        <Box style={{marginTop:10}} display='flex' flexDirection='row' justifyContent='space-between'>\r\n                            <Typography>Salary</Typography>\r\n                            <Typography>{employee.Salary}</Typography>\r\n                        </Box>\r\n                        <Box style={{marginTop:10}} display='flex' flexDirection='row' justifyContent='space-between'>\r\n                            <Typography>Date Of Birth</Typography>\r\n                            <Typography>{employee.DOB}</Typography>\r\n                        </Box>\r\n                    </Box>\r\n                    <Typography style={{letterSpacing:2,marginTop:10}}>DOCUMENT DETAILS</Typography>\r\n                    <Box className={classes.mBox}>\r\n                        <Box display='flex' flexDirection='row' justifyContent='space-between'>\r\n                            <Typography>Aadhar Number</Typography>\r\n                            <Typography onClick={()=>{downloadFile(employee.AadharFileUrl)}} style={{cursor:'pointer',color:'#0645AD',textDecoration:'underlined'}} >{employee.AadharNo}</Typography>\r\n                        </Box>\r\n                        <Box style={{marginTop:10}} display='flex' flexDirection='row' justifyContent='space-between'>\r\n                            <Typography>Pan Number</Typography>\r\n                            <Typography onClick={()=>{downloadFile(employee.PanFileUrl)}} style={{cursor:'pointer',color:'#0645AD',textDecoration:'underlined'}} >{employee.PanNo}</Typography>\r\n                        </Box>\r\n                    </Box>\r\n                    <Typography style={{letterSpacing:2,marginTop:10}}>ATTENDANCE DETAILS</Typography>\r\n                    <Box className={classes.mBox}>\r\n                        <Box>\r\n                            <form onSubmit={(e)=>handleGetAttendance(e)}>\r\n                            <TextField\r\n                                variant='outlined'\r\n                                type='date'\r\n                                label='Start Date'\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                inputProps={{\r\n                                    style:{height:10}\r\n                                }}\r\n                                value={StartDate}\r\n                                onChange={(e)=>{setStartDate(e.target.value)}}\r\n                                required\r\n                            />\r\n                            <TextField\r\n                                variant='outlined'\r\n                                type='date'\r\n                                label='End Date'\r\n                                style={{marginLeft:10}}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                inputProps={{\r\n                                    style:{height:10}\r\n                                }}\r\n                                value={EndDate}\r\n                                onChange={(e)=>{setEndDate(e.target.value)}}\r\n                                required\r\n                            />\r\n                            <Button type='submit' style={{marginLeft:10,padding:10,paddingLeft:20,paddingRight:20}} color='primary' variant='outlined'>Submit</Button>\r\n                            </form>\r\n                        </Box>\r\n                        { showTable && <AttendanceTable/>}\r\n                    </Box>\r\n                </Box>\r\n            );\r\n        }\r\n\r\n\r\n\r\n        if(isMobile || isMobileDevice ){\r\n            return(\r\n                <Box style={{marginLeft:20,marginTop:20,marginRight:20}}>\r\n                    <Box display=\"flex\" flexDirection=\"row\">\r\n                        <Button startIcon={<ArrowBackIosIcon/>} onClick={handleCloseView} style={{background:'#ffe98d',width:'100px'}}>B A C K</Button>\r\n                    </Box>\r\n                    <Grid container style={{marginTop:10}}>\r\n                        <Grid item sm={6} xs={6}>\r\n                            <Avatar variant=\"rounded\" src={employee.ImageFileUrl} alt=\"Profile Pic\" style={{width:200,height:200,border:\"1px solid #000\"}}/>\r\n                        </Grid>\r\n                        <Grid item sm={6} xs={6}>\r\n                            <Typography variant=\"h6\">{employee.Name}</Typography>\r\n                            <Typography variant=\"h6\" color=\"textSecondary\">{employee.EmpPost}</Typography>\r\n                            <Typography variant=\"h6\" color=\"textSecondary\">{employee.Phone}</Typography>\r\n                            <Typography variant=\"h6\" color=\"textSecondary\">{employee.Address}</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <EmployeeDetails/>\r\n                \r\n                    <Box>\r\n                        <Button onClick={()=>{\r\n                            DeleteEmployee(\r\n                                employee._id,\r\n                                employee.ImageFileName,\r\n                                employee.AadharFileName,\r\n                                employee.PanFileName\r\n                                )\r\n                            }} \r\n                            style={{marginTop:10}} \r\n                            startIcon={<DeleteIcon/>} \r\n                            variant=\"contained\" \r\n                            color=\"secondary\"\r\n                            fullWidth\r\n                            >Delete Employee</Button>\r\n                    </Box>\r\n                </Box>\r\n            );\r\n        }\r\n\r\n        return(\r\n            <Box style={{marginLeft:20,marginTop:20}}>\r\n                <Box display=\"flex\" flexDirection=\"row\">\r\n                    <Button startIcon={<ArrowBackIosIcon/>} onClick={handleCloseView} style={{background:'#ffe98d',width:'100px'}}>B A C K</Button>\r\n                </Box>               \r\n                <Grid container style={{marginTop:10}}>\r\n                    <Grid item sm={3} xs={3}>\r\n                        <Avatar variant=\"rounded\" src={employee.ImageFileUrl} alt=\"Profile Pic\" style={{width:200,height:200,border:\"1px solid #000\"}}/>\r\n                    </Grid>\r\n                    <Grid item sm={9} xs={9}>\r\n                        <Typography variant=\"h6\">{employee.Name}</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">{employee.EmpPost}</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">{employee.Phone}</Typography>\r\n                        <Typography variant=\"h6\" color=\"textSecondary\">{employee.Address}</Typography>\r\n                    </Grid>\r\n                </Grid>                \r\n                <EmployeeDetails/>\r\n                <Box>\r\n                    <Button onClick={()=>{\r\n                        DeleteEmployee(employee._id,employee.ImageFileName,employee.AadharFileName,employee.PanFileName)\r\n                        }} style={{marginTop:10}} startIcon={<DeleteIcon/>} variant=\"contained\" color=\"secondary\">Delete Employee</Button>\r\n                </Box>\r\n\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    function EmployeeTable(){\r\n    \r\n        const [search, setSearch] = React.useState(\"\");\r\n        const [totalItems, setTotalItems] = React.useState(0);\r\n        const [currentPage,setCurrentPage] = React.useState(1);\r\n        \r\n        const ITEMS_PER_PAGE = 10;\r\n\r\n        const employeeData = React.useMemo(() => {\r\n            let computedEmployees = props.employees;\r\n    \r\n            if (search) {\r\n                computedEmployees = computedEmployees.filter(\r\n                    emp =>\r\n                        emp.Name.toLowerCase().includes(search.toLowerCase()) ||\r\n                        emp.Phone.toLowerCase().includes(search.toLowerCase())\r\n                );\r\n            }\r\n    \r\n            setTotalItems(computedEmployees.length);\r\n    \r\n            //Current Page slice\r\n            return computedEmployees.slice(\r\n                (currentPage - 1) * ITEMS_PER_PAGE,\r\n                (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n            );\r\n        }, [currentPage, search]);\r\n\r\n        if(props.employees.length>0){\r\n            return(\r\n                <Box>\r\n                <div style={{marginTop:10,marginBottom:10}}>\r\n                    <Search\r\n                        onSearch={value => {\r\n                            setSearch(value);\r\n                            setCurrentPage(1);\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"row w-100\">\r\n                    <div className=\"col mb-3 col-12 text-center\">\r\n                        <table className=\"table table-striped\">\r\n                            <thead style={{backgroundColor:'#FFD31D'}}>\r\n                                <tr>\r\n                                    <th className='mFont'>#</th>\r\n                                    <th className='mFont'>Name</th>\r\n                                    <th className='mFont'>Post</th>\r\n                                    <th className='mFont'>Phone</th>\r\n                                    <th className='mFont'>Address</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {employeeData.map((emp,index) => (\r\n                                    <tr>\r\n                                        <th scope=\"row\" key={emp.id} className='mFont'>\r\n                                            {index+1}\r\n                                        </th>\r\n                                        <td className='mFont'\r\n                                        style={{cursor:'pointer',color:'#0645AD'}} \r\n                                        onClick={\r\n                                            ()=>{\r\n                                                setEmpData(emp);\r\n                                                setOpenDetails(true);\r\n                                            }\r\n                                        }>{emp.Name}</td>\r\n                                        <td className='mFont'>{emp.EmpPost}</td>\r\n                                        <td className='mFont'>{emp.Phone}</td>\r\n                                        <td className='mFont'>{emp.Address}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <Pagination\r\n                        total={totalItems}\r\n                        itemsPerPage={ITEMS_PER_PAGE}\r\n                        currentPage={currentPage}\r\n                        onPageChange={page => setCurrentPage(page)}\r\n                    />\r\n                </div>\r\n                </Box>\r\n            );\r\n        }\r\n        else{\r\n            return(<Box></Box>);\r\n        }\r\n    }\r\n\r\n    function AttendanceDialog(){\r\n\r\n        const [selected,setSelected] = React.useState({});\r\n        const [inTime,setInTime] = React.useState({});\r\n        const [outTime,setOutTime] = React.useState({});\r\n\r\n        async function checkAttendance(){\r\n\r\n            try{\r\n                const config = {\r\n                    headers:{\r\n                        \"Content-Type\" : \"application/json\"\r\n                    }\r\n                };\r\n                const response = await axios.get('/api/employee/checkAttendance',config);\r\n                return response.data;\r\n        \r\n            }catch(error){\r\n                //console.log(error);\r\n                //return false;\r\n            }\r\n        };\r\n\r\n        const handleChangeInTime = (value,empID) =>{\r\n            setInTime({...inTime,[empID]:value});\r\n        };\r\n\r\n        const handleChangeOutTime = (value,empID) =>{\r\n            setOutTime({...outTime,[empID]:value});\r\n        };\r\n\r\n        const handleSubmitData = () =>{\r\n\r\n            const mdata = [];\r\n            let today = new Date().toISOString().slice(0, 10);\r\n            for(var i = 0 ; i < props.employees.length ; i++){\r\n                var temp = {\r\n                    Status : null,\r\n                    inTime : null,\r\n                    outTime : null,\r\n                };\r\n\r\n                var singleEmployeeID = (props.employees[i]._id).toString();\r\n\r\n                if(selected[singleEmployeeID] === 'PRESENT'){\r\n                    temp.Status = 'PRESENT';\r\n                }else{\r\n                    temp.Status = 'ABSENT';\r\n                }\r\n                if(inTime[singleEmployeeID]){\r\n                    temp.inTime = inTime[singleEmployeeID];\r\n                }\r\n                if(outTime[singleEmployeeID]){\r\n                    temp.outTime = outTime[singleEmployeeID];\r\n                }\r\n\r\n                mdata.push({\r\n                    id : singleEmployeeID,\r\n                    ...temp    \r\n                })\r\n            }\r\n            props.saveAttendance({data : {date : today,data : mdata}});\r\n            props.setLoading();\r\n            handleCloseAttendanceDialog();\r\n        };\r\n        const [resp,setResp] = React.useState(false);\r\n        checkAttendance().then((data)=>{\r\n            setResp(data);\r\n        });\r\n        if(resp){\r\n\r\n            return(\r\n                <Dialog open={openAttendance} onClose={handleCloseAttendanceDialog}>\r\n                <DialogTitle>Attendance</DialogTitle>\r\n                <DialogContent>\r\n                <Box style={{marginTop:20,marginBottom:20}}>\r\n                    <Typography className='mFont' style={{textAlign:'center'}}>Attendance have been submitted successfully</Typography>\r\n                </Box>\r\n                </DialogContent>\r\n                </Dialog>\r\n            \r\n            )\r\n        }\r\n        else{\r\n        return(\r\n            <Dialog open={openAttendance} onClose={handleCloseAttendanceDialog} fullWidth maxWidth=\"lg\">\r\n                <DialogTitle>Attendance</DialogTitle>\r\n                <DialogContent>\r\n                    <table className='table'>\r\n                        <thead style={{backgroundColor:'#FFD31D'}}>\r\n                            <tr>\r\n                                <th className='mFont text-center'>#</th>\r\n                                <th className='mFont text-center'>Name</th>\r\n                                <th className='mFont text-center'>In Time</th>\r\n                                <th className='mFont text-center'>Out Time</th>\r\n                                <th className='mFont text-center'>Attendance</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                props.employees.length > 0 &&\r\n                                props.employees.map((emp,index)=>(\r\n                                    <tr>\r\n                                        <td className='mFont text-center'>{index+1}</td>\r\n                                        <td className='mFont text-center'>{emp.Name}</td>\r\n                                        <td>\r\n                                            <Box className={classes.alignCenter}>\r\n                                                <TextField\r\n                                                    variant='outlined'\r\n                                                    type='time'\r\n                                                    color='primary'\r\n                                                    placeholder='In Time'\r\n                                                    onChange={(e)=>{handleChangeInTime(e.target.value,emp._id)}}\r\n                                                    inputProps={{style:{height:10,width:150}}}\r\n                                                />\r\n                                            </Box>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Box className={classes.alignCenter}>\r\n                                                <TextField\r\n                                                    variant='outlined'\r\n                                                    type='time'\r\n                                                    color='primary'\r\n                                                    placeholder='Out Time'\r\n                                                    onChange={(e)=>{handleChangeOutTime(e.target.value,emp._id)}}\r\n                                                    inputProps={{style:{height:10,width:150}}}\r\n                                                />\r\n                                            </Box>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Box className={classes.alignCenter}>\r\n                                                <Button \r\n                                                className={ selected[emp._id]=== 'PRESENT' ? classes.present : classes.absent}\r\n                                                onClick={()=>{\r\n                                                    selected[emp._id] === 'PRESENT'?\r\n                                                    setSelected({...selected,[emp._id]:'ABSENT'})\r\n                                                :\r\n                                                    setSelected({...selected,[emp._id]:'PRESENT'});\r\n                                                }}\r\n                                                >\r\n                                                    {selected[emp._id]=== 'PRESENT' ? 'PRESENT' : 'ABSENT'}\r\n                                                </Button>\r\n                                            </Box>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                            \r\n                        </tbody>\r\n                    </table>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" style={{color:\"black\"}} onClick={handleCloseAttendanceDialog}>Close</Button>\r\n                    <Button variant=\"contained\" color=\"primary\" style={{marginLeft:10}} onClick={handleSubmitData}>SAVE</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n        }\r\n    }\r\n\r\n    if(openEmployeeDetails){\r\n        return <EmployeeView employee={singleEmpData}/>\r\n    }\r\n    else if(props.loading){\r\n        return <Loading/>\r\n    }\r\n    else if(isMobile || isMobileDevice){\r\n        return(\r\n            <Box>\r\n                <Box>\r\n                <Grid container style={{marginLeft:10,marginRight:10}}>\r\n                    <Grid item sm={5} xs={5}>\r\n                        <h3 className=\"mFont\">Employees</h3>\r\n                    </Grid>\r\n                    <Grid item sm={7} xs={7}>\r\n                        <Box textAlign=\"right\">\r\n                        <Button \r\n                            className=\"mFont\"\r\n                            color=\"secondary\"\r\n                            variant=\"contained\" \r\n                            style={{marginRight:10}}\r\n                            onClick={handleOpenAttendanceDialog}\r\n                            disableElevation\r\n                        >Take Attendance</Button>\r\n                        <Button \r\n                            className=\"mFont\"\r\n                            startIcon={<AddIcon/>}\r\n                            color=\"primary\"\r\n                            variant=\"contained\" \r\n                            style={{marginRight:20}}\r\n                            onClick={handleOpenDialog}\r\n                            disableElevation\r\n                        >Add Employees</Button>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                {props.employees.length <= 0 ?\r\n                    <Box style={{width:\"100%\",marginTop:40}}>\r\n                        <Typography style={{textAlign:\"center\"}}><PersonAddDisabledIcon/></Typography>\r\n                        <Typography style={{textAlign:\"center\"}}>No Employees Added yet.</Typography>\r\n                    </Box>\r\n                    :\r\n                    <EmployeeTable/>\r\n                }\r\n                </Box>\r\n                \r\n                <AttendanceDialog/>\r\n\r\n                <Dialog open={openAddEmployee} onClose={handleCloseDialog} fullWidth maxWidth=\"lg\">\r\n                <DialogTitle className='mFont'>Add Employee</DialogTitle>\r\n                <Divider/>\r\n                <form onSubmit={(e)=>handleFormSubmit(e)} encType=\"multipart/form-data\">\r\n                    <DialogContent>\r\n                        {props.alert.length > 0 && <Alerts/>}\r\n                        <Typography style={{letterSpacing:2,textAlign:'center',marginTop:10,marginBottom:10}} variant=\"h6\">BASIC INFORMATION</Typography>\r\n                        <Box>\r\n                            <Box className={classes.alignCenter}>\r\n                            {ProfilePic === null ? \r\n                                <Box style={{width:200,height:200,border:\"1px solid black\"}}></Box>\r\n                                :\r\n                                <img src={ProfilePic} width=\"200px\" height=\"200px\" alt=\"unable to display.\" style={{border:\"1px solid black\"}}/>\r\n                            }\r\n                            </Box>\r\n                            <Box>\r\n                                <Typography variant=\"h6\" style={{textAlign:'center',marginTop:10,marginBottom:10}}>Upload Employee Photo</Typography>\r\n                                <Box className={classes.alignCenter}>\r\n                                    <input\r\n                                        name=\"EmployeeProfilePic\"\r\n                                        variant=\"outlined\"\r\n                                        onChange={handleChangeDocuments}\r\n                                        className={classes.customFileInput}\r\n                                        type=\"file\"\r\n                                        accept=\"image/*\"\r\n                                        required\r\n                                    />\r\n                                </Box>\r\n                                <Box className={classes.alignCenter}>\r\n                                    <TextField\r\n                                        name=\"EmployeeName\"\r\n                                        variant=\"outlined\"\r\n                                        className={classes.customInput}\r\n                                        type=\"text\"\r\n                                        placeholder=\"Employee Name\"\r\n                                        label=\"Employee Name\"\r\n                                        onChange={handleChange}\r\n                                        required\r\n                                    />\r\n                                </Box>\r\n                                <Box className={classes.alignCenter}>\r\n                                    <TextField\r\n                                        name=\"EmployeeAddress\"\r\n                                        variant=\"outlined\"\r\n                                        className={classes.customInput}\r\n                                        type=\"text\"\r\n                                        onChange={handleChange}\r\n                                        placeholder=\"Employee Address\"\r\n                                        label=\"Employee Address\"\r\n                                        required\r\n                                    />\r\n                                </Box>\r\n                                <Box className={classes.alignCenter}>\r\n                                    <TextField\r\n                                        name=\"EmployeeDOB\"\r\n                                        variant=\"outlined\"\r\n                                        className={classes.customInput}  \r\n                                        type=\"date\"\r\n                                        onChange={handleChange}\r\n                                        label=\"Date of Birth\"\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        required\r\n                                    />\r\n                                </Box>\r\n                                <Box className={classes.alignCenter}>\r\n                                    <TextField\r\n                                        name=\"EmployeePhone\"\r\n                                        variant=\"outlined\"\r\n                                        className={classes.customInput}\r\n                                        type=\"number\"\r\n                                        onChange={handleChange}\r\n                                        placeholder=\"Employee Phone\"\r\n                                        label=\"Employee Phone\"\r\n                                        required\r\n                                    />\r\n                                </Box>  \r\n                                <Box className={classes.alignCenter}>\r\n                                    <Autocomplete\r\n                                        name=\"EmployeePost\"\r\n                                        onInputChange={(e,newInputValue)=>{\r\n                                            setDetails({...EmpDetails,\"EmployeePost\":newInputValue});\r\n                                        }}\r\n                                        className={classes.customInput}\r\n                                        options={['Owner','Manager','Waiter','Chef','Cleaner','Co-worker','Helper']}\r\n                                        renderInput={(params)=>\r\n                                            \r\n                                            <TextField\r\n                                                {...params}\r\n                                                variant=\"outlined\" \r\n                                                placeholder=\"Employee Post\"\r\n                                                label=\"Employee Post\"\r\n                                                required\r\n                                            />\r\n                                        }\r\n                                    />\r\n                                </Box>\r\n                                <Box className={classes.alignCenter}>\r\n                                    <TextField\r\n                                        name=\"EmployeeSalary\"\r\n                                        variant=\"outlined\"\r\n                                        className={classes.customInput}\r\n                                        type=\"number\"\r\n                                        onChange={handleChange}\r\n                                        placeholder=\"Employee Salary\"\r\n                                        label=\"Employee Salary\"\r\n                                        required\r\n                                    />\r\n                                </Box>\r\n\r\n                                <Typography style={{letterSpacing:2,marginTop:10,marginBottom:10,textAlign:'center'}} variant=\"h6\">DOCUMENT INFORMATION</Typography>\r\n                                <Typography variant=\"h6\" style={{textAlign:'center',marginTop:10,marginBottom:10}}>Aadhar Details</Typography>\r\n\r\n                                <Box className={classes.alignCenter}>\r\n                                    <input\r\n                                        name=\"EmployeeAadharPic\"\r\n                                        variant=\"outlined\"\r\n                                        onChange={handleChangeDocuments}\r\n                                        className={classes.customFileInput}\r\n                                        type=\"file\"\r\n                                        required\r\n                                    />\r\n                                </Box>\r\n                                <Box className={classes.alignCenter}>\r\n                                    <TextField\r\n                                        name=\"EmployeeAadhar\"\r\n                                        variant=\"outlined\"\r\n                                        className={classes.customInput}\r\n                                        type=\"number\"\r\n                                        onChange={handleChange}\r\n                                        placeholder=\"Employee Aadhar Number\"\r\n                                        label=\"Employee Aadhar Number\"\r\n                                        required\r\n                                    />\r\n                                </Box>\r\n                                \r\n                                <Typography variant=\"h6\" style={{textAlign:'center',marginTop:10,marginBottom:10}}>Pan Details</Typography>\r\n                                \r\n                                <Box className={classes.alignCenter}>\r\n                                    <input\r\n                                        name=\"EmployeePanPic\"\r\n                                        variant=\"outlined\"\r\n                                        onChange={handleChangeDocuments}\r\n                                        className={classes.customFileInput}\r\n                                        type=\"file\"\r\n                                        required\r\n                                    />\r\n                                </Box>\r\n                                <Box className={classes.alignCenter}>\r\n                                    <TextField\r\n                                        name=\"EmployeePan\"\r\n                                        variant=\"outlined\"\r\n                                        className={classes.customInput}\r\n                                        type=\"text\"\r\n                                        onChange={handleChange}\r\n                                        placeholder=\"Employee Pan Number\"\r\n                                        label=\"Employee Pan Number\"\r\n                                        required\r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                    </DialogContent>\r\n                    <Divider/>\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" style={{color:\"black\"}} onClick={handleCloseDialog}>CANCEL</Button>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{marginLeft:10}}>SAVE</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n\r\n            </Box>\r\n        );\r\n    }\r\n    else{\r\n    return (\r\n        <Box>\r\n            <Box>\r\n            <Grid container>\r\n                <Grid item sm={3} xs={3}>\r\n                    <h3 className=\"mFont\">Employees</h3>\r\n                </Grid>\r\n                <Grid item sm={9} xs={9}>\r\n                    <Box textAlign=\"right\">\r\n                        <Button \r\n                            className=\"mFont\"\r\n                            color=\"secondary\"\r\n                            variant=\"contained\" \r\n                            style={{marginRight:10}}\r\n                            onClick={handleOpenAttendanceDialog}\r\n                            disableElevation\r\n                        >Take Attendance</Button>\r\n                        <Button \r\n                            className=\"mFont\"\r\n                            startIcon={<AddIcon/>}\r\n                            color=\"primary\"\r\n                            variant=\"contained\" \r\n                            style={{marginRight:20}}\r\n                            onClick={handleOpenDialog}\r\n                            disableElevation\r\n                        >Add Employees</Button>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            <Divider style={{marginTop:10}}/>\r\n            <Alerts/>\r\n            {props.employees.length <= 0 ?\r\n                <Box style={{width:\"100%\",marginTop:40}}>\r\n                    <Typography style={{textAlign:\"center\"}}><PersonAddDisabledIcon/></Typography>\r\n                    <Typography style={{textAlign:\"center\"}}>No Employees Added yet.</Typography>\r\n                </Box>\r\n                :\r\n                <EmployeeTable/>\r\n            }\r\n            </Box>\r\n            \r\n            <AttendanceDialog/>\r\n\r\n            <Dialog open={openAddEmployee} onClose={handleCloseDialog} fullWidth maxWidth=\"lg\">\r\n                <DialogTitle className='mFont'>Add Employee</DialogTitle>\r\n                <Divider/>\r\n                <form onSubmit={(e)=>handleFormSubmit(e)} encType=\"multipart/form-data\">\r\n                    <DialogContent>\r\n                        {props.alert.length > 0 && <Alerts/>}\r\n                        <Box style={{marginTop:10,marginBottom:10}}>\r\n                            <Typography style={{letterSpacing:2}} variant=\"h6\">BASIC INFORMATION</Typography>\r\n                        </Box>\r\n                        <Box>\r\n                            {ProfilePic === null ? \r\n                                <Box style={{width:200,height:200,border:\"1px solid black\"}}></Box>\r\n                                :\r\n                                <img src={ProfilePic} width=\"200px\" height=\"200px\" alt=\"unable to display.\" style={{border:\"1px solid black\"}}/>\r\n                            }\r\n                            <Box display='flex' flexDirection='row'>\r\n                                <Box> \r\n                                    <Typography variant=\"h6\" className={classes.customText}>Upload Employee Photo</Typography>\r\n                                </Box>\r\n                                <Box style={{marginLeft:10}}>\r\n                                    <input\r\n                                        name=\"EmployeeProfilePic\"\r\n                                        variant=\"outlined\"\r\n                                        onChange={handleChangeDocuments}\r\n                                        className={classes.customFileInput}\r\n                                        type=\"file\"\r\n                                        accept=\"image/*\"\r\n                                        required\r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display='flex' flexDirection='row'>\r\n                            <Box>\r\n                                <TextField\r\n                                    name=\"EmployeeName\"\r\n                                    variant=\"outlined\"\r\n                                    className={classes.customInput}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Employee Name\"\r\n                                    label=\"Employee Name\"\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                />\r\n                            </Box>\r\n                            <Box style={{marginLeft:10}}>\r\n                                <TextField\r\n                                    name=\"EmployeeAddress\"\r\n                                    variant=\"outlined\"\r\n                                    className={classes.customInput}\r\n                                    type=\"text\"\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"Employee Address\"\r\n                                    label=\"Employee Address\"\r\n                                    required\r\n                                />\r\n                            </Box>\r\n                            <Box style={{marginLeft:10}}>\r\n                                <TextField\r\n                                    name=\"EmployeeDOB\"\r\n                                    variant=\"outlined\"\r\n                                    className={classes.customInput}  \r\n                                    type=\"date\"\r\n                                    onChange={handleChange}\r\n                                    label=\"Date of Birth\"\r\n                                    InputLabelProps={{\r\n                                        shrink: true,\r\n                                    }}\r\n                                    required\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display='flex' flexDirection='row'>\r\n                            \r\n                            <Box>\r\n                                <TextField\r\n                                    name=\"EmployeePhone\"\r\n                                    variant=\"outlined\"\r\n                                    className={classes.customInput}\r\n                                    type=\"number\"\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"Employee Phone\"\r\n                                    label=\"Employee Phone\"\r\n                                    required\r\n                                />\r\n                            </Box>\r\n                            <Box style={{marginLeft:10}}>    \r\n                                <Autocomplete\r\n                                    name=\"EmployeePost\"\r\n                                    onInputChange={(e,newInputValue)=>{\r\n                                        setDetails({...EmpDetails,\"EmployeePost\":newInputValue});\r\n                                    }}\r\n                                    className={classes.customInput}\r\n                                    options={['Owner','Manager','Waiter','Chef','Cleaner','Co-worker','Helper']}\r\n                                    renderInput={(params)=>\r\n                                        \r\n                                        <TextField\r\n                                            {...params}\r\n                                            variant=\"outlined\" \r\n                                            placeholder=\"Employee Post\"\r\n                                            label=\"Employee Post\"\r\n                                            required\r\n                                        />\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                            <Box style={{marginLeft:10}}>\r\n                                <TextField\r\n                                    name=\"EmployeeSalary\"\r\n                                    variant=\"outlined\"\r\n                                    className={classes.customInput}\r\n                                    type=\"number\"\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"Employee Salary\"\r\n                                    label=\"Employee Salary\"\r\n                                    required\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                \r\n                        <Box style={{marginTop:10,marginBottom:10}}>\r\n                            <Typography style={{letterSpacing:2}} variant=\"h6\">DOCUMENT INFORMATION</Typography>\r\n                        </Box>\r\n                        \r\n                        <Box display='flex' flexDirection='row'>\r\n                            <Box>\r\n                                <Typography variant=\"h6\" className={classes.customText}>Aadhar Details</Typography>\r\n                            </Box>\r\n                            <Box style={{marginLeft:10}}>\r\n                                <input\r\n                                    name=\"EmployeeAadharPic\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={handleChangeDocuments}\r\n                                    className={classes.customFileInput}\r\n                                    type=\"file\"\r\n                                    required\r\n                                />\r\n                            </Box>\r\n                            <Box style={{marginLeft:10}}>\r\n                                <TextField\r\n                                    name=\"EmployeeAadhar\"\r\n                                    variant=\"outlined\"\r\n                                    className={classes.customInput}\r\n                                    type=\"number\"\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"Employee Aadhar Number\"\r\n                                    label=\"Employee Aadhar Number\"\r\n                                    required\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                        \r\n                        <Box display='flex' flexDirection='row'>\r\n                            <Box>\r\n                                <Typography variant=\"h6\" className={classes.customText}>Pan Details</Typography>\r\n                            </Box>\r\n                            <Box style={{marginLeft:10}}>\r\n                                <input\r\n                                    name=\"EmployeePanPic\"\r\n                                    variant=\"outlined\"\r\n                                    onChange={handleChangeDocuments}\r\n                                    className={classes.customFileInput}\r\n                                    type=\"file\"\r\n                                    required\r\n                                />\r\n                            </Box>\r\n                            <Box style={{marginLeft:10}}>\r\n                                <TextField\r\n                                    name=\"EmployeePan\"\r\n                                    variant=\"outlined\"\r\n                                    className={classes.customInput}\r\n                                    type=\"text\"\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"Employee Pan Number\"\r\n                                    label=\"Employee Pan Number\"\r\n                                    required\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                    </DialogContent>\r\n                    <Divider/>\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" style={{color:\"black\"}} onClick={handleCloseDialog}>CANCEL</Button>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{marginLeft:10}}>SAVE</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        \r\n        </Box>\r\n    );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    alert : state.alert,\r\n    employees : state.employees,\r\n    loading : state.loading,\r\n    attendance : state.attendance\r\n});\r\n\r\nexport default connect(mapStateToProps,{\r\n    saveEmployee, \r\n    getEmployees, \r\n    deleteEmployee, \r\n    setLoading, \r\n    saveAttendance,\r\n    getAttendance\r\n})(Employees);","import { SET_ATTENDANCE } from './types';\r\n\r\nimport axios from 'axios';\r\n\r\nexport const getAttendance = ({EmpID,StartDate,EndDate}) => async dispatch =>{\r\n\r\n    try {\r\n        const config = {\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        };\r\n        const body = JSON.stringify({EmpID,StartDate,EndDate});\r\n        const attendance = await axios.post('/api/employee/attendance/employee',body,config);\r\n        dispatch({\r\n            type:SET_ATTENDANCE,\r\n            payload : attendance.data\r\n        });\r\n        \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};","import React from 'react';\r\nimport { Box, Divider, Grid, Typography, Paper } from '@material-ui/core';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Axios from 'axios';\r\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\r\nconst useStyles = makeStyles((theme)=>({\r\n    mt10:{marginTop:10},\r\n    FeedbacksListGrid:{\r\n        borderRight:\"1px solid whitesmoke\",   \r\n        paddingTop:20,\r\n        marginBottom:20,\r\n    },\r\n    RatingHeading:{\r\n        fontSize:20,\r\n        letterSpacing:2\r\n    },\r\n    Ratings:{\r\n        fontSize:100,\r\n        textAlign:'center',\r\n        marginTop:30\r\n    },\r\n    customPaper:{\r\n        marginTop:10,\r\n        paddingLeft:10,\r\n        paddingTop:10,\r\n        paddingBottom:5,\r\n        marginRight:20\r\n    }\r\n}));\r\n\r\nfunction Feedback(props) {\r\n\r\n    const classes = useStyles(); \r\n    const isMobile = useMediaQuery({ query: '(max-width: 768px)' });\r\n    const isMobileDevice = useMediaQuery({query: '(max-device-width: 768px)'});\r\n\r\n    const [feedbacks,setFeedbacks] = React.useState([]);\r\n\r\n    React.useEffect(()=>{\r\n\r\n        setTimeout(()=>{\r\n            Axios.get(\"/api/feedback\")\r\n            .then(response=>{\r\n                setFeedbacks(response.data);\r\n            });\r\n        },5000)\r\n\r\n    },[]);\r\n\r\n    const getAvgStars = () =>{\r\n\r\n        let num = 0;\r\n        for(var i = 0 ; i<feedbacks.length ; i++){\r\n            num += Number.parseInt(feedbacks[i].stars);\r\n        }\r\n        if(feedbacks.length <= 0){\r\n            return num\r\n        }else{\r\n            return (num/feedbacks.length).toFixed(1) ;\r\n        }\r\n    };\r\n\r\n    return (\r\n        isMobile || isMobileDevice ?\r\n        <Box style={{marginLeft:10,marginRight:10}}>  \r\n            <Box>\r\n                <h3 className=\"mFont\"> Feedback </h3>\r\n                <Divider className={classes.mt10}/>\r\n            </Box>\r\n            <Box>\r\n                <Box textAlign=\"center\">\r\n                    <Typography className={classes.Ratings}>{getAvgStars()}</Typography>\r\n                    <Rating precision={0.5} value={getAvgStars()} readOnly />\r\n                </Box>\r\n            </Box>\r\n            <Box>\r\n                <Typography className={classes.RatingHeading}>REVIEWS</Typography>\r\n\r\n                {   feedbacks.length > 0 ?\r\n                    feedbacks.slice(0).reverse().map((feedback)=>{\r\n                        return(\r\n                            <Paper className={classes.customPaper} key={feedback._id}>\r\n                                <Typography>{feedback.Name ? feedback.Name : \"Anonymous\"}</Typography>\r\n                                <Typography>{feedback.stars && feedback.stars}⭐</Typography>\r\n                                <p className=\"mFont\">{feedback.feedback && feedback.feedback}</p>\r\n                            </Paper>\r\n                        )\r\n                    })\r\n                    :\r\n                    <Box style={{width:\"100%\",marginTop:40}}>\r\n                        <Typography style={{textAlign:\"center\"}}><NotInterestedIcon/></Typography>\r\n                        <Typography style={{textAlign:\"center\"}}>No Reviews given yet</Typography>\r\n                    </Box>\r\n                }\r\n            </Box>\r\n        </Box>\r\n        :\r\n        <Box>\r\n            <Box>\r\n                <h3 className=\"mFont\"> Feedback </h3>\r\n                <Divider className={classes.mt10}/>\r\n            </Box>\r\n            <Grid container>\r\n                <Grid item sm={8} xs={8} className={classes.FeedbacksListGrid}>\r\n                    \r\n                    <Typography className={classes.RatingHeading}>REVIEWS</Typography>\r\n                    {\r\n                        feedbacks.length > 0 ?\r\n                        feedbacks.slice(0).reverse().map((feedback)=>{\r\n                            return(\r\n                                <Paper className={classes.customPaper} key={feedback._id}>\r\n                                    <Typography>{feedback.Name ? feedback.Name : \"Anonymous\"}</Typography>\r\n                                    <Typography>{feedback.stars && feedback.stars}⭐</Typography>\r\n                                    <p className=\"mFont\">{feedback.feedback && feedback.feedback}</p>\r\n                                </Paper>\r\n                            )\r\n                        })\r\n                        :\r\n                        <Box style={{width:\"100%\",marginTop:40}}>\r\n                            <Typography style={{textAlign:\"center\"}}><NotInterestedIcon/></Typography>\r\n                            <Typography style={{textAlign:\"center\"}}>No Reviews given yet</Typography>\r\n                        </Box>\r\n                    }\r\n\r\n                </Grid>\r\n                <Grid item sm={4} xs={4} style={{padding:20}}>\r\n                    <Typography className={classes.RatingHeading}>RATINGS</Typography>\r\n                    <Box textAlign=\"center\">\r\n                    <Typography className={classes.Ratings}>{getAvgStars()}</Typography>\r\n                    <Rating precision={0.5} value={getAvgStars()} readOnly />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Feedback;","import React from 'react';\r\n\r\nimport { getTokens, addToken, removeToken, changeStatus } from \"../../actions/token\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport Alert from './Alerts';\r\n\r\nimport { \r\n    Box, Divider, Grid, Button, Typography, TextField,\r\n    Card, CardContent, CardActions, Dialog, DialogTitle,\r\n    DialogActions, DialogContent\r\n} from \"@material-ui/core\";\r\nimport { setLoading } from '../../actions/loading';\r\nimport Loading from './Loading';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    mlr10 : {\r\n        marginLeft : '10px',\r\n        marginRight : '10px'\r\n    },\r\n    mtb10:{\r\n        marginTop:10,\r\n        marginBottom:10,\r\n    }\r\n}));\r\n\r\nfunction Tokens({getTokens, addToken, removeToken, changeStatus, tokens, setLoading,loading}) {\r\n    \r\n    const classes = useStyles();\r\n\r\n    const isMobile = useMediaQuery({ query: '(max-width: 768px)' });\r\n    const isMobileDevice = useMediaQuery({query: '(max-device-width: 768px)'});\r\n\r\n    const [openAddDialog,setOpen] = React.useState(false);\r\n    const [Name,setName] = React.useState('');\r\n    const [NumberOfPeople, setPeople] = React.useState(null);\r\n\r\n    function handleClick(){ setOpen(true); }\r\n    function handleClose(){ setOpen(false); }\r\n\r\n    const onSubmitDelete = (e) =>{\r\n        e.preventDefault();\r\n        removeToken({CName:e.target[0].value,NOP:e.target[1].value,tokenNo : e.target[2].value});\r\n        setLoading();\r\n    };\r\n\r\n    const onSubmitForm = (e) =>{\r\n        e.preventDefault();\r\n        addToken({CustomerName:Name,NoOfPersons:NumberOfPeople});\r\n        setLoading();\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleChangeStatus = (e) =>{\r\n        e.preventDefault();\r\n        changeStatus({tokenNo : e.target[0].value});\r\n        setLoading();\r\n    }\r\n\r\n    const allTokens = () =>{\r\n        const lst = [];\r\n        for(var i=0 ; i<tokens.length ; i++){\r\n            lst.push(\r\n                <div className=\"col-md-4\">\r\n                    <Card variant=\"outlined\">\r\n                        <CardContent>\r\n                            <Typography variant=\"h5\" component=\"h2\">\r\n                            Token No. {tokens[i].tokenNo}\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" component=\"h4\">\r\n                                {tokens[i].Name}\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" component=\"h4\">\r\n                                No. of People : {tokens[i].NoOfPersons}\r\n                            </Typography>\r\n                        </CardContent>\r\n                        <CardActions style={{marginLeft:10}}>\r\n                            <form onSubmit={(e)=>handleChangeStatus(e)}>\r\n                                <input \r\n                                    style={{display : \"none\"}} \r\n                                    name=\"tokenNo\" \r\n                                    value={tokens[i].tokenNo}\r\n                                    onChange={()=>{}}\r\n                                />\r\n                                <Button \r\n                                    color=\"primary\"\r\n                                    variant=\"contained\"\r\n                                    type='submit'\r\n                                    disabled={tokens[i].Status === 'Called'}\r\n                                    >Call Customer</Button>\r\n                            </form>\r\n                            \r\n                            <form onSubmit={(e)=>{onSubmitDelete(e)}}>\r\n                                <input \r\n                                    style={{display : \"none\"}} \r\n                                    name=\"CName\" \r\n                                    value={tokens[i].Name}\r\n                                    onChange={()=>{}}\r\n                                />\r\n                                <input \r\n                                    style={{display : \"none\"}} \r\n                                    name=\"NOP\" \r\n                                    value={tokens[i].NoOfPersons}\r\n                                    onChange={()=>{}}\r\n                                />\r\n                                <input \r\n                                    style={{display : \"none\"}} \r\n                                    name=\"tokenNo\" \r\n                                    value={tokens[i].tokenNo}\r\n                                    onChange={()=>{}}\r\n                                />\r\n                                <Button \r\n                                    startIcon={<DeleteIcon/>}\r\n                                    type=\"submit\" \r\n                                    color=\"secondary\"\r\n                                    variant=\"contained\">Remove</Button>\r\n                            </form>\r\n                        </CardActions>\r\n                    </Card>\r\n                </div>\r\n            );\r\n        }\r\n        return lst\r\n    };\r\n\r\n    const addDialog = () =>{\r\n        return(\r\n            <Dialog open={openAddDialog} onClose={handleClose}>\r\n                <DialogTitle className=\"mFont\">Add Token</DialogTitle>\r\n                <Alert/>\r\n                <form onSubmit={(e)=>onSubmitForm(e)}>\r\n                    <DialogContent>\r\n                    <Box>\r\n                        <TextField \r\n                            name=\"CustomerName\"\r\n                            variant=\"outlined\"\r\n                            type=\"text\" \r\n                            className={classes.mtb10}\r\n                            onChange={e => setName(e.target.value)} \r\n                            label=\"Customer Name\"\r\n                            fullWidth\r\n                            required\r\n                        />\r\n                    </Box>\r\n                    <Box>\r\n                        <TextField \r\n                            name=\"NoOfPeople\"\r\n                            type=\"number\" \r\n                            variant=\"outlined\"\r\n                            className={classes.mtb10}\r\n                            onChange={e => setPeople(e.target.value)} \r\n                            label=\"No of People\"\r\n                            fullWidth\r\n                            required\r\n                        />\r\n                    </Box>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose}> Close </Button>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Add Token</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    };\r\n\r\n    setTimeout(()=>{\r\n        getTokens();\r\n    },5000);\r\n\r\n    if(loading){\r\n        return <Loading/>\r\n    }else\r\n    if(isMobile || isMobileDevice){\r\n        return(\r\n            <Box className={classes.mlr10}>\r\n                <Grid container>\r\n                    <Grid item sm={3} xs={3}>\r\n                        <h3 className=\"mFont\"> Tokens </h3>\r\n                    </Grid>\r\n                    <Grid item sm={9} xs={9}>\r\n                        <Box textAlign=\"right\">\r\n                            <Button \r\n                                className=\"mFont yel\"\r\n                                startIcon={<AddIcon/>}\r\n                                color=\"primary\"\r\n                                variant=\"contained\" \r\n                                onClick={handleClick}\r\n                                disableElevation> \r\n                                Add Token\r\n                            </Button>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                <Alert/>\r\n                { tokens.length <= 0 ?\r\n                    <Box style={{width:\"100%\",marginTop:40}}>\r\n                        <Typography style={{textAlign:\"center\"}}><NotInterestedIcon/></Typography>\r\n                        <Typography style={{textAlign:\"center\"}}>No Tokens.</Typography>\r\n                    </Box>\r\n                    :\r\n                    <div style={{marginTop : \"20px\"}}>\r\n                        <div className=\"row\">\r\n                            {allTokens()}\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                {addDialog()}\r\n            </Box>\r\n        );\r\n    }else{\r\n        return (\r\n            <Box>\r\n                <Grid container>\r\n                    <Grid item sm={3} xs={3}>\r\n                        <h3 className=\"mFont\"> Tokens </h3>\r\n                    </Grid>\r\n                    <Grid item sm={9} xs={9}>\r\n                        <Box textAlign=\"right\">\r\n                            <Button \r\n                                className=\"mFont yel\"\r\n                                startIcon={<AddIcon/>}\r\n                                color=\"primary\"\r\n                                style={{marginRight:20}}\r\n                                variant=\"contained\" \r\n                                onClick={handleClick}\r\n                                disableElevation> \r\n                                Add Token\r\n                            </Button>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                <Divider style={{marginTop:10}}/>\r\n                <Alert/>\r\n\r\n                { tokens.length <= 0 ?\r\n                    <Box style={{width:\"100%\",marginTop:40}}>\r\n                        <Typography style={{textAlign:\"center\"}}><NotInterestedIcon/></Typography>\r\n                        <Typography style={{textAlign:\"center\"}}>No Tokens.</Typography>\r\n                    </Box>\r\n                    :\r\n                    <div style={{marginTop : \"10px\"}}>\r\n                        <div className=\"row\">\r\n                            {allTokens()}\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                {addDialog()}\r\n            </Box>\r\n        \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    tokens : state.token,\r\n    loading : state.loading\r\n});\r\n\r\nexport default connect(mapStateToProps,{getTokens, addToken, removeToken, changeStatus, setLoading})(Tokens);","import { ADD_TOKEN, REMOVE_TOKEN, SET_TOKEN } from \"./types\";\r\nimport { setAlert } from './alert';\r\nimport axios from 'axios';\r\nimport { removeLoading } from \"./loading\";\r\n\r\nexport const getTokens = () => async dispatch =>{\r\n\r\n    try {\r\n        \r\n        const Tokens = await axios.get('/api/token');\r\n        dispatch({\r\n            type : SET_TOKEN,\r\n            payload : Tokens.data\r\n        });\r\n        \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const addToken = ({CustomerName,NoOfPersons}) => async dispatch =>{\r\n\r\n    try {\r\n        \r\n        const config = {\r\n            headers : {\r\n                'Content-Type':'application/json'\r\n            }\r\n        }\r\n        const body = JSON.stringify({CustomerName,NoOfPersons});\r\n\r\n        await axios.post('/api/token',body,config);\r\n        dispatch({type : ADD_TOKEN});\r\n        //dispatch(getTokens());\r\n        dispatch(removeLoading());\r\n        dispatch(setAlert('Token added successfully','success'));\r\n\r\n    } catch (error) {\r\n        dispatch(removeLoading());\r\n        dispatch(setAlert('Unable to add tokens','error'));\r\n    }\r\n\r\n};\r\n\r\nexport const removeToken = ({CName,NOP,tokenNo}) => async dispatch =>{\r\n    \r\n    try {\r\n        \r\n        const config = {\r\n            headers : {\r\n                'Content-Type':'application/json'\r\n            }\r\n        }\r\n        const body = JSON.stringify({CName,NOP,tokenNo});\r\n        await axios.post('/api/token/remove',body,config);\r\n        dispatch({type : REMOVE_TOKEN});\r\n        //dispatch(getTokens());\r\n        dispatch(removeLoading());\r\n        dispatch(setAlert('Token removed successfully','success'));\r\n\r\n    } catch (error) {\r\n        //dispatch(setAlert('Unable to remove tokens','error'));\r\n        console.log(error);\r\n    }\r\n\r\n};\r\n\r\nexport const changeStatus = ({tokenNo}) => async dispatch =>{\r\n    try {\r\n        const config = {\r\n            headers : {\r\n                'Content-Type':'application/json'\r\n            }\r\n        }\r\n        const body = JSON.stringify({tokenNo});\r\n        await axios.post('/api/token/changeStatus',body,config);\r\n        dispatch(removeLoading());\r\n        dispatch(setAlert('Called the customer successfully','success'));\r\n\r\n    } catch (error) {\r\n        dispatch(removeLoading());\r\n        dispatch(setAlert('Unable to change status','error'));\r\n    }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/subscribe.2c3eec06.svg\";","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Avatar, Box, Typography, Grid, Chip, Button } from '@material-ui/core';\r\nimport Logo from '../assets/logo.png';\r\nimport SubscribeImage from '../assets/subscribe.svg';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport CustomRadioButton from './elements/CustomRadioButton';\r\nimport axios from 'axios';\r\nimport { updateSubscription } from '../actions/subscribe';\r\nimport LoadingScreen from './elements/LoadingScreen';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { RAZORPAYKEY } from '../config/default.json';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n\r\n    Parent : {\r\n        borderLeft:\"8px solid #FFD31D\",\r\n        paddingLeft:200,\r\n        paddingTop:50,\r\n        height:\"100vh\"\r\n    },\r\n    Brand : {\r\n        display:\"flex\",\r\n        flexDirection:\"row\",\r\n    },\r\n    BrandLogo : {\r\n        padding:10, \r\n        boxShadow:\"3px 3px 72px 11px rgba(0,0,0,0.16)\",\r\n        borderRadius:5,\r\n    },\r\n    BrandName : {\r\n        marginLeft:20,\r\n        marginTop:15,\r\n    },\r\n    Information:{\r\n        marginTop:30\r\n    },\r\n    mobParent:{\r\n        borderLeft:\"8px solid #FFD31D\",\r\n        paddingTop:50,\r\n        height:\"100vh\",\r\n        paddingLeft:50\r\n    }\r\n\r\n}));\r\n\r\nfunction loadScript(src) {\r\n\treturn new Promise((resolve) => {\r\n\t\tconst script = document.createElement('script')\r\n\t\tscript.src = src\r\n\t\tscript.onload = () => {\r\n\t\t\tresolve(true)\r\n\t\t}\r\n\t\tscript.onerror = () => {\r\n\t\t\tresolve(false)\r\n\t\t}\r\n\t\tdocument.body.appendChild(script)\r\n\t})\r\n}\r\n\r\nfunction Subscription({user, subscribe, updateSubscription}) {\r\n\r\n    const classes = useStyles();\r\n    const [PlanSelected,setSelected] = React.useState({\r\n        Monthly : true,\r\n        Quaterly : false,\r\n    });\r\n\r\n    const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1224px)' });\r\n    const isTabletOrMobileDevice = useMediaQuery({query: '(max-device-width: 1224px)'});\r\n\r\n    async function handleSubmit()\r\n    {\r\n        const res = await loadScript('https://checkout.razorpay.com/v1/checkout.js');\r\n\r\n\t\tif (!res) {\r\n\t\t\talert('Razorpay SDK failed to load. Are you online?');\r\n\t\t\treturn;\r\n\t\t}\r\n        var PlanType;\r\n        if(PlanSelected.Monthly){\r\n            PlanType=\"Monthly\";\r\n        }else{\r\n            PlanType=\"Quaterly\";\r\n        }\r\n        \r\n        const data = await axios.post('/api/subscribe/payment/',{PlanType:PlanType});\r\n        \r\n        const options = {\r\n\t\t\tkey: RAZORPAYKEY,\r\n\t\t\tcurrency: data.data.currency,\r\n\t\t\tamount: data.data.amount.toString(),\r\n\t\t\torder_id: data.data.id,\r\n\t\t\tname: 'Serve My Table',\r\n\t\t\timage: { Logo },\r\n\t\t\thandler: function (response) {\r\n\r\n                updateSubscription({\r\n                    payment_id : response.razorpay_payment_id, \r\n                    order_id : response.razorpay_order_id\r\n                });\r\n\t\t\t},\r\n\t\t\tprefill: {\r\n\t\t\t\tname: user.username,\r\n\t\t\t\temail: user.email,\r\n\t\t\t\tcontact: user.Phone\r\n\t\t\t},\r\n            theme:{\r\n                color : \"#FFD31D\"\r\n            }\r\n\t\t}\r\n\t\tconst paymentObject = new window.Razorpay(options)\r\n\t\tpaymentObject.open()\r\n    }\r\n    if(user === null){\r\n        return <LoadingScreen/>\r\n    }\r\n    if(isTabletOrMobile || isTabletOrMobileDevice){\r\n        return(\r\n        <Box className={classes.mobParent}>\r\n            <Box className={classes.Brand}>\r\n                <Box className={classes.BrandLogo}>\r\n                    <Avatar src={Logo} style={{width:50,height:'auto'}} variant=\"rounded\"/>    \r\n                </Box>\r\n                <Box className={classes.BrandName}>\r\n                    <Typography variant=\"h6\" component=\"h3\">Serve My Table</Typography>\r\n                </Box>\r\n            </Box>\r\n            <Box className={classes.Information}>\r\n                <Typography variant=\"h6\" component=\"h6\">{subscribe.SubscriptionPlan} PLAN</Typography>\r\n                <Chip color=\"secondary\" label={subscribe.SubscriptionStatus} style={{marginTop:10}}/>\r\n                <Box style={{marginTop:20}}>\r\n                    <Typography style={{marginTop:10}}>{user.username}</Typography>\r\n                    <Typography style={{marginTop:10}}>{user.email}</Typography>\r\n                    <Typography style={{marginTop:10}}>{user.Phone}</Typography>\r\n                </Box>\r\n            </Box>\r\n            <Typography style={{marginTop:10}}>SELECT PLAN</Typography>\r\n            <Box flexDirection=\"row\" display=\"flex\" style={{marginTop:10}}>\r\n                <Box>\r\n                    <CustomRadioButton \r\n                        PlanName=\"Monthly\" \r\n                        PlanPrice=\"1000\" \r\n                        selected={PlanSelected.Monthly}\r\n                        onClick={()=>{setSelected({\r\n                            Monthly:true,\r\n                            Quaterly:false\r\n                        })}}    \r\n                    />\r\n                </Box>\r\n                <Box style={{marginLeft:10}}>\r\n                    <CustomRadioButton \r\n                        PlanName=\"Quaterly\" \r\n                        PlanPrice=\"3000\" \r\n                        selected={PlanSelected.Quaterly}\r\n                        onClick={()=>{setSelected({\r\n                            Monthly:false,\r\n                            Quaterly:true\r\n                        })}}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n\r\n            <Button \r\n            variant=\"contained\" \r\n            className=\"mFont\" \r\n            style={{marginTop:20,backgroundColor:\"#FFD31D\",width:300}} \r\n            onClick={()=>handleSubmit()}\r\n            disableElevation\r\n            >Subscribe Now</Button>\r\n        </Box>\r\n        );\r\n    }\r\n    return (\r\n        <Box className={classes.Parent}>\r\n            <Grid container>\r\n                <Grid item sm={6} xs={6}>\r\n                    <Box className={classes.Brand}>\r\n                        <Box className={classes.BrandLogo}>\r\n                            <Avatar src={Logo} style={{width:50,height:'auto'}} variant=\"rounded\"/>    \r\n                        </Box>\r\n                        <Box className={classes.BrandName}>\r\n                            <Typography variant=\"h6\" component=\"h3\">Serve My Table</Typography>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box className={classes.Information}>\r\n                        <Typography variant=\"h6\" component=\"h6\">{subscribe.SubscriptionPlan} PLAN</Typography>\r\n                        <Chip color=\"secondary\" label={subscribe.SubscriptionStatus} style={{marginTop:10}}/>\r\n                        <Box style={{marginTop:20}}>\r\n                            <Typography style={{marginTop:10}}>{user.username}</Typography>\r\n                            <Typography style={{marginTop:10}}>{user.email}</Typography>\r\n                            <Typography style={{marginTop:10}}>{user.Phone}</Typography>\r\n                        </Box>\r\n                    </Box>\r\n                    <Typography style={{marginTop:10}}>SELECT PLAN</Typography>\r\n                    <Box flexDirection=\"row\" display=\"flex\" style={{marginTop:10}}>\r\n                        <Box>\r\n                            <CustomRadioButton \r\n                                PlanName=\"Monthly\" \r\n                                PlanPrice=\"1000\" \r\n                                selected={PlanSelected.Monthly}\r\n                                onClick={()=>{setSelected({\r\n                                    Monthly:true,\r\n                                    Quaterly:false\r\n                                })}}    \r\n                            />\r\n                        </Box>\r\n                        <Box style={{marginLeft:10}}>\r\n                            <CustomRadioButton \r\n                                PlanName=\"Quaterly\" \r\n                                PlanPrice=\"3000\" \r\n                                selected={PlanSelected.Quaterly}\r\n                                onClick={()=>{setSelected({\r\n                                    Monthly:false,\r\n                                    Quaterly:true\r\n                                })}}\r\n                            />\r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <Button \r\n                    variant=\"contained\" \r\n                    className=\"mFont\" \r\n                    style={{marginTop:20,backgroundColor:\"#FFD31D\",width:300}} \r\n                    onClick={()=>handleSubmit()}\r\n                    disableElevation\r\n                    >Subscribe Now</Button>\r\n                </Grid>\r\n                <Grid item sm={6} xs={6}>\r\n                    <Avatar src={SubscribeImage} variant=\"rounded\" style={{width:\"30rem\",height:\"30rem\"}}/>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    user : state.auth.user,\r\n    subscribe : state.subscribe\r\n});\r\n\r\nexport default connect(mapStateToProps,{ updateSubscription })(Subscription);","import React from 'react';\nimport Navbar from './components/Navbar';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setMenu } from '../actions/menu';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Dishes from './components/Dishes';\nimport PlaceOrder from './components/PlaceOrder';\nimport Analytics from './components/Analytics';\nimport Help from './components/Help';\nimport TableManagement from './components/TableManagement';\nimport MyAccount from './components/MyAccount';\nimport OrderHistory from './components/OrderHistory';\nimport { useMediaQuery } from 'react-responsive';\nimport Accounts from './components/Accounts';\nimport Employees from './components/Employees';\nimport Feedback from './components/Feedback';\nimport Tokens from './components/Tokens';\n\nimport Subscription from './Subscription';\nimport { getSubscriptionDetails } from '../actions/subscribe';\n\nconst useStyles = makeStyles((theme) => ({\n    content : {\n      flexGrow:1,\n      paddingLeft : theme.spacing(10),\n      paddingBottom : theme.spacing(5),\n      paddingTop : theme.spacing(4),\n      marginLeft: theme.spacing(25),\n    },\n    contentMobile:{\n        flexGrow:1,\n        paddingBottom : theme.spacing(5),\n        paddingTop : theme.spacing(4),\n    },\n    '@global': {\n        '*::-webkit-scrollbar': {\n            width: '0.4em'\n        },\n        '*::-webkit-scrollbar-track': {\n            '-webkit-box-shadow': 'inset 0 0 6px rgba(0,0,0,0.00)'\n        },\n        '*::-webkit-scrollbar-thumb': {\n            backgroundColor: 'rgba(0,0,0,.1)',\n        }\n      }\n}));\nconst Dashboard = ({menu, subscribe, getSubscriptionDetails}) =>{\n    \n    const classes = useStyles();\n    \n    const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1224px)' });\n    const isTabletOrMobileDevice = useMediaQuery({query: '(max-device-width: 1224px)'});\n\n    function chooserMenu(){\n        switch(menu){\n            \n            case 'Dashboard':\n                return <Analytics/>\n            case 'Table Management':\n                return <TableManagement/>\n            case 'Dishes': \n                return <Dishes/>\n            case 'Order History':\n                return <OrderHistory/>\n            case 'Employees':\n                return <Employees/>\n            case 'Place Order':\n                return <PlaceOrder/>\n            case 'My Account':\n                return <MyAccount/>\n            case 'Help':\n                return <Help/>\n            case 'Accounts':\n                return <Accounts/>\n            case 'Feedback':\n                return <Feedback/>\n            case 'Tokens' : \n                return <Tokens/>\n            default:\n                return <Analytics/>\n        }\n    }\n    \n    setTimeout(()=>{\n        getSubscriptionDetails();\n    },5000);\n\n    if( subscribe.SubscriptionStatus === \"EXPIRED\" || \n        subscribe.SubscriptionEndDate <= new Date(new Date().setDate((new Date().getDate()))).getTime()\n        ){\n        return <Subscription/>\n    }\n    else{\n    return(\n        <div>\n            <Navbar/>\n            { !isTabletOrMobile && !isTabletOrMobileDevice ?\n            \n            <main className={classes.content}>\n                {chooserMenu()}\n            </main>\n            :\n            <main className={classes.contentMobile}>\n                {chooserMenu()}\n            </main>\n            }\n        </div>\n    );\n    }\n}\n\nDashboard.propTypes = {\n    menu : PropTypes.string,\n    subscribe : PropTypes.object,\n    getSubscriptionDetails : PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    menu: state.menu,\n    subscribe : state.subscribe\n});\n\nexport default connect(mapStateToProps,{ setMenu, getSubscriptionDetails })(Dashboard);","import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport {\n    AppBar, Toolbar,IconButton, \n    Typography, Box, Divider, TextField,\n    InputAdornment, Grid, Button\n} from '@material-ui/core';\nimport { useMediaQuery } from 'react-responsive';\nimport Logo from '../assets/logo.png';\nimport MailOutlineRoundedIcon from '@material-ui/icons/MailOutlineRounded';\nimport DialpadOutlinedIcon from '@material-ui/icons/DialpadOutlined';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport axios from 'axios';\nimport Alerts from '@material-ui/lab/Alert';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nconst useStyles = makeStyles((theme)=>({\n\n    LoginInput : {\n        width:'24rem',\n        marginTop:'20px',\n        padding:'10px',\n        fontSize:'larger'\n    },\n    mobileLoginInput : {\n        width : '100%',\n        marginTop:'20px',\n        padding:'10px',\n        fontSize:'larger'\n    }\n\n}));\n\nconst CustomTextField = withStyles({\n    root : {\n        '& label.Mui-focused': {\n            color: '#FFD31D',\n        },\n        '& .MuiInput-underline:after': {\n            borderBottomColor: '#FFD31D',\n        },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n        },\n        '&:hover fieldset': {\n          borderColor: '#FFD31D',\n        },\n        '&.Mui-focused fieldset': {\n          borderColor: '#FFD31D',\n          \n        },\n        }\n    }\n})(TextField);\n\nfunction Forgot(){\n    \n    const classes = useStyles();\n    const [email,setEmail] = React.useState(\"\");\n    const [otp,setOtp] = React.useState(\"\");\n    const [password,setPassword] = React.useState(\"\");\n    const [confirmPassword,setConfirmPassword] = React.useState(\"\");\n    \n    const [visibility,setVisible] = React.useState(false);\n    const [alert,showAlert] = React.useState(false);\n    const [type,setType] = React.useState(\"\");\n    const [message,setMessage] = React.useState(\"\");\n\n    const isMobile = useMediaQuery({ query: '(max-width: 768px)' });\n    const isMobileDevice = useMediaQuery({query: '(max-device-width: 768px)'});\n\n    function handleEmail(e){ setEmail(e.target.value); } \n    function handleOTP(e){ setOtp(e.target.value); }\n    function handlePassword(e){ setPassword(e.target.value); }\n    function handleConfirmPassword(e){ setConfirmPassword(e.target.value); }\n\n    function onSubmit(e){\n        e.preventDefault();\n        const config = {\n            headers : {\n                'Content-Type':'application/json'\n            }\n        };\n        const body = JSON.stringify({email:email});\n        axios.post(\"/api/users/send/otp\",body,config)\n        .then((response)=>{\n            if(response.data === \"Email Sent\"){\n                setType(\"success\");\n                setMessage(\"Email Send Successfully\");\n                showAlert(true);\n                setVisible(true);\n            }\n            if(response.data === \"User does not Exists\"){\n                setType(\"error\");\n                setMessage(\"User does not Exists\");\n                showAlert(true);\n            }\n        });\n    }\n\n    function onSubmitChange(e){\n        e.preventDefault();\n        \n        if(password === confirmPassword){\n            const config = {\n                headers : {\n                    'Content-Type':'application/json'\n                }\n            };\n            const body = JSON.stringify({email:email,password:password,otp:otp});\n            axios.post(\"/api/users/changepassword\",body,config)\n            .then((response)=>{\n            if(response.data === \"Password changed Successfully\"){\n                setType(\"success\");\n                setMessage(\"Password changed Successfully\"); \n                showAlert(true);\n            }\n            if(response.data === \"Invalid One Time Password\"){\n                setType(\"error\");\n                setMessage(\"Invalid One Time Password\");\n                showAlert(true);\n            }\n        });\n        }else{\n            setType(\"error\");\n            setMessage(\"Password and Confirm Password does'nt match.\");\n            showAlert(true);\n        }\n    }\n\n    return(\n        <div className=\"LoginParent\">\n            <AppBar position=\"static\" style={{backgroundColor:\"#FFF\"}}>\n                <Toolbar>\n                    <IconButton edge=\"start\">\n                        <img src={Logo} width=\"40\" alt=\"Logo\"/>\n                    </IconButton>\n                    <Typography className=\"logoFont navbar-brand\" variant=\"h6\">\n                        Serve My Table\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            {alert && <Alerts variant=\"filled\" severity={type}>{message}</Alerts>}\n            {isMobile || isMobileDevice ? \n                <Box className=\"LoginChild\">\n                    <form onSubmit={e=>onSubmit(e)}>\n                    <Box style={{marginLeft:\"5px\"}}>\n                        <p className=\"mFont\">Forgot your password</p>\n                        <Divider/>\n                        \n                    </Box>\n                    <Box>\n                    <CustomTextField \n                        name=\"email\"\n                        onChange={handleEmail} \n                        value={email} \n                        variant=\"outlined\"\n                        className={classes.mobileLoginInput}\n                        InputProps={{\n                            startAdornment:(\n                                <InputAdornment position=\"start\">\n                                    <MailOutlineRoundedIcon/>\n                                </InputAdornment>\n                            ),\n                        }}\n                        type=\"email\"\n                        placeholder=\"Email Address *\"\n                        required\n                        />\n                    </Box>\n\n                    <Box>\n                        <button type=\"submit\" className=\"LoginBtn\">Send OTP</button>\n                    </Box>\n                    \n                    </form>\n                    <br/>\n                    <Box>\n                        <Button \n                            href=\"/\" \n                            alt=\"toLoginPage\" \n                            className=\"mFont forgotpassword\"\n                            startIcon={<ChevronLeftIcon/>}\n                            variant=\"outlined\"\n                        >Back to Login\n                        </Button>\n                    </Box>\n\n                    { visibility &&\n                    \n                    <form onSubmit={e=>onSubmitChange(e)} style={{marginTop:\"10px\"}}>\n\n                        <Box style={{marginLeft:\"5px\"}}>\n                            <p className=\"mFont\">Reset your password</p>\n                            <Divider/>\n                            \n                        </Box>\n\n                                <Box>\n                                    <CustomTextField\n                                        name=\"otp\"\n                                        onChange={handleOTP} \n                                        value={otp} \n                                        variant=\"outlined\"\n                                        className={classes.mobileLoginInput}\n                                        InputProps={{\n                                            startAdornment:(\n                                                <InputAdornment position=\"start\">\n                                                    <DialpadOutlinedIcon/>\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        type=\"text\"\n                                        placeholder=\"OTP *\"\n                                        required\n                                    />\n                                </Box>\n\n                                <Box>\n                                    <CustomTextField\n                                        name=\"password\" \n                                        onChange={handlePassword} \n                                        value={password} \n                                        variant=\"outlined\"\n                                        className={classes.mobileLoginInput}\n                                        style={{marginTop:\"5px\"}}\n                                        InputProps={{\n                                            startAdornment:(\n                                                <InputAdornment position=\"start\">\n                                                    <LockOutlinedIcon/>\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        type=\"password\"\n                                        placeholder=\"Password *\" \n                                        required\n                                    />\n                                </Box>\n                                \n                                <Box>\n                                    <CustomTextField\n                                        name=\"password\" \n                                        onChange={handleConfirmPassword} \n                                        value={confirmPassword} \n                                        variant=\"outlined\"\n                                        className={classes.mobileLoginInput}\n                                        style={{marginTop:\"5px\"}}\n                                        InputProps={{\n                                            startAdornment:(\n                                                <InputAdornment position=\"start\">\n                                                    <LockOutlinedIcon/>\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        type=\"password\"\n                                        placeholder=\"Confirm Password *\" \n                                        required\n                                    />\n                                </Box>\n                                <Box>\n                                    <button type=\"submit\" className=\"LoginBtn\">Change Password</button>\n                                </Box>\n                            </form>\n                    \n                    }\n                </Box>\n            :\n            <Grid container className=\"LoginChild\">\n            <Grid item sm={6} xs={6}>\n                \n                <form onSubmit={e=>onSubmit(e)}>\n                    <Box style={{marginLeft:\"5px\"}}>\n                        <p className=\"mFont\">Forgot your password</p>\n                        \n                    </Box>\n                    <Box>\n                    <CustomTextField \n                        name=\"email\"\n                        onChange={handleEmail} \n                        value={email} \n                        variant=\"outlined\"\n                        className={classes.LoginInput}\n                        InputProps={{\n                            startAdornment:(\n                                <InputAdornment position=\"start\">\n                                    <MailOutlineRoundedIcon/>\n                                </InputAdornment>\n                            ),\n                        }}\n                        type=\"email\"\n                        placeholder=\"Email Address *\"\n                        required\n                        />\n                    </Box>\n\n                    <Box>\n                        <button type=\"submit\" className=\"LoginBtn\">Send OTP</button>\n                    </Box>\n                    \n                    </form>  \n                <br/>\n                <Box>\n                    <Button \n                    href=\"/\" \n                    alt=\"toLoginPage\" \n                    className=\"mFont forgotpassword\"\n                    startIcon={<ChevronLeftIcon/>}\n                    variant=\"outlined\"\n                    >Back to Login\n                    </Button>\n                </Box>\n            </Grid>\n                { visibility &&\n                    <Grid item sm={6} xs={6}>\n                        <form onSubmit={e=>onSubmitChange(e)}>\n\n                                <Box style={{marginLeft:\"5px\"}}>\n                                    <p className=\"mFont\">Reset your password</p>\n                                </Box>\n\n                                <Box>\n                                    <CustomTextField\n                                        name=\"otp\"\n                                        onChange={handleOTP} \n                                        value={otp} \n                                        variant=\"outlined\"\n                                        className={classes.LoginInput}\n                                        InputProps={{\n                                            startAdornment:(\n                                                <InputAdornment position=\"start\">\n                                                    <DialpadOutlinedIcon/>\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        type=\"text\"\n                                        placeholder=\"OTP *\"\n                                        required\n                                    />\n                                </Box>\n\n                                <Box>\n                                    <CustomTextField\n                                        name=\"password\" \n                                        onChange={handlePassword} \n                                        value={password} \n                                        variant=\"outlined\"\n                                        className={classes.LoginInput}\n                                        style={{marginTop:\"5px\"}}\n                                        InputProps={{\n                                            startAdornment:(\n                                                <InputAdornment position=\"start\">\n                                                    <LockOutlinedIcon/>\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        type=\"password\"\n                                        placeholder=\"Password *\" \n                                        required\n                                    />\n                                </Box>\n                                \n                                <Box>\n                                    <CustomTextField\n                                        name=\"password\" \n                                        onChange={handleConfirmPassword} \n                                        value={confirmPassword} \n                                        variant=\"outlined\"\n                                        className={classes.LoginInput}\n                                        style={{marginTop:\"5px\"}}\n                                        InputProps={{\n                                            startAdornment:(\n                                                <InputAdornment position=\"start\">\n                                                    <LockOutlinedIcon/>\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        type=\"password\"\n                                        placeholder=\"Confirm Password *\" \n                                        required\n                                    />\n                                </Box>\n                                <Box>\n                                    <button type=\"submit\" className=\"LoginBtn\">Change Password</button>\n                                </Box>\n\n                            </form>\n                    </Grid>\n                }\n            </Grid>\n            }\n\n        </div>\n    );\n}\n\nexport default Forgot;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst PrivateRoute = ({ \n    component:Component, \n    auth, \n    ...rest}) => (\n    \n    <Route {...rest} \n        render={ props => !auth.isAuthenticated && !auth.loading ? \n        (\n            <Redirect to=\"/\"/>\n        ) :(\n            <Component {...props} />\n        )}/>\n        \n)\n\nPrivateRoute.propTypes = {\n    auth : PropTypes.object.isRequired\n}\n\nconst mapStateToProp = state => ({\n    auth : state.auth\n});\n\nexport default connect(mapStateToProp)(PrivateRoute);","import { SET_ALERT , REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nfunction alert(state = initialState, action){\n\n    const {type,payload} = action;\n\n    switch(type) {\n        case SET_ALERT:\n            return [...state, payload];\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload);\n        default:\n            return state;\n    }\n    \n}\n\nexport default alert;","import { \n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL, \n    LOGOUT,\n    UPDATE_SUCCESS,\n    UPDATE_FAIL,\n\n} from '../actions/types';\n\nconst initialState = {\n    token : localStorage.getItem('token'),\n    isAuthenticated : null,\n    loading : true,\n    user : null\n};\n\nfunction auth(state = initialState, action){\n\n    const {type,payload} = action;\n\n    switch(type) {\n\n        case UPDATE_SUCCESS:\n        case USER_LOADED:\n            return{\n                ...state,\n                isAuthenticated : true,\n                loading : false,\n                user : payload\n            }\n\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token',payload.token);\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated : true,\n                loading : false\n            }\n        \n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token : null,\n                isAuthenticated : false,\n                loading : false,\n                user : null\n            }\n        \n        case UPDATE_FAIL:        \n        default :\n            return state;\n        \n    }\n}\n\nexport default auth;","import { SET_MENUTYPE } from '../actions/types';\n\nconst initialState = 'Dashboard';\n\nfunction menu(state = initialState, action){\n\n    const {type,payload} = action;\n    switch(type){\n        case SET_MENUTYPE:\n            return payload\n        default:\n            return state\n    }\n}\n\nexport default menu;","import {\n    DISH_SUCCESS,\n    DISH_FAIL, \n    REMOVE_DISH,\n    UPDATE_DISH\n} from '../actions/types';\n\nconst initialState = false;\n\nfunction dish(state = initialState, action){\n    const {type,payload} = action;\n    switch (type) {\n\n        case DISH_SUCCESS:\n        case REMOVE_DISH:\n        case UPDATE_DISH:\n            return payload;\n            \n        case DISH_FAIL:\n            return state;\n\n        default:\n            return state;\n    }\n}\n\nexport default dish;","import { HISTORY_SUCCESS, HISTORY_FAIL } from '../actions/types';\n\nconst initialState = [];\n\nfunction history(state = initialState, action){\n    const {type,payload} = action;\n\n    switch (type) {\n\n        case HISTORY_SUCCESS:\n            return payload;\n\n        case HISTORY_FAIL:\n            return state;\n            \n        default:\n            return state;\n    }\n}\n\nexport default history;","import {\n    TABLE_SUCCESS, \n    TABLE_FAIL,\n    ORDER_SUCCESS,\n    ORDER_FAIL,\n    CANCEL_SUCCESS,\n    CANCEL_FAIL,\n} from '../actions/types';\n\nconst initialState = [];\n\nfunction tables(state=initialState,action){\n\n    const {type,payload} = action;\n    switch(type){\n\n        case TABLE_SUCCESS:\n            return payload\n\n        \n        case ORDER_SUCCESS:\n        case CANCEL_SUCCESS:\n            return;\n\n        case CANCEL_FAIL:\n        case ORDER_FAIL:\n        case TABLE_FAIL:\n        default:\n            return state\n    }\n    \n}\n\nexport default tables;","import { SET_ACCOUNT, FAILED_ACCOUNT } from '../actions/types';\n\nconst initialState=[];\n\nfunction accounts(state=initialState,action){\n\n    const { type, payload } = action;\n\n    switch (type) {\n\n        case SET_ACCOUNT:\n            return payload\n        \n        case FAILED_ACCOUNT:\n        default:\n            return state;\n    }\n}\n\nexport default accounts;","import {\r\n    ADD_EMPLOYEE_SUCCESS,\r\n    ADD_EMPLOYEE_FAIL,\r\n    UPDATE_EMPLOYEE_SUCCESS,\r\n    UPDATE_EMPLOYEE_FAIL,\r\n    DELETE_EMPLOYEE_SUCCESS,\r\n    DELETE_EMPLOYEE_FAIL,\r\n    SET_EMPLOYEE_SUCCESS,\r\n    SET_EMPLOYEE_FAIL\r\n} from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nfunction employees(state=initialState,action){\r\n\r\n    const {type,payload} = action;\r\n\r\n    switch (type) {\r\n\r\n        case UPDATE_EMPLOYEE_SUCCESS:\r\n        case ADD_EMPLOYEE_SUCCESS:\r\n            return payload\r\n        \r\n        case DELETE_EMPLOYEE_SUCCESS:\r\n        case SET_EMPLOYEE_SUCCESS:\r\n            return payload\r\n            \r\n        case SET_EMPLOYEE_FAIL:\r\n        case DELETE_EMPLOYEE_FAIL:\r\n        case UPDATE_EMPLOYEE_FAIL:\r\n        case ADD_EMPLOYEE_FAIL:\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default employees;","import {\r\n    SUBSCRIBE_DATA_PASS,\r\n    SUBSCRIBE_DATA_FAIL,\r\n    EMPTY_SUBSCRIPTION\r\n} from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nfunction subscribe(state = initialState, action){\r\n\r\n    switch (action.type) {\r\n\r\n        case SUBSCRIBE_DATA_PASS:\r\n            return action.payload;\r\n        \r\n        case EMPTY_SUBSCRIPTION:\r\n            return {};\r\n\r\n        case SUBSCRIBE_DATA_FAIL:    \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default subscribe;","import { ADD_TOKEN, REMOVE_TOKEN, SET_TOKEN } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nfunction token(state = initialState, action){\r\n    switch (action.type) {\r\n        \r\n        case SET_TOKEN:\r\n            return action.payload;\r\n\r\n        case REMOVE_TOKEN:\r\n        case ADD_TOKEN:    \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default token;","import {SET_ATTENDANCE} from '../actions/types';\r\n\r\nconst initialState = null;\r\n\r\nfunction attendance(state=initialState,action) {\r\n\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n\r\n        case SET_ATTENDANCE:\r\n            return payload;\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default attendance;","import { combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\nimport menu from './menu';\nimport dish from './dish';\nimport history from './history';\nimport tables from './tables';\nimport accounts from './accounts';\nimport employees from './employees';\nimport loading from './loading';\nimport subscribe from './subscribe';\nimport token from './token';\nimport attendance from './attendance';\n\nexport default combineReducers({\n\n    accounts,\n    attendance,\n    alert,\n    auth,\n    dish,\n    employees,\n    history,\n    loading,\n    menu,\n    tables,\n    token,\n    subscribe\n});","import {\r\n    SET_LOADING_TRUE,\r\n    SET_LOADING_FALSE\r\n} from '../actions/types';\r\n\r\nconst initialState = false;\r\n\r\nexport default function loading(state=initialState,action){\r\n\r\n    const {type,payload} = action;\r\n    switch(type){\r\n\r\n        case SET_LOADING_FALSE:\r\n        case SET_LOADING_TRUE:\r\n            return payload\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore,applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer, \n    initialState, \n    composeWithDevTools(applyMiddleware(...middleware))\n    );\n\nexport default store;","import React, { useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Dashboard from './pages/Dashboard';\nimport Forgot from './pages/Forgot';\nimport PrivateRoute from './pages/routing/PrivateRoute';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nif(localStorage.token){\n    setAuthToken(localStorage.token);\n}\n\nconst customTheme = createMuiTheme({\n    typography: {\n     \"fontFamily\": `\"Noto Sans\", \"Roboto\", \"Arial\", sans-serif`,\n     \"fontSize\": 14,\n     \"fontWeightRegular\": 400,\n     \"fontWeightBold\":700,\n    },\n});\n\nfunction App() {\n    \n    useEffect(()=>{\n        store.dispatch(loadUser());\n    },[]);\n\n    return (\n        \n        <ThemeProvider theme={customTheme}>\n        <Provider store={store}>\n            <BrowserRouter>\n                <section>\n                    <Switch>\n                        <Route exact path=\"/\" component={Login}/>\n                        <Route exact path=\"/register\" component={Register}/>\n                        <Route exact path=\"/forgot\" component={Forgot}/>\n                        <PrivateRoute exact path=\"/dashboard\" component={Dashboard}/>\n                    </Switch>\n                </section>\n            </BrowserRouter>\n        </Provider>\n        </ThemeProvider>\n       \n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  \n  <App />,document.getElementById('root')\n);\n"],"sourceRoot":""}